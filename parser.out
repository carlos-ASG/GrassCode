Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CATCH
    CONST
    INIT
    MODULOINCREMENTO
    RETURN
    TRY

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statement statements
Rule 3     statements -> empty
Rule 4     statement -> fun_statement
Rule 5     statement -> variable_declaration
Rule 6     statement -> assignment
Rule 7     statement -> if_statement
Rule 8     statement -> for_statement
Rule 9     statement -> call_fun
Rule 10    statement -> import
Rule 11    statement -> empty
Rule 12    statement -> leer_arreglo
Rule 13    statement -> while_statement
Rule 14    import -> BRING ID PUNTOCOMA
Rule 15    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 16    fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 17    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 18    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
Rule 19    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
Rule 20    fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 21    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
Rule 22    fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 23    fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 24    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 25    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 26    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 27    if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 28    if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 29    if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 30    if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 31    if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 32    if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 33    if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
Rule 34    if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 35    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
Rule 36    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 37    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
Rule 38    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 39    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 40    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
Rule 41    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
Rule 42    for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 43    call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 44    call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 45    call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 46    call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 47    call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 48    call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 49    call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA
Rule 50    call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
Rule 51    call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 52    call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
Rule 53    call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
Rule 54    variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA
Rule 55    variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA
Rule 56    variable_declaration -> datatype ID PUNTOCOMA
Rule 57    variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
Rule 58    variable_declaration -> ID PUNTOCOMA
Rule 59    variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
Rule 60    variable_declaration -> datatype ASIGNAR expression PUNTOCOMA
Rule 61    variable_declaration -> datatype ASIGNAR condition PUNTOCOMA
Rule 62    variable_declaration -> datatype PUNTOCOMA
Rule 63    variable_declaration -> datatype ID expression PUNTOCOMA
Rule 64    variable_declaration -> datatype ID condition PUNTOCOMA
Rule 65    variable_declaration -> datatype ID ASIGNAR expression
Rule 66    variable_declaration -> datatype ID ASIGNAR condition
Rule 67    variable_declaration -> datatype ID
Rule 68    variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
Rule 69    variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
Rule 70    variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
Rule 71    variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
Rule 72    variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
Rule 73    variable_declaration -> datatype ID ASIGNAR PUNTOCOMA
Rule 74    variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
Rule 75    assignment -> ID ASIGNAR expression PUNTOCOMA
Rule 76    assignment -> ID ASIGNAR condition PUNTOCOMA
Rule 77    assignment -> ASIGNAR expression PUNTOCOMA
Rule 78    assignment -> ID expression PUNTOCOMA
Rule 79    assignment -> ID ASIGNAR PUNTOCOMA
Rule 80    assignment -> ID ASIGNAR expression
Rule 81    expression_list -> expression
Rule 82    expression_list -> expression COMA expression_list
Rule 83    expression_list -> empty
Rule 84    leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
Rule 85    while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 86    while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 87    while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
Rule 88    while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
Rule 89    condition -> condition AND condition
Rule 90    condition -> condition OR condition
Rule 91    condition -> NOT condition
Rule 92    condition -> condition MENORQUE condition
Rule 93    condition -> condition MAYORQUE condition
Rule 94    condition -> condition IGUAL condition
Rule 95    condition -> condition DIFERENTE condition
Rule 96    condition -> condition MENORIGUAL condition
Rule 97    condition -> condition MAYORIGUAL condition
Rule 98    condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE
Rule 99    condition -> boleano
Rule 100   condition -> ID
Rule 101   condition -> NUMERO
Rule 102   condition -> ENTERO
Rule 103   condition -> call_fun
Rule 104   expression -> ID
Rule 105   expression -> NUMERO
Rule 106   expression -> ENTERO
Rule 107   expression -> expression SUMA expression
Rule 108   expression -> expression RESTA expression
Rule 109   expression -> expression MULTIPLICACION expression
Rule 110   expression -> expression DIVISION expression
Rule 111   expression -> expression MODULO expression
Rule 112   expression -> expression MASIGUAL expression
Rule 113   expression -> expression MENOSIGUAL expression
Rule 114   expression -> expression DIVIGUAL expression
Rule 115   expression -> expression MULTIGUAL condition
Rule 116   expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE
Rule 117   parameters -> datatype ID
Rule 118   parameters -> datatype ID COMA parameters
Rule 119   parameters -> empty
Rule 120   datatype -> VOID
Rule 121   datatype -> FLOAT
Rule 122   datatype -> INT
Rule 123   datatype -> BOOL
Rule 124   boleano -> TRUE
Rule 125   boleano -> FALSE
Rule 126   empty -> <empty>

Terminals, with rules where they appear

AND                  : 89
ASIGNAR              : 54 55 57 59 60 61 65 66 68 69 70 71 73 74 75 76 77 79 80
BOOL                 : 123
BRING                : 14
CATCH                : 
COMA                 : 82 118
CONST                : 
CORCHETE_APERTURA    : 57 59 68 70 71 72 74 84
CORCHETE_CIERRE      : 57 59 68 69 71 72 74 84
DIFERENTE            : 95
DIVIGUAL             : 114
DIVISION             : 110
DOSPUNTOS            : 15 16 18 19 20 21 22 23
ELSE                 : 26 28 30 32 34 36 38 40 41
ENTERO               : 102 106
FALSE                : 125
FLOAT                : 121
FOR                  : 42
FUN                  : 15 17 18 19 20 21 22 23 24
ID                   : 14 15 16 17 18 19 21 22 23 24 43 44 44 46 47 48 48 49 50 50 51 52 53 53 54 55 56 57 58 59 63 64 65 66 67 68 69 70 72 73 74 75 76 78 79 80 84 100 104 117 118
IF                   : 25 26 29 30 31 32 33 34 35 36 37 38 39 40 41
IGUAL                : 94
INIT                 : 
INT                  : 122
LLAVE_APERTURA       : 15 16 17 18 20 21 22 23 24 25 26 26 27 28 28 29 30 30 31 32 32 33 34 34 36 37 38 38 39 39 40 41 41 42 85 86 87
LLAVE_CIERRE         : 15 16 17 19 20 21 22 23 24 25 26 26 27 28 28 29 30 30 31 32 32 33 34 34 35 36 36 38 39 39 40 40 41 42 85 86 87 88
MASIGUAL             : 112
MAYORIGUAL           : 97
MAYORQUE             : 93
MENORIGUAL           : 96
MENORQUE             : 92
MENOSIGUAL           : 113
MODULO               : 111
MODULOINCREMENTO     : 
MULTIGUAL            : 115
MULTIPLICACION       : 109
NOT                  : 91
NUMERO               : 101 105
OR                   : 90
PARENTESIS_APERTURA  : 15 16 17 18 19 20 21 23 24 25 26 27 28 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 49 50 51 52 53 85 87 88 98 116
PARENTESIS_CIERRE    : 15 16 17 18 19 20 21 22 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 42 43 44 45 46 47 48 51 52 53 85 86 88 98 116
PUNTO                : 44 46 48 50 51 53
PUNTOCOMA            : 14 42 43 44 45 46 47 48 49 50 51 54 55 56 57 58 59 60 61 62 63 64 69 70 71 72 73 74 75 76 77 78 79 84
RESTA                : 108
RETURN               : 
SUMA                 : 107
TRUE                 : 124
TRY                  : 
VOID                 : 120
WHILE                : 85 86 87 88
error                : 

Nonterminals, with rules where they appear

assignment           : 6
boleano              : 99
call_fun             : 9 103
condition            : 25 26 27 28 29 30 33 34 35 36 37 38 39 40 41 42 55 61 64 66 76 85 86 87 88 89 89 90 90 91 92 92 93 93 94 94 95 95 96 96 97 97 98 115
datatype             : 15 16 18 19 20 22 23 24 54 55 56 57 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 117 118
empty                : 3 11 83 119
expression           : 42 54 60 63 65 75 77 78 80 81 82 84 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 115 116
expression_list      : 43 44 45 46 47 48 49 50 51 52 53 57 59 68 69 70 71 72 82
for_statement        : 8
fun_statement        : 4
if_statement         : 7
import               : 10
leer_arreglo         : 12
parameters           : 15 16 17 18 19 20 21 22 23 24 118
statement            : 1 2
statements           : 2 15 16 17 18 19 20 21 22 23 24 25 26 26 27 28 28 29 30 30 31 32 32 33 34 34 35 36 36 37 38 38 39 39 40 40 41 41 42 85 86 87 88 0
variable_declaration : 5 42
while_statement      : 13

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement .
    (2) statements -> statement . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! reduce/reduce conflict for $end resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for LLAVE_CIERRE resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for ELSE resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for FUN resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for ID resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for CORCHETE_APERTURA resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for ASIGNAR resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for IF resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for PARENTESIS_APERTURA resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for FOR resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for PUNTO resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for BRING resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for WHILE resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for VOID resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for INT resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for BOOL resolved using rule 1 (statements -> statement .)
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (statements -> statement .)
    LLAVE_CIERRE    reduce using rule 1 (statements -> statement .)
    ELSE            reduce using rule 1 (statements -> statement .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 1 (statements -> statement .) ]
  ! ID              [ reduce using rule 1 (statements -> statement .) ]
  ! CORCHETE_APERTURA [ reduce using rule 1 (statements -> statement .) ]
  ! ASIGNAR         [ reduce using rule 1 (statements -> statement .) ]
  ! IF              [ reduce using rule 1 (statements -> statement .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 1 (statements -> statement .) ]
  ! FOR             [ reduce using rule 1 (statements -> statement .) ]
  ! PUNTO           [ reduce using rule 1 (statements -> statement .) ]
  ! BRING           [ reduce using rule 1 (statements -> statement .) ]
  ! WHILE           [ reduce using rule 1 (statements -> statement .) ]
  ! VOID            [ reduce using rule 1 (statements -> statement .) ]
  ! FLOAT           [ reduce using rule 1 (statements -> statement .) ]
  ! INT             [ reduce using rule 1 (statements -> statement .) ]
  ! BOOL            [ reduce using rule 1 (statements -> statement .) ]
  ! $end            [ reduce using rule 126 (empty -> .) ]
  ! LLAVE_CIERRE    [ reduce using rule 126 (empty -> .) ]
  ! ELSE            [ reduce using rule 126 (empty -> .) ]
  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statement                      shift and go to state 2
    statements                     shift and go to state 28
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 3

    (3) statements -> empty .
    (11) statement -> empty .

  ! reduce/reduce conflict for FUN resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for CORCHETE_APERTURA resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ASIGNAR resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for PARENTESIS_APERTURA resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for PUNTO resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for BRING resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for WHILE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for VOID resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for BOOL resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for LLAVE_CIERRE resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ELSE resolved using rule 3 (statements -> empty .)
    $end            reduce using rule 3 (statements -> empty .)
    LLAVE_CIERRE    reduce using rule 3 (statements -> empty .)
    ELSE            reduce using rule 3 (statements -> empty .)
    FUN             reduce using rule 3 (statements -> empty .)
    ID              reduce using rule 3 (statements -> empty .)
    CORCHETE_APERTURA reduce using rule 3 (statements -> empty .)
    ASIGNAR         reduce using rule 3 (statements -> empty .)
    IF              reduce using rule 3 (statements -> empty .)
    PARENTESIS_APERTURA reduce using rule 3 (statements -> empty .)
    FOR             reduce using rule 3 (statements -> empty .)
    PUNTO           reduce using rule 3 (statements -> empty .)
    BRING           reduce using rule 3 (statements -> empty .)
    WHILE           reduce using rule 3 (statements -> empty .)
    VOID            reduce using rule 3 (statements -> empty .)
    FLOAT           reduce using rule 3 (statements -> empty .)
    INT             reduce using rule 3 (statements -> empty .)
    BOOL            reduce using rule 3 (statements -> empty .)

  ! FUN             [ reduce using rule 11 (statement -> empty .) ]
  ! ID              [ reduce using rule 11 (statement -> empty .) ]
  ! CORCHETE_APERTURA [ reduce using rule 11 (statement -> empty .) ]
  ! ASIGNAR         [ reduce using rule 11 (statement -> empty .) ]
  ! IF              [ reduce using rule 11 (statement -> empty .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 11 (statement -> empty .) ]
  ! FOR             [ reduce using rule 11 (statement -> empty .) ]
  ! PUNTO           [ reduce using rule 11 (statement -> empty .) ]
  ! BRING           [ reduce using rule 11 (statement -> empty .) ]
  ! WHILE           [ reduce using rule 11 (statement -> empty .) ]
  ! VOID            [ reduce using rule 11 (statement -> empty .) ]
  ! FLOAT           [ reduce using rule 11 (statement -> empty .) ]
  ! INT             [ reduce using rule 11 (statement -> empty .) ]
  ! BOOL            [ reduce using rule 11 (statement -> empty .) ]
  ! $end            [ reduce using rule 11 (statement -> empty .) ]
  ! LLAVE_CIERRE    [ reduce using rule 11 (statement -> empty .) ]
  ! ELSE            [ reduce using rule 11 (statement -> empty .) ]


state 4

    (4) statement -> fun_statement .

    FUN             reduce using rule 4 (statement -> fun_statement .)
    ID              reduce using rule 4 (statement -> fun_statement .)
    CORCHETE_APERTURA reduce using rule 4 (statement -> fun_statement .)
    ASIGNAR         reduce using rule 4 (statement -> fun_statement .)
    IF              reduce using rule 4 (statement -> fun_statement .)
    PARENTESIS_APERTURA reduce using rule 4 (statement -> fun_statement .)
    FOR             reduce using rule 4 (statement -> fun_statement .)
    PUNTO           reduce using rule 4 (statement -> fun_statement .)
    BRING           reduce using rule 4 (statement -> fun_statement .)
    WHILE           reduce using rule 4 (statement -> fun_statement .)
    VOID            reduce using rule 4 (statement -> fun_statement .)
    FLOAT           reduce using rule 4 (statement -> fun_statement .)
    INT             reduce using rule 4 (statement -> fun_statement .)
    BOOL            reduce using rule 4 (statement -> fun_statement .)
    $end            reduce using rule 4 (statement -> fun_statement .)
    LLAVE_CIERRE    reduce using rule 4 (statement -> fun_statement .)
    ELSE            reduce using rule 4 (statement -> fun_statement .)


state 5

    (5) statement -> variable_declaration .

    FUN             reduce using rule 5 (statement -> variable_declaration .)
    ID              reduce using rule 5 (statement -> variable_declaration .)
    CORCHETE_APERTURA reduce using rule 5 (statement -> variable_declaration .)
    ASIGNAR         reduce using rule 5 (statement -> variable_declaration .)
    IF              reduce using rule 5 (statement -> variable_declaration .)
    PARENTESIS_APERTURA reduce using rule 5 (statement -> variable_declaration .)
    FOR             reduce using rule 5 (statement -> variable_declaration .)
    PUNTO           reduce using rule 5 (statement -> variable_declaration .)
    BRING           reduce using rule 5 (statement -> variable_declaration .)
    WHILE           reduce using rule 5 (statement -> variable_declaration .)
    VOID            reduce using rule 5 (statement -> variable_declaration .)
    FLOAT           reduce using rule 5 (statement -> variable_declaration .)
    INT             reduce using rule 5 (statement -> variable_declaration .)
    BOOL            reduce using rule 5 (statement -> variable_declaration .)
    $end            reduce using rule 5 (statement -> variable_declaration .)
    LLAVE_CIERRE    reduce using rule 5 (statement -> variable_declaration .)
    ELSE            reduce using rule 5 (statement -> variable_declaration .)


state 6

    (6) statement -> assignment .

    FUN             reduce using rule 6 (statement -> assignment .)
    ID              reduce using rule 6 (statement -> assignment .)
    CORCHETE_APERTURA reduce using rule 6 (statement -> assignment .)
    ASIGNAR         reduce using rule 6 (statement -> assignment .)
    IF              reduce using rule 6 (statement -> assignment .)
    PARENTESIS_APERTURA reduce using rule 6 (statement -> assignment .)
    FOR             reduce using rule 6 (statement -> assignment .)
    PUNTO           reduce using rule 6 (statement -> assignment .)
    BRING           reduce using rule 6 (statement -> assignment .)
    WHILE           reduce using rule 6 (statement -> assignment .)
    VOID            reduce using rule 6 (statement -> assignment .)
    FLOAT           reduce using rule 6 (statement -> assignment .)
    INT             reduce using rule 6 (statement -> assignment .)
    BOOL            reduce using rule 6 (statement -> assignment .)
    $end            reduce using rule 6 (statement -> assignment .)
    LLAVE_CIERRE    reduce using rule 6 (statement -> assignment .)
    ELSE            reduce using rule 6 (statement -> assignment .)


state 7

    (7) statement -> if_statement .

    FUN             reduce using rule 7 (statement -> if_statement .)
    ID              reduce using rule 7 (statement -> if_statement .)
    CORCHETE_APERTURA reduce using rule 7 (statement -> if_statement .)
    ASIGNAR         reduce using rule 7 (statement -> if_statement .)
    IF              reduce using rule 7 (statement -> if_statement .)
    PARENTESIS_APERTURA reduce using rule 7 (statement -> if_statement .)
    FOR             reduce using rule 7 (statement -> if_statement .)
    PUNTO           reduce using rule 7 (statement -> if_statement .)
    BRING           reduce using rule 7 (statement -> if_statement .)
    WHILE           reduce using rule 7 (statement -> if_statement .)
    VOID            reduce using rule 7 (statement -> if_statement .)
    FLOAT           reduce using rule 7 (statement -> if_statement .)
    INT             reduce using rule 7 (statement -> if_statement .)
    BOOL            reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)
    LLAVE_CIERRE    reduce using rule 7 (statement -> if_statement .)
    ELSE            reduce using rule 7 (statement -> if_statement .)


state 8

    (8) statement -> for_statement .

    FUN             reduce using rule 8 (statement -> for_statement .)
    ID              reduce using rule 8 (statement -> for_statement .)
    CORCHETE_APERTURA reduce using rule 8 (statement -> for_statement .)
    ASIGNAR         reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    PARENTESIS_APERTURA reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    PUNTO           reduce using rule 8 (statement -> for_statement .)
    BRING           reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    VOID            reduce using rule 8 (statement -> for_statement .)
    FLOAT           reduce using rule 8 (statement -> for_statement .)
    INT             reduce using rule 8 (statement -> for_statement .)
    BOOL            reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    LLAVE_CIERRE    reduce using rule 8 (statement -> for_statement .)
    ELSE            reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> call_fun .

    FUN             reduce using rule 9 (statement -> call_fun .)
    ID              reduce using rule 9 (statement -> call_fun .)
    CORCHETE_APERTURA reduce using rule 9 (statement -> call_fun .)
    ASIGNAR         reduce using rule 9 (statement -> call_fun .)
    IF              reduce using rule 9 (statement -> call_fun .)
    PARENTESIS_APERTURA reduce using rule 9 (statement -> call_fun .)
    FOR             reduce using rule 9 (statement -> call_fun .)
    PUNTO           reduce using rule 9 (statement -> call_fun .)
    BRING           reduce using rule 9 (statement -> call_fun .)
    WHILE           reduce using rule 9 (statement -> call_fun .)
    VOID            reduce using rule 9 (statement -> call_fun .)
    FLOAT           reduce using rule 9 (statement -> call_fun .)
    INT             reduce using rule 9 (statement -> call_fun .)
    BOOL            reduce using rule 9 (statement -> call_fun .)
    $end            reduce using rule 9 (statement -> call_fun .)
    LLAVE_CIERRE    reduce using rule 9 (statement -> call_fun .)
    ELSE            reduce using rule 9 (statement -> call_fun .)


state 10

    (10) statement -> import .

    FUN             reduce using rule 10 (statement -> import .)
    ID              reduce using rule 10 (statement -> import .)
    CORCHETE_APERTURA reduce using rule 10 (statement -> import .)
    ASIGNAR         reduce using rule 10 (statement -> import .)
    IF              reduce using rule 10 (statement -> import .)
    PARENTESIS_APERTURA reduce using rule 10 (statement -> import .)
    FOR             reduce using rule 10 (statement -> import .)
    PUNTO           reduce using rule 10 (statement -> import .)
    BRING           reduce using rule 10 (statement -> import .)
    WHILE           reduce using rule 10 (statement -> import .)
    VOID            reduce using rule 10 (statement -> import .)
    FLOAT           reduce using rule 10 (statement -> import .)
    INT             reduce using rule 10 (statement -> import .)
    BOOL            reduce using rule 10 (statement -> import .)
    $end            reduce using rule 10 (statement -> import .)
    LLAVE_CIERRE    reduce using rule 10 (statement -> import .)
    ELSE            reduce using rule 10 (statement -> import .)


state 11

    (12) statement -> leer_arreglo .

    FUN             reduce using rule 12 (statement -> leer_arreglo .)
    ID              reduce using rule 12 (statement -> leer_arreglo .)
    CORCHETE_APERTURA reduce using rule 12 (statement -> leer_arreglo .)
    ASIGNAR         reduce using rule 12 (statement -> leer_arreglo .)
    IF              reduce using rule 12 (statement -> leer_arreglo .)
    PARENTESIS_APERTURA reduce using rule 12 (statement -> leer_arreglo .)
    FOR             reduce using rule 12 (statement -> leer_arreglo .)
    PUNTO           reduce using rule 12 (statement -> leer_arreglo .)
    BRING           reduce using rule 12 (statement -> leer_arreglo .)
    WHILE           reduce using rule 12 (statement -> leer_arreglo .)
    VOID            reduce using rule 12 (statement -> leer_arreglo .)
    FLOAT           reduce using rule 12 (statement -> leer_arreglo .)
    INT             reduce using rule 12 (statement -> leer_arreglo .)
    BOOL            reduce using rule 12 (statement -> leer_arreglo .)
    $end            reduce using rule 12 (statement -> leer_arreglo .)
    LLAVE_CIERRE    reduce using rule 12 (statement -> leer_arreglo .)
    ELSE            reduce using rule 12 (statement -> leer_arreglo .)


state 12

    (13) statement -> while_statement .

    FUN             reduce using rule 13 (statement -> while_statement .)
    ID              reduce using rule 13 (statement -> while_statement .)
    CORCHETE_APERTURA reduce using rule 13 (statement -> while_statement .)
    ASIGNAR         reduce using rule 13 (statement -> while_statement .)
    IF              reduce using rule 13 (statement -> while_statement .)
    PARENTESIS_APERTURA reduce using rule 13 (statement -> while_statement .)
    FOR             reduce using rule 13 (statement -> while_statement .)
    PUNTO           reduce using rule 13 (statement -> while_statement .)
    BRING           reduce using rule 13 (statement -> while_statement .)
    WHILE           reduce using rule 13 (statement -> while_statement .)
    VOID            reduce using rule 13 (statement -> while_statement .)
    FLOAT           reduce using rule 13 (statement -> while_statement .)
    INT             reduce using rule 13 (statement -> while_statement .)
    BOOL            reduce using rule 13 (statement -> while_statement .)
    $end            reduce using rule 13 (statement -> while_statement .)
    LLAVE_CIERRE    reduce using rule 13 (statement -> while_statement .)
    ELSE            reduce using rule 13 (statement -> while_statement .)


state 13

    (15) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> FUN . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> FUN . ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE

    ID              shift and go to state 29
    PARENTESIS_APERTURA shift and go to state 30


state 14

    (16) fun_statement -> ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (58) variable_declaration -> ID . PUNTOCOMA
    (75) assignment -> ID . ASIGNAR expression PUNTOCOMA
    (76) assignment -> ID . ASIGNAR condition PUNTOCOMA
    (78) assignment -> ID . expression PUNTOCOMA
    (79) assignment -> ID . ASIGNAR PUNTOCOMA
    (80) assignment -> ID . ASIGNAR expression
    (43) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> ID . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> ID . PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID . PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> ID . PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (84) leer_arreglo -> ID . CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (126) empty -> .

    PARENTESIS_APERTURA shift and go to state 32
    PUNTOCOMA       shift and go to state 33
    ASIGNAR         shift and go to state 34
    PUNTO           shift and go to state 37
    CORCHETE_APERTURA shift and go to state 38
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    expression                     shift and go to state 35
    expression_list                shift and go to state 36
    empty                          shift and go to state 41

state 15

    (27) if_statement -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (45) call_fun -> PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 42
    ID              shift and go to state 47
    NUMERO          shift and go to state 48
    ENTERO          shift and go to state 49
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    condition                      shift and go to state 43
    expression_list                shift and go to state 44
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 16

    (54) variable_declaration -> datatype . ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> datatype . ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> datatype . ID PUNTOCOMA
    (57) variable_declaration -> datatype . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> datatype . ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> datatype . ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> datatype . PUNTOCOMA
    (63) variable_declaration -> datatype . ID expression PUNTOCOMA
    (64) variable_declaration -> datatype . ID condition PUNTOCOMA
    (65) variable_declaration -> datatype . ID ASIGNAR expression
    (66) variable_declaration -> datatype . ID ASIGNAR condition
    (67) variable_declaration -> datatype . ID
    (68) variable_declaration -> datatype . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> datatype . CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> datatype . CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> datatype . CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> datatype . CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> datatype . ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> datatype . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA

    ID              shift and go to state 54
    CORCHETE_APERTURA shift and go to state 57
    ASIGNAR         shift and go to state 55
    PUNTOCOMA       shift and go to state 56
    CORCHETE_CIERRE shift and go to state 58


state 17

    (77) assignment -> ASIGNAR . expression PUNTOCOMA
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 59

state 18

    (59) variable_declaration -> CORCHETE_APERTURA . CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA

    CORCHETE_CIERRE shift and go to state 61


state 19

    (25) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> IF . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> IF . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> IF . PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> IF . PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> IF . PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> IF . PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    PARENTESIS_APERTURA shift and go to state 62
    NOT             shift and go to state 45
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 63
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 20

    (42) for_statement -> FOR . PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_APERTURA shift and go to state 67


state 21

    (46) call_fun -> PUNTO . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA

    ID              shift and go to state 68


state 22

    (14) import -> BRING . ID PUNTOCOMA

    ID              shift and go to state 69


state 23

    (85) while_statement -> WHILE . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> WHILE . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> WHILE . PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> WHILE . PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    PARENTESIS_APERTURA shift and go to state 70
    NOT             shift and go to state 45
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 71
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 24

    (120) datatype -> VOID .

    ID              reduce using rule 120 (datatype -> VOID .)
    CORCHETE_APERTURA reduce using rule 120 (datatype -> VOID .)
    ASIGNAR         reduce using rule 120 (datatype -> VOID .)
    PUNTOCOMA       reduce using rule 120 (datatype -> VOID .)
    CORCHETE_CIERRE reduce using rule 120 (datatype -> VOID .)
    LLAVE_APERTURA  reduce using rule 120 (datatype -> VOID .)
    FUN             reduce using rule 120 (datatype -> VOID .)
    IF              reduce using rule 120 (datatype -> VOID .)
    PARENTESIS_APERTURA reduce using rule 120 (datatype -> VOID .)
    FOR             reduce using rule 120 (datatype -> VOID .)
    PUNTO           reduce using rule 120 (datatype -> VOID .)
    BRING           reduce using rule 120 (datatype -> VOID .)
    WHILE           reduce using rule 120 (datatype -> VOID .)
    VOID            reduce using rule 120 (datatype -> VOID .)
    FLOAT           reduce using rule 120 (datatype -> VOID .)
    INT             reduce using rule 120 (datatype -> VOID .)
    BOOL            reduce using rule 120 (datatype -> VOID .)
    LLAVE_CIERRE    reduce using rule 120 (datatype -> VOID .)


state 25

    (121) datatype -> FLOAT .

    ID              reduce using rule 121 (datatype -> FLOAT .)
    CORCHETE_APERTURA reduce using rule 121 (datatype -> FLOAT .)
    ASIGNAR         reduce using rule 121 (datatype -> FLOAT .)
    PUNTOCOMA       reduce using rule 121 (datatype -> FLOAT .)
    CORCHETE_CIERRE reduce using rule 121 (datatype -> FLOAT .)
    LLAVE_APERTURA  reduce using rule 121 (datatype -> FLOAT .)
    FUN             reduce using rule 121 (datatype -> FLOAT .)
    IF              reduce using rule 121 (datatype -> FLOAT .)
    PARENTESIS_APERTURA reduce using rule 121 (datatype -> FLOAT .)
    FOR             reduce using rule 121 (datatype -> FLOAT .)
    PUNTO           reduce using rule 121 (datatype -> FLOAT .)
    BRING           reduce using rule 121 (datatype -> FLOAT .)
    WHILE           reduce using rule 121 (datatype -> FLOAT .)
    VOID            reduce using rule 121 (datatype -> FLOAT .)
    FLOAT           reduce using rule 121 (datatype -> FLOAT .)
    INT             reduce using rule 121 (datatype -> FLOAT .)
    BOOL            reduce using rule 121 (datatype -> FLOAT .)
    LLAVE_CIERRE    reduce using rule 121 (datatype -> FLOAT .)


state 26

    (122) datatype -> INT .

    ID              reduce using rule 122 (datatype -> INT .)
    CORCHETE_APERTURA reduce using rule 122 (datatype -> INT .)
    ASIGNAR         reduce using rule 122 (datatype -> INT .)
    PUNTOCOMA       reduce using rule 122 (datatype -> INT .)
    CORCHETE_CIERRE reduce using rule 122 (datatype -> INT .)
    LLAVE_APERTURA  reduce using rule 122 (datatype -> INT .)
    FUN             reduce using rule 122 (datatype -> INT .)
    IF              reduce using rule 122 (datatype -> INT .)
    PARENTESIS_APERTURA reduce using rule 122 (datatype -> INT .)
    FOR             reduce using rule 122 (datatype -> INT .)
    PUNTO           reduce using rule 122 (datatype -> INT .)
    BRING           reduce using rule 122 (datatype -> INT .)
    WHILE           reduce using rule 122 (datatype -> INT .)
    VOID            reduce using rule 122 (datatype -> INT .)
    FLOAT           reduce using rule 122 (datatype -> INT .)
    INT             reduce using rule 122 (datatype -> INT .)
    BOOL            reduce using rule 122 (datatype -> INT .)
    LLAVE_CIERRE    reduce using rule 122 (datatype -> INT .)


state 27

    (123) datatype -> BOOL .

    ID              reduce using rule 123 (datatype -> BOOL .)
    CORCHETE_APERTURA reduce using rule 123 (datatype -> BOOL .)
    ASIGNAR         reduce using rule 123 (datatype -> BOOL .)
    PUNTOCOMA       reduce using rule 123 (datatype -> BOOL .)
    CORCHETE_CIERRE reduce using rule 123 (datatype -> BOOL .)
    LLAVE_APERTURA  reduce using rule 123 (datatype -> BOOL .)
    FUN             reduce using rule 123 (datatype -> BOOL .)
    IF              reduce using rule 123 (datatype -> BOOL .)
    PARENTESIS_APERTURA reduce using rule 123 (datatype -> BOOL .)
    FOR             reduce using rule 123 (datatype -> BOOL .)
    PUNTO           reduce using rule 123 (datatype -> BOOL .)
    BRING           reduce using rule 123 (datatype -> BOOL .)
    WHILE           reduce using rule 123 (datatype -> BOOL .)
    VOID            reduce using rule 123 (datatype -> BOOL .)
    FLOAT           reduce using rule 123 (datatype -> BOOL .)
    INT             reduce using rule 123 (datatype -> BOOL .)
    BOOL            reduce using rule 123 (datatype -> BOOL .)
    LLAVE_CIERRE    reduce using rule 123 (datatype -> BOOL .)


state 28

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)
    LLAVE_CIERRE    reduce using rule 2 (statements -> statement statements .)
    ELSE            reduce using rule 2 (statements -> statement statements .)
    FUN             reduce using rule 2 (statements -> statement statements .)
    ID              reduce using rule 2 (statements -> statement statements .)
    CORCHETE_APERTURA reduce using rule 2 (statements -> statement statements .)
    ASIGNAR         reduce using rule 2 (statements -> statement statements .)
    IF              reduce using rule 2 (statements -> statement statements .)
    PARENTESIS_APERTURA reduce using rule 2 (statements -> statement statements .)
    FOR             reduce using rule 2 (statements -> statement statements .)
    PUNTO           reduce using rule 2 (statements -> statement statements .)
    BRING           reduce using rule 2 (statements -> statement statements .)
    WHILE           reduce using rule 2 (statements -> statement statements .)
    VOID            reduce using rule 2 (statements -> statement statements .)
    FLOAT           reduce using rule 2 (statements -> statement statements .)
    INT             reduce using rule 2 (statements -> statement statements .)
    BOOL            reduce using rule 2 (statements -> statement statements .)


state 29

    (15) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> FUN ID . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (117) parameters -> . datatype ID
    (118) parameters -> . datatype ID COMA parameters
    (119) parameters -> . empty
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL
    (126) empty -> .

    PARENTESIS_APERTURA shift and go to state 72
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    parameters                     shift and go to state 73
    datatype                       shift and go to state 74
    empty                          shift and go to state 75

state 30

    (20) fun_statement -> FUN PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (117) parameters -> . datatype ID
    (118) parameters -> . datatype ID COMA parameters
    (119) parameters -> . empty
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL
    (126) empty -> .

    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    parameters                     shift and go to state 76
    datatype                       shift and go to state 74
    empty                          shift and go to state 75

state 31

    (104) expression -> ID .

    PUNTOCOMA       reduce using rule 104 (expression -> ID .)
    SUMA            reduce using rule 104 (expression -> ID .)
    RESTA           reduce using rule 104 (expression -> ID .)
    MULTIPLICACION  reduce using rule 104 (expression -> ID .)
    DIVISION        reduce using rule 104 (expression -> ID .)
    MODULO          reduce using rule 104 (expression -> ID .)
    MASIGUAL        reduce using rule 104 (expression -> ID .)
    MENOSIGUAL      reduce using rule 104 (expression -> ID .)
    DIVIGUAL        reduce using rule 104 (expression -> ID .)
    MULTIGUAL       reduce using rule 104 (expression -> ID .)
    COMA            reduce using rule 104 (expression -> ID .)
    PARENTESIS_CIERRE reduce using rule 104 (expression -> ID .)
    CORCHETE_CIERRE reduce using rule 104 (expression -> ID .)
    FUN             reduce using rule 104 (expression -> ID .)
    ID              reduce using rule 104 (expression -> ID .)
    CORCHETE_APERTURA reduce using rule 104 (expression -> ID .)
    ASIGNAR         reduce using rule 104 (expression -> ID .)
    IF              reduce using rule 104 (expression -> ID .)
    PARENTESIS_APERTURA reduce using rule 104 (expression -> ID .)
    FOR             reduce using rule 104 (expression -> ID .)
    PUNTO           reduce using rule 104 (expression -> ID .)
    BRING           reduce using rule 104 (expression -> ID .)
    WHILE           reduce using rule 104 (expression -> ID .)
    VOID            reduce using rule 104 (expression -> ID .)
    FLOAT           reduce using rule 104 (expression -> ID .)
    INT             reduce using rule 104 (expression -> ID .)
    BOOL            reduce using rule 104 (expression -> ID .)
    $end            reduce using rule 104 (expression -> ID .)
    LLAVE_CIERRE    reduce using rule 104 (expression -> ID .)
    ELSE            reduce using rule 104 (expression -> ID .)
    NOT             reduce using rule 104 (expression -> ID .)
    NUMERO          reduce using rule 104 (expression -> ID .)
    ENTERO          reduce using rule 104 (expression -> ID .)
    TRUE            reduce using rule 104 (expression -> ID .)
    FALSE           reduce using rule 104 (expression -> ID .)


state 32

    (16) fun_statement -> ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID PARENTESIS_APERTURA . expression_list PUNTOCOMA
    (52) call_fun -> ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE
    (116) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (117) parameters -> . datatype ID
    (118) parameters -> . datatype ID COMA parameters
    (119) parameters -> . empty
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    parameters                     shift and go to state 77
    datatype                       shift and go to state 74
    expression_list                shift and go to state 78
    expression                     shift and go to state 79
    empty                          shift and go to state 80

state 33

    (58) variable_declaration -> ID PUNTOCOMA .

    FUN             reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    ID              reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    ASIGNAR         reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    IF              reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    FOR             reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    PUNTO           reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    BRING           reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    WHILE           reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    VOID            reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    FLOAT           reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    INT             reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    BOOL            reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    $end            reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    ELSE            reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    NOT             reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    NUMERO          reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    ENTERO          reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    TRUE            reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)
    FALSE           reduce using rule 58 (variable_declaration -> ID PUNTOCOMA .)


state 34

    (75) assignment -> ID ASIGNAR . expression PUNTOCOMA
    (76) assignment -> ID ASIGNAR . condition PUNTOCOMA
    (79) assignment -> ID ASIGNAR . PUNTOCOMA
    (80) assignment -> ID ASIGNAR . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    PUNTOCOMA       shift and go to state 83
    ID              shift and go to state 81
    NUMERO          shift and go to state 85
    ENTERO          shift and go to state 86
    PARENTESIS_APERTURA shift and go to state 87
    NOT             shift and go to state 45
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    expression                     shift and go to state 82
    condition                      shift and go to state 84
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 35

    (78) assignment -> ID expression . PUNTOCOMA
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition
    (81) expression_list -> expression .
    (82) expression_list -> expression . COMA expression_list

    PUNTOCOMA       shift and go to state 88
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97
    PARENTESIS_CIERRE reduce using rule 81 (expression_list -> expression .)
    COMA            shift and go to state 98


state 36

    (47) call_fun -> ID expression_list . PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_CIERRE shift and go to state 99


state 37

    (44) call_fun -> ID PUNTO . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> ID PUNTO . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (50) call_fun -> ID PUNTO . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> ID PUNTO . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (53) call_fun -> ID PUNTO . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    ID              shift and go to state 100
    PARENTESIS_APERTURA shift and go to state 101


state 38

    (84) leer_arreglo -> ID CORCHETE_APERTURA . expression CORCHETE_CIERRE PUNTOCOMA
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 102

state 39

    (105) expression -> NUMERO .

    PUNTOCOMA       reduce using rule 105 (expression -> NUMERO .)
    SUMA            reduce using rule 105 (expression -> NUMERO .)
    RESTA           reduce using rule 105 (expression -> NUMERO .)
    MULTIPLICACION  reduce using rule 105 (expression -> NUMERO .)
    DIVISION        reduce using rule 105 (expression -> NUMERO .)
    MODULO          reduce using rule 105 (expression -> NUMERO .)
    MASIGUAL        reduce using rule 105 (expression -> NUMERO .)
    MENOSIGUAL      reduce using rule 105 (expression -> NUMERO .)
    DIVIGUAL        reduce using rule 105 (expression -> NUMERO .)
    MULTIGUAL       reduce using rule 105 (expression -> NUMERO .)
    COMA            reduce using rule 105 (expression -> NUMERO .)
    PARENTESIS_CIERRE reduce using rule 105 (expression -> NUMERO .)
    CORCHETE_CIERRE reduce using rule 105 (expression -> NUMERO .)
    FUN             reduce using rule 105 (expression -> NUMERO .)
    ID              reduce using rule 105 (expression -> NUMERO .)
    CORCHETE_APERTURA reduce using rule 105 (expression -> NUMERO .)
    ASIGNAR         reduce using rule 105 (expression -> NUMERO .)
    IF              reduce using rule 105 (expression -> NUMERO .)
    PARENTESIS_APERTURA reduce using rule 105 (expression -> NUMERO .)
    FOR             reduce using rule 105 (expression -> NUMERO .)
    PUNTO           reduce using rule 105 (expression -> NUMERO .)
    BRING           reduce using rule 105 (expression -> NUMERO .)
    WHILE           reduce using rule 105 (expression -> NUMERO .)
    VOID            reduce using rule 105 (expression -> NUMERO .)
    FLOAT           reduce using rule 105 (expression -> NUMERO .)
    INT             reduce using rule 105 (expression -> NUMERO .)
    BOOL            reduce using rule 105 (expression -> NUMERO .)
    $end            reduce using rule 105 (expression -> NUMERO .)
    LLAVE_CIERRE    reduce using rule 105 (expression -> NUMERO .)
    ELSE            reduce using rule 105 (expression -> NUMERO .)
    NOT             reduce using rule 105 (expression -> NUMERO .)
    NUMERO          reduce using rule 105 (expression -> NUMERO .)
    ENTERO          reduce using rule 105 (expression -> NUMERO .)
    TRUE            reduce using rule 105 (expression -> NUMERO .)
    FALSE           reduce using rule 105 (expression -> NUMERO .)


state 40

    (106) expression -> ENTERO .

    PUNTOCOMA       reduce using rule 106 (expression -> ENTERO .)
    SUMA            reduce using rule 106 (expression -> ENTERO .)
    RESTA           reduce using rule 106 (expression -> ENTERO .)
    MULTIPLICACION  reduce using rule 106 (expression -> ENTERO .)
    DIVISION        reduce using rule 106 (expression -> ENTERO .)
    MODULO          reduce using rule 106 (expression -> ENTERO .)
    MASIGUAL        reduce using rule 106 (expression -> ENTERO .)
    MENOSIGUAL      reduce using rule 106 (expression -> ENTERO .)
    DIVIGUAL        reduce using rule 106 (expression -> ENTERO .)
    MULTIGUAL       reduce using rule 106 (expression -> ENTERO .)
    COMA            reduce using rule 106 (expression -> ENTERO .)
    PARENTESIS_CIERRE reduce using rule 106 (expression -> ENTERO .)
    CORCHETE_CIERRE reduce using rule 106 (expression -> ENTERO .)
    FUN             reduce using rule 106 (expression -> ENTERO .)
    ID              reduce using rule 106 (expression -> ENTERO .)
    CORCHETE_APERTURA reduce using rule 106 (expression -> ENTERO .)
    ASIGNAR         reduce using rule 106 (expression -> ENTERO .)
    IF              reduce using rule 106 (expression -> ENTERO .)
    PARENTESIS_APERTURA reduce using rule 106 (expression -> ENTERO .)
    FOR             reduce using rule 106 (expression -> ENTERO .)
    PUNTO           reduce using rule 106 (expression -> ENTERO .)
    BRING           reduce using rule 106 (expression -> ENTERO .)
    WHILE           reduce using rule 106 (expression -> ENTERO .)
    VOID            reduce using rule 106 (expression -> ENTERO .)
    FLOAT           reduce using rule 106 (expression -> ENTERO .)
    INT             reduce using rule 106 (expression -> ENTERO .)
    BOOL            reduce using rule 106 (expression -> ENTERO .)
    $end            reduce using rule 106 (expression -> ENTERO .)
    LLAVE_CIERRE    reduce using rule 106 (expression -> ENTERO .)
    ELSE            reduce using rule 106 (expression -> ENTERO .)
    NOT             reduce using rule 106 (expression -> ENTERO .)
    NUMERO          reduce using rule 106 (expression -> ENTERO .)
    ENTERO          reduce using rule 106 (expression -> ENTERO .)
    TRUE            reduce using rule 106 (expression -> ENTERO .)
    FALSE           reduce using rule 106 (expression -> ENTERO .)


state 41

    (83) expression_list -> empty .

    PARENTESIS_CIERRE reduce using rule 83 (expression_list -> empty .)
    PUNTOCOMA       reduce using rule 83 (expression_list -> empty .)
    FUN             reduce using rule 83 (expression_list -> empty .)
    ID              reduce using rule 83 (expression_list -> empty .)
    CORCHETE_APERTURA reduce using rule 83 (expression_list -> empty .)
    ASIGNAR         reduce using rule 83 (expression_list -> empty .)
    IF              reduce using rule 83 (expression_list -> empty .)
    PARENTESIS_APERTURA reduce using rule 83 (expression_list -> empty .)
    FOR             reduce using rule 83 (expression_list -> empty .)
    PUNTO           reduce using rule 83 (expression_list -> empty .)
    BRING           reduce using rule 83 (expression_list -> empty .)
    WHILE           reduce using rule 83 (expression_list -> empty .)
    VOID            reduce using rule 83 (expression_list -> empty .)
    FLOAT           reduce using rule 83 (expression_list -> empty .)
    INT             reduce using rule 83 (expression_list -> empty .)
    BOOL            reduce using rule 83 (expression_list -> empty .)
    $end            reduce using rule 83 (expression_list -> empty .)
    LLAVE_CIERRE    reduce using rule 83 (expression_list -> empty .)
    ELSE            reduce using rule 83 (expression_list -> empty .)
    NOT             reduce using rule 83 (expression_list -> empty .)
    NUMERO          reduce using rule 83 (expression_list -> empty .)
    ENTERO          reduce using rule 83 (expression_list -> empty .)
    TRUE            reduce using rule 83 (expression_list -> empty .)
    FALSE           reduce using rule 83 (expression_list -> empty .)


state 42

    (98) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (45) call_fun -> PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (116) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (126) empty -> .

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 103
    ID              shift and go to state 105
    NUMERO          shift and go to state 48
    ENTERO          shift and go to state 49
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    condition                      shift and go to state 104
    expression_list                shift and go to state 44
    expression                     shift and go to state 79
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50
    empty                          shift and go to state 41

state 43

    (27) if_statement -> PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 44

    (45) call_fun -> PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_CIERRE shift and go to state 115


state 45

    (91) condition -> NOT . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 116
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 46

    (99) condition -> boleano .

    PARENTESIS_CIERRE reduce using rule 99 (condition -> boleano .)
    AND             reduce using rule 99 (condition -> boleano .)
    OR              reduce using rule 99 (condition -> boleano .)
    MENORQUE        reduce using rule 99 (condition -> boleano .)
    MAYORQUE        reduce using rule 99 (condition -> boleano .)
    IGUAL           reduce using rule 99 (condition -> boleano .)
    DIFERENTE       reduce using rule 99 (condition -> boleano .)
    MENORIGUAL      reduce using rule 99 (condition -> boleano .)
    MAYORIGUAL      reduce using rule 99 (condition -> boleano .)
    PUNTOCOMA       reduce using rule 99 (condition -> boleano .)
    LLAVE_APERTURA  reduce using rule 99 (condition -> boleano .)
    SUMA            reduce using rule 99 (condition -> boleano .)
    RESTA           reduce using rule 99 (condition -> boleano .)
    MULTIPLICACION  reduce using rule 99 (condition -> boleano .)
    DIVISION        reduce using rule 99 (condition -> boleano .)
    MODULO          reduce using rule 99 (condition -> boleano .)
    MASIGUAL        reduce using rule 99 (condition -> boleano .)
    MENOSIGUAL      reduce using rule 99 (condition -> boleano .)
    DIVIGUAL        reduce using rule 99 (condition -> boleano .)
    MULTIGUAL       reduce using rule 99 (condition -> boleano .)
    COMA            reduce using rule 99 (condition -> boleano .)
    FUN             reduce using rule 99 (condition -> boleano .)
    ID              reduce using rule 99 (condition -> boleano .)
    CORCHETE_APERTURA reduce using rule 99 (condition -> boleano .)
    ASIGNAR         reduce using rule 99 (condition -> boleano .)
    IF              reduce using rule 99 (condition -> boleano .)
    PARENTESIS_APERTURA reduce using rule 99 (condition -> boleano .)
    FOR             reduce using rule 99 (condition -> boleano .)
    PUNTO           reduce using rule 99 (condition -> boleano .)
    BRING           reduce using rule 99 (condition -> boleano .)
    WHILE           reduce using rule 99 (condition -> boleano .)
    VOID            reduce using rule 99 (condition -> boleano .)
    FLOAT           reduce using rule 99 (condition -> boleano .)
    INT             reduce using rule 99 (condition -> boleano .)
    BOOL            reduce using rule 99 (condition -> boleano .)
    $end            reduce using rule 99 (condition -> boleano .)
    LLAVE_CIERRE    reduce using rule 99 (condition -> boleano .)
    ELSE            reduce using rule 99 (condition -> boleano .)
    CORCHETE_CIERRE reduce using rule 99 (condition -> boleano .)
    NOT             reduce using rule 99 (condition -> boleano .)
    NUMERO          reduce using rule 99 (condition -> boleano .)
    ENTERO          reduce using rule 99 (condition -> boleano .)
    TRUE            reduce using rule 99 (condition -> boleano .)
    FALSE           reduce using rule 99 (condition -> boleano .)


state 47

    (100) condition -> ID .
    (43) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> ID . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> ID . PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID . PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> ID . PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (104) expression -> ID .
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 100 (condition -> ID .)
    PARENTESIS_CIERRE reduce using rule 100 (condition -> ID .)
    AND             reduce using rule 100 (condition -> ID .)
    OR              reduce using rule 100 (condition -> ID .)
    MENORQUE        reduce using rule 100 (condition -> ID .)
    MAYORQUE        reduce using rule 100 (condition -> ID .)
    IGUAL           reduce using rule 100 (condition -> ID .)
    DIFERENTE       reduce using rule 100 (condition -> ID .)
    MENORIGUAL      reduce using rule 100 (condition -> ID .)
    MAYORIGUAL      reduce using rule 100 (condition -> ID .)
    LLAVE_APERTURA  reduce using rule 100 (condition -> ID .)
    PARENTESIS_APERTURA shift and go to state 118
    PUNTO           shift and go to state 37
    COMA            reduce using rule 104 (expression -> ID .)
    SUMA            reduce using rule 104 (expression -> ID .)
    RESTA           reduce using rule 104 (expression -> ID .)
    MULTIPLICACION  reduce using rule 104 (expression -> ID .)
    DIVISION        reduce using rule 104 (expression -> ID .)
    MODULO          reduce using rule 104 (expression -> ID .)
    MASIGUAL        reduce using rule 104 (expression -> ID .)
    MENOSIGUAL      reduce using rule 104 (expression -> ID .)
    DIVIGUAL        reduce using rule 104 (expression -> ID .)
    MULTIGUAL       reduce using rule 104 (expression -> ID .)
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40

  ! PARENTESIS_CIERRE [ reduce using rule 104 (expression -> ID .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 126 (empty -> .) ]

    expression_list                shift and go to state 36
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 48

    (101) condition -> NUMERO .
    (105) expression -> NUMERO .

  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 101 (condition -> NUMERO .)
    PARENTESIS_CIERRE reduce using rule 101 (condition -> NUMERO .)
    AND             reduce using rule 101 (condition -> NUMERO .)
    OR              reduce using rule 101 (condition -> NUMERO .)
    MENORQUE        reduce using rule 101 (condition -> NUMERO .)
    MAYORQUE        reduce using rule 101 (condition -> NUMERO .)
    IGUAL           reduce using rule 101 (condition -> NUMERO .)
    DIFERENTE       reduce using rule 101 (condition -> NUMERO .)
    MENORIGUAL      reduce using rule 101 (condition -> NUMERO .)
    MAYORIGUAL      reduce using rule 101 (condition -> NUMERO .)
    LLAVE_APERTURA  reduce using rule 101 (condition -> NUMERO .)
    COMA            reduce using rule 105 (expression -> NUMERO .)
    SUMA            reduce using rule 105 (expression -> NUMERO .)
    RESTA           reduce using rule 105 (expression -> NUMERO .)
    MULTIPLICACION  reduce using rule 105 (expression -> NUMERO .)
    DIVISION        reduce using rule 105 (expression -> NUMERO .)
    MODULO          reduce using rule 105 (expression -> NUMERO .)
    MASIGUAL        reduce using rule 105 (expression -> NUMERO .)
    MENOSIGUAL      reduce using rule 105 (expression -> NUMERO .)
    DIVIGUAL        reduce using rule 105 (expression -> NUMERO .)
    MULTIGUAL       reduce using rule 105 (expression -> NUMERO .)

  ! PARENTESIS_CIERRE [ reduce using rule 105 (expression -> NUMERO .) ]


state 49

    (102) condition -> ENTERO .
    (106) expression -> ENTERO .

  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 102 (condition -> ENTERO .)
    PARENTESIS_CIERRE reduce using rule 102 (condition -> ENTERO .)
    AND             reduce using rule 102 (condition -> ENTERO .)
    OR              reduce using rule 102 (condition -> ENTERO .)
    MENORQUE        reduce using rule 102 (condition -> ENTERO .)
    MAYORQUE        reduce using rule 102 (condition -> ENTERO .)
    IGUAL           reduce using rule 102 (condition -> ENTERO .)
    DIFERENTE       reduce using rule 102 (condition -> ENTERO .)
    MENORIGUAL      reduce using rule 102 (condition -> ENTERO .)
    MAYORIGUAL      reduce using rule 102 (condition -> ENTERO .)
    LLAVE_APERTURA  reduce using rule 102 (condition -> ENTERO .)
    COMA            reduce using rule 106 (expression -> ENTERO .)
    SUMA            reduce using rule 106 (expression -> ENTERO .)
    RESTA           reduce using rule 106 (expression -> ENTERO .)
    MULTIPLICACION  reduce using rule 106 (expression -> ENTERO .)
    DIVISION        reduce using rule 106 (expression -> ENTERO .)
    MODULO          reduce using rule 106 (expression -> ENTERO .)
    MASIGUAL        reduce using rule 106 (expression -> ENTERO .)
    MENOSIGUAL      reduce using rule 106 (expression -> ENTERO .)
    DIVIGUAL        reduce using rule 106 (expression -> ENTERO .)
    MULTIGUAL       reduce using rule 106 (expression -> ENTERO .)

  ! PARENTESIS_CIERRE [ reduce using rule 106 (expression -> ENTERO .) ]


state 50

    (103) condition -> call_fun .

    PARENTESIS_CIERRE reduce using rule 103 (condition -> call_fun .)
    AND             reduce using rule 103 (condition -> call_fun .)
    OR              reduce using rule 103 (condition -> call_fun .)
    MENORQUE        reduce using rule 103 (condition -> call_fun .)
    MAYORQUE        reduce using rule 103 (condition -> call_fun .)
    IGUAL           reduce using rule 103 (condition -> call_fun .)
    DIFERENTE       reduce using rule 103 (condition -> call_fun .)
    MENORIGUAL      reduce using rule 103 (condition -> call_fun .)
    MAYORIGUAL      reduce using rule 103 (condition -> call_fun .)
    PUNTOCOMA       reduce using rule 103 (condition -> call_fun .)
    LLAVE_APERTURA  reduce using rule 103 (condition -> call_fun .)
    SUMA            reduce using rule 103 (condition -> call_fun .)
    RESTA           reduce using rule 103 (condition -> call_fun .)
    MULTIPLICACION  reduce using rule 103 (condition -> call_fun .)
    DIVISION        reduce using rule 103 (condition -> call_fun .)
    MODULO          reduce using rule 103 (condition -> call_fun .)
    MASIGUAL        reduce using rule 103 (condition -> call_fun .)
    MENOSIGUAL      reduce using rule 103 (condition -> call_fun .)
    DIVIGUAL        reduce using rule 103 (condition -> call_fun .)
    MULTIGUAL       reduce using rule 103 (condition -> call_fun .)
    COMA            reduce using rule 103 (condition -> call_fun .)
    FUN             reduce using rule 103 (condition -> call_fun .)
    ID              reduce using rule 103 (condition -> call_fun .)
    CORCHETE_APERTURA reduce using rule 103 (condition -> call_fun .)
    ASIGNAR         reduce using rule 103 (condition -> call_fun .)
    IF              reduce using rule 103 (condition -> call_fun .)
    PARENTESIS_APERTURA reduce using rule 103 (condition -> call_fun .)
    FOR             reduce using rule 103 (condition -> call_fun .)
    PUNTO           reduce using rule 103 (condition -> call_fun .)
    BRING           reduce using rule 103 (condition -> call_fun .)
    WHILE           reduce using rule 103 (condition -> call_fun .)
    VOID            reduce using rule 103 (condition -> call_fun .)
    FLOAT           reduce using rule 103 (condition -> call_fun .)
    INT             reduce using rule 103 (condition -> call_fun .)
    BOOL            reduce using rule 103 (condition -> call_fun .)
    $end            reduce using rule 103 (condition -> call_fun .)
    LLAVE_CIERRE    reduce using rule 103 (condition -> call_fun .)
    ELSE            reduce using rule 103 (condition -> call_fun .)
    CORCHETE_CIERRE reduce using rule 103 (condition -> call_fun .)
    NOT             reduce using rule 103 (condition -> call_fun .)
    NUMERO          reduce using rule 103 (condition -> call_fun .)
    ENTERO          reduce using rule 103 (condition -> call_fun .)
    TRUE            reduce using rule 103 (condition -> call_fun .)
    FALSE           reduce using rule 103 (condition -> call_fun .)


state 51

    (81) expression_list -> expression .
    (82) expression_list -> expression . COMA expression_list
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PARENTESIS_CIERRE reduce using rule 81 (expression_list -> expression .)
    PUNTOCOMA       reduce using rule 81 (expression_list -> expression .)
    FUN             reduce using rule 81 (expression_list -> expression .)
    ID              reduce using rule 81 (expression_list -> expression .)
    CORCHETE_APERTURA reduce using rule 81 (expression_list -> expression .)
    ASIGNAR         reduce using rule 81 (expression_list -> expression .)
    IF              reduce using rule 81 (expression_list -> expression .)
    PARENTESIS_APERTURA reduce using rule 81 (expression_list -> expression .)
    FOR             reduce using rule 81 (expression_list -> expression .)
    PUNTO           reduce using rule 81 (expression_list -> expression .)
    BRING           reduce using rule 81 (expression_list -> expression .)
    WHILE           reduce using rule 81 (expression_list -> expression .)
    VOID            reduce using rule 81 (expression_list -> expression .)
    FLOAT           reduce using rule 81 (expression_list -> expression .)
    INT             reduce using rule 81 (expression_list -> expression .)
    BOOL            reduce using rule 81 (expression_list -> expression .)
    $end            reduce using rule 81 (expression_list -> expression .)
    LLAVE_CIERRE    reduce using rule 81 (expression_list -> expression .)
    ELSE            reduce using rule 81 (expression_list -> expression .)
    NOT             reduce using rule 81 (expression_list -> expression .)
    NUMERO          reduce using rule 81 (expression_list -> expression .)
    ENTERO          reduce using rule 81 (expression_list -> expression .)
    TRUE            reduce using rule 81 (expression_list -> expression .)
    FALSE           reduce using rule 81 (expression_list -> expression .)
    COMA            shift and go to state 98
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 52

    (124) boleano -> TRUE .

    PARENTESIS_CIERRE reduce using rule 124 (boleano -> TRUE .)
    AND             reduce using rule 124 (boleano -> TRUE .)
    OR              reduce using rule 124 (boleano -> TRUE .)
    MENORQUE        reduce using rule 124 (boleano -> TRUE .)
    MAYORQUE        reduce using rule 124 (boleano -> TRUE .)
    IGUAL           reduce using rule 124 (boleano -> TRUE .)
    DIFERENTE       reduce using rule 124 (boleano -> TRUE .)
    MENORIGUAL      reduce using rule 124 (boleano -> TRUE .)
    MAYORIGUAL      reduce using rule 124 (boleano -> TRUE .)
    PUNTOCOMA       reduce using rule 124 (boleano -> TRUE .)
    LLAVE_APERTURA  reduce using rule 124 (boleano -> TRUE .)
    SUMA            reduce using rule 124 (boleano -> TRUE .)
    RESTA           reduce using rule 124 (boleano -> TRUE .)
    MULTIPLICACION  reduce using rule 124 (boleano -> TRUE .)
    DIVISION        reduce using rule 124 (boleano -> TRUE .)
    MODULO          reduce using rule 124 (boleano -> TRUE .)
    MASIGUAL        reduce using rule 124 (boleano -> TRUE .)
    MENOSIGUAL      reduce using rule 124 (boleano -> TRUE .)
    DIVIGUAL        reduce using rule 124 (boleano -> TRUE .)
    MULTIGUAL       reduce using rule 124 (boleano -> TRUE .)
    COMA            reduce using rule 124 (boleano -> TRUE .)
    FUN             reduce using rule 124 (boleano -> TRUE .)
    ID              reduce using rule 124 (boleano -> TRUE .)
    CORCHETE_APERTURA reduce using rule 124 (boleano -> TRUE .)
    ASIGNAR         reduce using rule 124 (boleano -> TRUE .)
    IF              reduce using rule 124 (boleano -> TRUE .)
    PARENTESIS_APERTURA reduce using rule 124 (boleano -> TRUE .)
    FOR             reduce using rule 124 (boleano -> TRUE .)
    PUNTO           reduce using rule 124 (boleano -> TRUE .)
    BRING           reduce using rule 124 (boleano -> TRUE .)
    WHILE           reduce using rule 124 (boleano -> TRUE .)
    VOID            reduce using rule 124 (boleano -> TRUE .)
    FLOAT           reduce using rule 124 (boleano -> TRUE .)
    INT             reduce using rule 124 (boleano -> TRUE .)
    BOOL            reduce using rule 124 (boleano -> TRUE .)
    $end            reduce using rule 124 (boleano -> TRUE .)
    LLAVE_CIERRE    reduce using rule 124 (boleano -> TRUE .)
    ELSE            reduce using rule 124 (boleano -> TRUE .)
    CORCHETE_CIERRE reduce using rule 124 (boleano -> TRUE .)
    NOT             reduce using rule 124 (boleano -> TRUE .)
    NUMERO          reduce using rule 124 (boleano -> TRUE .)
    ENTERO          reduce using rule 124 (boleano -> TRUE .)
    TRUE            reduce using rule 124 (boleano -> TRUE .)
    FALSE           reduce using rule 124 (boleano -> TRUE .)


state 53

    (125) boleano -> FALSE .

    PARENTESIS_CIERRE reduce using rule 125 (boleano -> FALSE .)
    AND             reduce using rule 125 (boleano -> FALSE .)
    OR              reduce using rule 125 (boleano -> FALSE .)
    MENORQUE        reduce using rule 125 (boleano -> FALSE .)
    MAYORQUE        reduce using rule 125 (boleano -> FALSE .)
    IGUAL           reduce using rule 125 (boleano -> FALSE .)
    DIFERENTE       reduce using rule 125 (boleano -> FALSE .)
    MENORIGUAL      reduce using rule 125 (boleano -> FALSE .)
    MAYORIGUAL      reduce using rule 125 (boleano -> FALSE .)
    PUNTOCOMA       reduce using rule 125 (boleano -> FALSE .)
    LLAVE_APERTURA  reduce using rule 125 (boleano -> FALSE .)
    SUMA            reduce using rule 125 (boleano -> FALSE .)
    RESTA           reduce using rule 125 (boleano -> FALSE .)
    MULTIPLICACION  reduce using rule 125 (boleano -> FALSE .)
    DIVISION        reduce using rule 125 (boleano -> FALSE .)
    MODULO          reduce using rule 125 (boleano -> FALSE .)
    MASIGUAL        reduce using rule 125 (boleano -> FALSE .)
    MENOSIGUAL      reduce using rule 125 (boleano -> FALSE .)
    DIVIGUAL        reduce using rule 125 (boleano -> FALSE .)
    MULTIGUAL       reduce using rule 125 (boleano -> FALSE .)
    COMA            reduce using rule 125 (boleano -> FALSE .)
    FUN             reduce using rule 125 (boleano -> FALSE .)
    ID              reduce using rule 125 (boleano -> FALSE .)
    CORCHETE_APERTURA reduce using rule 125 (boleano -> FALSE .)
    ASIGNAR         reduce using rule 125 (boleano -> FALSE .)
    IF              reduce using rule 125 (boleano -> FALSE .)
    PARENTESIS_APERTURA reduce using rule 125 (boleano -> FALSE .)
    FOR             reduce using rule 125 (boleano -> FALSE .)
    PUNTO           reduce using rule 125 (boleano -> FALSE .)
    BRING           reduce using rule 125 (boleano -> FALSE .)
    WHILE           reduce using rule 125 (boleano -> FALSE .)
    VOID            reduce using rule 125 (boleano -> FALSE .)
    FLOAT           reduce using rule 125 (boleano -> FALSE .)
    INT             reduce using rule 125 (boleano -> FALSE .)
    BOOL            reduce using rule 125 (boleano -> FALSE .)
    $end            reduce using rule 125 (boleano -> FALSE .)
    LLAVE_CIERRE    reduce using rule 125 (boleano -> FALSE .)
    ELSE            reduce using rule 125 (boleano -> FALSE .)
    CORCHETE_CIERRE reduce using rule 125 (boleano -> FALSE .)
    NOT             reduce using rule 125 (boleano -> FALSE .)
    NUMERO          reduce using rule 125 (boleano -> FALSE .)
    ENTERO          reduce using rule 125 (boleano -> FALSE .)
    TRUE            reduce using rule 125 (boleano -> FALSE .)
    FALSE           reduce using rule 125 (boleano -> FALSE .)


state 54

    (54) variable_declaration -> datatype ID . ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> datatype ID . ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> datatype ID . PUNTOCOMA
    (63) variable_declaration -> datatype ID . expression PUNTOCOMA
    (64) variable_declaration -> datatype ID . condition PUNTOCOMA
    (65) variable_declaration -> datatype ID . ASIGNAR expression
    (66) variable_declaration -> datatype ID . ASIGNAR condition
    (67) variable_declaration -> datatype ID .
    (73) variable_declaration -> datatype ID . ASIGNAR PUNTOCOMA
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
    ASIGNAR         shift and go to state 119
    PUNTOCOMA       shift and go to state 121
    FUN             reduce using rule 67 (variable_declaration -> datatype ID .)
    CORCHETE_APERTURA reduce using rule 67 (variable_declaration -> datatype ID .)
    IF              reduce using rule 67 (variable_declaration -> datatype ID .)
    FOR             reduce using rule 67 (variable_declaration -> datatype ID .)
    BRING           reduce using rule 67 (variable_declaration -> datatype ID .)
    WHILE           reduce using rule 67 (variable_declaration -> datatype ID .)
    VOID            reduce using rule 67 (variable_declaration -> datatype ID .)
    FLOAT           reduce using rule 67 (variable_declaration -> datatype ID .)
    INT             reduce using rule 67 (variable_declaration -> datatype ID .)
    BOOL            reduce using rule 67 (variable_declaration -> datatype ID .)
    $end            reduce using rule 67 (variable_declaration -> datatype ID .)
    LLAVE_CIERRE    reduce using rule 67 (variable_declaration -> datatype ID .)
    ELSE            reduce using rule 67 (variable_declaration -> datatype ID .)
    ID              shift and go to state 81
    NUMERO          shift and go to state 85
    ENTERO          shift and go to state 86
    PARENTESIS_APERTURA shift and go to state 87
    NOT             shift and go to state 45
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

  ! ID              [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! ASIGNAR         [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! PUNTO           [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! NOT             [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! NUMERO          [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! ENTERO          [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! TRUE            [ reduce using rule 67 (variable_declaration -> datatype ID .) ]
  ! FALSE           [ reduce using rule 67 (variable_declaration -> datatype ID .) ]

    expression                     shift and go to state 120
    condition                      shift and go to state 122
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 55

    (60) variable_declaration -> datatype ASIGNAR . expression PUNTOCOMA
    (61) variable_declaration -> datatype ASIGNAR . condition PUNTOCOMA
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    ID              shift and go to state 81
    NUMERO          shift and go to state 85
    ENTERO          shift and go to state 86
    PARENTESIS_APERTURA shift and go to state 87
    NOT             shift and go to state 45
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    expression                     shift and go to state 123
    condition                      shift and go to state 124
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 56

    (62) variable_declaration -> datatype PUNTOCOMA .

    FUN             reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    ID              reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    ASIGNAR         reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    IF              reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    FOR             reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    PUNTO           reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    BRING           reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    WHILE           reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    VOID            reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    FLOAT           reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    INT             reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    BOOL            reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    $end            reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    ELSE            reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    NOT             reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    NUMERO          reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    ENTERO          reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    TRUE            reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)
    FALSE           reduce using rule 62 (variable_declaration -> datatype PUNTOCOMA .)


state 57

    (57) variable_declaration -> datatype CORCHETE_APERTURA . CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (68) variable_declaration -> datatype CORCHETE_APERTURA . CORCHETE_CIERRE ID ASIGNAR expression_list
    (70) variable_declaration -> datatype CORCHETE_APERTURA . ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> datatype CORCHETE_APERTURA . CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> datatype CORCHETE_APERTURA . CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (74) variable_declaration -> datatype CORCHETE_APERTURA . CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA

    CORCHETE_CIERRE shift and go to state 125
    ID              shift and go to state 126


state 58

    (69) variable_declaration -> datatype CORCHETE_CIERRE . ID ASIGNAR expression_list PUNTOCOMA

    ID              shift and go to state 127


state 59

    (77) assignment -> ASIGNAR expression . PUNTOCOMA
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       shift and go to state 128
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 60

    (116) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 129

state 61

    (59) variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE . ID ASIGNAR expression_list PUNTOCOMA

    ID              shift and go to state 130


state 62

    (25) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> IF PARENTESIS_APERTURA . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> IF PARENTESIS_APERTURA . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> IF PARENTESIS_APERTURA . condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> IF PARENTESIS_APERTURA . condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (98) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (45) call_fun -> PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

  ! shift/reduce conflict for PARENTESIS_CIERRE resolved as shift
    PARENTESIS_CIERRE shift and go to state 132
    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 42
    ID              shift and go to state 47
    NUMERO          shift and go to state 48
    ENTERO          shift and go to state 49
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

  ! PARENTESIS_CIERRE [ reduce using rule 126 (empty -> .) ]

    condition                      shift and go to state 131
    expression_list                shift and go to state 44
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 63

    (29) if_statement -> IF condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> IF condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 133
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 64

    (100) condition -> ID .
    (43) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> ID . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> ID . PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID . PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> ID . PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 100 (condition -> ID .)
    PARENTESIS_CIERRE reduce using rule 100 (condition -> ID .)
    AND             reduce using rule 100 (condition -> ID .)
    OR              reduce using rule 100 (condition -> ID .)
    MENORQUE        reduce using rule 100 (condition -> ID .)
    MAYORQUE        reduce using rule 100 (condition -> ID .)
    IGUAL           reduce using rule 100 (condition -> ID .)
    DIFERENTE       reduce using rule 100 (condition -> ID .)
    MENORIGUAL      reduce using rule 100 (condition -> ID .)
    MAYORIGUAL      reduce using rule 100 (condition -> ID .)
    PUNTOCOMA       reduce using rule 100 (condition -> ID .)
    LLAVE_APERTURA  reduce using rule 100 (condition -> ID .)
    SUMA            reduce using rule 100 (condition -> ID .)
    RESTA           reduce using rule 100 (condition -> ID .)
    MULTIPLICACION  reduce using rule 100 (condition -> ID .)
    DIVISION        reduce using rule 100 (condition -> ID .)
    MODULO          reduce using rule 100 (condition -> ID .)
    MASIGUAL        reduce using rule 100 (condition -> ID .)
    MENOSIGUAL      reduce using rule 100 (condition -> ID .)
    DIVIGUAL        reduce using rule 100 (condition -> ID .)
    MULTIGUAL       reduce using rule 100 (condition -> ID .)
    COMA            reduce using rule 100 (condition -> ID .)
    FUN             reduce using rule 100 (condition -> ID .)
    CORCHETE_APERTURA reduce using rule 100 (condition -> ID .)
    ASIGNAR         reduce using rule 100 (condition -> ID .)
    IF              reduce using rule 100 (condition -> ID .)
    FOR             reduce using rule 100 (condition -> ID .)
    BRING           reduce using rule 100 (condition -> ID .)
    WHILE           reduce using rule 100 (condition -> ID .)
    VOID            reduce using rule 100 (condition -> ID .)
    FLOAT           reduce using rule 100 (condition -> ID .)
    INT             reduce using rule 100 (condition -> ID .)
    BOOL            reduce using rule 100 (condition -> ID .)
    $end            reduce using rule 100 (condition -> ID .)
    LLAVE_CIERRE    reduce using rule 100 (condition -> ID .)
    ELSE            reduce using rule 100 (condition -> ID .)
    CORCHETE_CIERRE reduce using rule 100 (condition -> ID .)
    NOT             reduce using rule 100 (condition -> ID .)
    TRUE            reduce using rule 100 (condition -> ID .)
    FALSE           reduce using rule 100 (condition -> ID .)
    PARENTESIS_APERTURA shift and go to state 118
    PUNTO           shift and go to state 37
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40

  ! ID              [ reduce using rule 100 (condition -> ID .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 100 (condition -> ID .) ]
  ! PUNTO           [ reduce using rule 100 (condition -> ID .) ]
  ! NUMERO          [ reduce using rule 100 (condition -> ID .) ]
  ! ENTERO          [ reduce using rule 100 (condition -> ID .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 126 (empty -> .) ]

    expression_list                shift and go to state 36
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 65

    (101) condition -> NUMERO .

    PARENTESIS_CIERRE reduce using rule 101 (condition -> NUMERO .)
    AND             reduce using rule 101 (condition -> NUMERO .)
    OR              reduce using rule 101 (condition -> NUMERO .)
    MENORQUE        reduce using rule 101 (condition -> NUMERO .)
    MAYORQUE        reduce using rule 101 (condition -> NUMERO .)
    IGUAL           reduce using rule 101 (condition -> NUMERO .)
    DIFERENTE       reduce using rule 101 (condition -> NUMERO .)
    MENORIGUAL      reduce using rule 101 (condition -> NUMERO .)
    MAYORIGUAL      reduce using rule 101 (condition -> NUMERO .)
    PUNTOCOMA       reduce using rule 101 (condition -> NUMERO .)
    LLAVE_APERTURA  reduce using rule 101 (condition -> NUMERO .)
    SUMA            reduce using rule 101 (condition -> NUMERO .)
    RESTA           reduce using rule 101 (condition -> NUMERO .)
    MULTIPLICACION  reduce using rule 101 (condition -> NUMERO .)
    DIVISION        reduce using rule 101 (condition -> NUMERO .)
    MODULO          reduce using rule 101 (condition -> NUMERO .)
    MASIGUAL        reduce using rule 101 (condition -> NUMERO .)
    MENOSIGUAL      reduce using rule 101 (condition -> NUMERO .)
    DIVIGUAL        reduce using rule 101 (condition -> NUMERO .)
    MULTIGUAL       reduce using rule 101 (condition -> NUMERO .)
    COMA            reduce using rule 101 (condition -> NUMERO .)
    FUN             reduce using rule 101 (condition -> NUMERO .)
    ID              reduce using rule 101 (condition -> NUMERO .)
    CORCHETE_APERTURA reduce using rule 101 (condition -> NUMERO .)
    ASIGNAR         reduce using rule 101 (condition -> NUMERO .)
    IF              reduce using rule 101 (condition -> NUMERO .)
    PARENTESIS_APERTURA reduce using rule 101 (condition -> NUMERO .)
    FOR             reduce using rule 101 (condition -> NUMERO .)
    PUNTO           reduce using rule 101 (condition -> NUMERO .)
    BRING           reduce using rule 101 (condition -> NUMERO .)
    WHILE           reduce using rule 101 (condition -> NUMERO .)
    VOID            reduce using rule 101 (condition -> NUMERO .)
    FLOAT           reduce using rule 101 (condition -> NUMERO .)
    INT             reduce using rule 101 (condition -> NUMERO .)
    BOOL            reduce using rule 101 (condition -> NUMERO .)
    $end            reduce using rule 101 (condition -> NUMERO .)
    LLAVE_CIERRE    reduce using rule 101 (condition -> NUMERO .)
    ELSE            reduce using rule 101 (condition -> NUMERO .)
    CORCHETE_CIERRE reduce using rule 101 (condition -> NUMERO .)
    NOT             reduce using rule 101 (condition -> NUMERO .)
    NUMERO          reduce using rule 101 (condition -> NUMERO .)
    ENTERO          reduce using rule 101 (condition -> NUMERO .)
    TRUE            reduce using rule 101 (condition -> NUMERO .)
    FALSE           reduce using rule 101 (condition -> NUMERO .)


state 66

    (102) condition -> ENTERO .

    PARENTESIS_CIERRE reduce using rule 102 (condition -> ENTERO .)
    AND             reduce using rule 102 (condition -> ENTERO .)
    OR              reduce using rule 102 (condition -> ENTERO .)
    MENORQUE        reduce using rule 102 (condition -> ENTERO .)
    MAYORQUE        reduce using rule 102 (condition -> ENTERO .)
    IGUAL           reduce using rule 102 (condition -> ENTERO .)
    DIFERENTE       reduce using rule 102 (condition -> ENTERO .)
    MENORIGUAL      reduce using rule 102 (condition -> ENTERO .)
    MAYORIGUAL      reduce using rule 102 (condition -> ENTERO .)
    PUNTOCOMA       reduce using rule 102 (condition -> ENTERO .)
    LLAVE_APERTURA  reduce using rule 102 (condition -> ENTERO .)
    SUMA            reduce using rule 102 (condition -> ENTERO .)
    RESTA           reduce using rule 102 (condition -> ENTERO .)
    MULTIPLICACION  reduce using rule 102 (condition -> ENTERO .)
    DIVISION        reduce using rule 102 (condition -> ENTERO .)
    MODULO          reduce using rule 102 (condition -> ENTERO .)
    MASIGUAL        reduce using rule 102 (condition -> ENTERO .)
    MENOSIGUAL      reduce using rule 102 (condition -> ENTERO .)
    DIVIGUAL        reduce using rule 102 (condition -> ENTERO .)
    MULTIGUAL       reduce using rule 102 (condition -> ENTERO .)
    COMA            reduce using rule 102 (condition -> ENTERO .)
    FUN             reduce using rule 102 (condition -> ENTERO .)
    ID              reduce using rule 102 (condition -> ENTERO .)
    CORCHETE_APERTURA reduce using rule 102 (condition -> ENTERO .)
    ASIGNAR         reduce using rule 102 (condition -> ENTERO .)
    IF              reduce using rule 102 (condition -> ENTERO .)
    PARENTESIS_APERTURA reduce using rule 102 (condition -> ENTERO .)
    FOR             reduce using rule 102 (condition -> ENTERO .)
    PUNTO           reduce using rule 102 (condition -> ENTERO .)
    BRING           reduce using rule 102 (condition -> ENTERO .)
    WHILE           reduce using rule 102 (condition -> ENTERO .)
    VOID            reduce using rule 102 (condition -> ENTERO .)
    FLOAT           reduce using rule 102 (condition -> ENTERO .)
    INT             reduce using rule 102 (condition -> ENTERO .)
    BOOL            reduce using rule 102 (condition -> ENTERO .)
    $end            reduce using rule 102 (condition -> ENTERO .)
    LLAVE_CIERRE    reduce using rule 102 (condition -> ENTERO .)
    ELSE            reduce using rule 102 (condition -> ENTERO .)
    CORCHETE_CIERRE reduce using rule 102 (condition -> ENTERO .)
    NOT             reduce using rule 102 (condition -> ENTERO .)
    NUMERO          reduce using rule 102 (condition -> ENTERO .)
    ENTERO          reduce using rule 102 (condition -> ENTERO .)
    TRUE            reduce using rule 102 (condition -> ENTERO .)
    FALSE           reduce using rule 102 (condition -> ENTERO .)


state 67

    (42) for_statement -> FOR PARENTESIS_APERTURA . variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

    ID              shift and go to state 135
    CORCHETE_APERTURA shift and go to state 18
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

    variable_declaration           shift and go to state 134
    datatype                       shift and go to state 16

state 68

    (46) call_fun -> PUNTO ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_APERTURA shift and go to state 136


state 69

    (14) import -> BRING ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 137


state 70

    (85) while_statement -> WHILE PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> WHILE PARENTESIS_APERTURA . condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> WHILE PARENTESIS_APERTURA . condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (98) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (45) call_fun -> PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 42
    ID              shift and go to state 47
    NUMERO          shift and go to state 48
    ENTERO          shift and go to state 49
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    condition                      shift and go to state 138
    expression_list                shift and go to state 44
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 71

    (86) while_statement -> WHILE condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 139
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 72

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (117) parameters -> . datatype ID
    (118) parameters -> . datatype ID COMA parameters
    (119) parameters -> . empty
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL
    (126) empty -> .

    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)
    DOSPUNTOS       reduce using rule 126 (empty -> .)

    parameters                     shift and go to state 140
    datatype                       shift and go to state 74
    empty                          shift and go to state 75

state 73

    (22) fun_statement -> FUN ID parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 141


state 74

    (117) parameters -> datatype . ID
    (118) parameters -> datatype . ID COMA parameters

    ID              shift and go to state 142


state 75

    (119) parameters -> empty .

    PARENTESIS_CIERRE reduce using rule 119 (parameters -> empty .)
    DOSPUNTOS       reduce using rule 119 (parameters -> empty .)


state 76

    (20) fun_statement -> FUN PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 143


state 77

    (16) fun_statement -> ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 144


state 78

    (43) call_fun -> ID PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID PARENTESIS_APERTURA expression_list . PUNTOCOMA
    (52) call_fun -> ID PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE

    PARENTESIS_CIERRE shift and go to state 145
    PUNTOCOMA       shift and go to state 146


state 79

    (116) expression -> PARENTESIS_APERTURA expression . PARENTESIS_CIERRE
    (81) expression_list -> expression .
    (82) expression_list -> expression . COMA expression_list
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

  ! shift/reduce conflict for PARENTESIS_CIERRE resolved as shift
    PARENTESIS_CIERRE shift and go to state 147
    PUNTOCOMA       reduce using rule 81 (expression_list -> expression .)
    COMA            shift and go to state 98
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97

  ! PARENTESIS_CIERRE [ reduce using rule 81 (expression_list -> expression .) ]


state 80

    (119) parameters -> empty .
    (83) expression_list -> empty .

  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 83 (expression_list -> empty .)
    PARENTESIS_CIERRE reduce using rule 83 (expression_list -> empty .)
    PUNTOCOMA       reduce using rule 83 (expression_list -> empty .)

  ! PARENTESIS_CIERRE [ reduce using rule 119 (parameters -> empty .) ]


state 81

    (104) expression -> ID .
    (100) condition -> ID .
    (43) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> ID . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> ID . PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID . PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> ID . PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for FUN resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for CORCHETE_APERTURA resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for ASIGNAR resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for PARENTESIS_APERTURA resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for PUNTO resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for BRING resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for VOID resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for FLOAT resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for INT resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for BOOL resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for LLAVE_CIERRE resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for NOT resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for NUMERO resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for ENTERO resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for TRUE resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for FALSE resolved using rule 100 (condition -> ID .)
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 100 (condition -> ID .)
    SUMA            reduce using rule 104 (expression -> ID .)
    RESTA           reduce using rule 104 (expression -> ID .)
    MULTIPLICACION  reduce using rule 104 (expression -> ID .)
    DIVISION        reduce using rule 104 (expression -> ID .)
    MODULO          reduce using rule 104 (expression -> ID .)
    MASIGUAL        reduce using rule 104 (expression -> ID .)
    MENOSIGUAL      reduce using rule 104 (expression -> ID .)
    DIVIGUAL        reduce using rule 104 (expression -> ID .)
    MULTIGUAL       reduce using rule 104 (expression -> ID .)
    COMA            reduce using rule 104 (expression -> ID .)
    PUNTOCOMA       reduce using rule 100 (condition -> ID .)
    AND             reduce using rule 100 (condition -> ID .)
    OR              reduce using rule 100 (condition -> ID .)
    MENORQUE        reduce using rule 100 (condition -> ID .)
    MAYORQUE        reduce using rule 100 (condition -> ID .)
    IGUAL           reduce using rule 100 (condition -> ID .)
    DIFERENTE       reduce using rule 100 (condition -> ID .)
    MENORIGUAL      reduce using rule 100 (condition -> ID .)
    MAYORIGUAL      reduce using rule 100 (condition -> ID .)
    PARENTESIS_CIERRE reduce using rule 100 (condition -> ID .)
    FUN             reduce using rule 100 (condition -> ID .)
    CORCHETE_APERTURA reduce using rule 100 (condition -> ID .)
    ASIGNAR         reduce using rule 100 (condition -> ID .)
    IF              reduce using rule 100 (condition -> ID .)
    FOR             reduce using rule 100 (condition -> ID .)
    BRING           reduce using rule 100 (condition -> ID .)
    WHILE           reduce using rule 100 (condition -> ID .)
    VOID            reduce using rule 100 (condition -> ID .)
    FLOAT           reduce using rule 100 (condition -> ID .)
    INT             reduce using rule 100 (condition -> ID .)
    BOOL            reduce using rule 100 (condition -> ID .)
    $end            reduce using rule 100 (condition -> ID .)
    LLAVE_CIERRE    reduce using rule 100 (condition -> ID .)
    ELSE            reduce using rule 100 (condition -> ID .)
    NOT             reduce using rule 100 (condition -> ID .)
    TRUE            reduce using rule 100 (condition -> ID .)
    FALSE           reduce using rule 100 (condition -> ID .)
    PARENTESIS_APERTURA shift and go to state 118
    PUNTO           shift and go to state 37
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40

  ! PUNTOCOMA       [ reduce using rule 104 (expression -> ID .) ]
  ! FUN             [ reduce using rule 104 (expression -> ID .) ]
  ! ID              [ reduce using rule 104 (expression -> ID .) ]
  ! CORCHETE_APERTURA [ reduce using rule 104 (expression -> ID .) ]
  ! ASIGNAR         [ reduce using rule 104 (expression -> ID .) ]
  ! IF              [ reduce using rule 104 (expression -> ID .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 104 (expression -> ID .) ]
  ! FOR             [ reduce using rule 104 (expression -> ID .) ]
  ! PUNTO           [ reduce using rule 104 (expression -> ID .) ]
  ! BRING           [ reduce using rule 104 (expression -> ID .) ]
  ! WHILE           [ reduce using rule 104 (expression -> ID .) ]
  ! VOID            [ reduce using rule 104 (expression -> ID .) ]
  ! FLOAT           [ reduce using rule 104 (expression -> ID .) ]
  ! INT             [ reduce using rule 104 (expression -> ID .) ]
  ! BOOL            [ reduce using rule 104 (expression -> ID .) ]
  ! $end            [ reduce using rule 104 (expression -> ID .) ]
  ! LLAVE_CIERRE    [ reduce using rule 104 (expression -> ID .) ]
  ! ELSE            [ reduce using rule 104 (expression -> ID .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 104 (expression -> ID .) ]
  ! NOT             [ reduce using rule 104 (expression -> ID .) ]
  ! NUMERO          [ reduce using rule 104 (expression -> ID .) ]
  ! ENTERO          [ reduce using rule 104 (expression -> ID .) ]
  ! TRUE            [ reduce using rule 104 (expression -> ID .) ]
  ! FALSE           [ reduce using rule 104 (expression -> ID .) ]
  ! ID              [ reduce using rule 100 (condition -> ID .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 100 (condition -> ID .) ]
  ! PUNTO           [ reduce using rule 100 (condition -> ID .) ]
  ! NUMERO          [ reduce using rule 100 (condition -> ID .) ]
  ! ENTERO          [ reduce using rule 100 (condition -> ID .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 126 (empty -> .) ]

    expression_list                shift and go to state 36
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 82

    (75) assignment -> ID ASIGNAR expression . PUNTOCOMA
    (80) assignment -> ID ASIGNAR expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       shift and go to state 148
    FUN             reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    ID              reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    CORCHETE_APERTURA reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    ASIGNAR         reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    IF              reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    PARENTESIS_APERTURA reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    FOR             reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    PUNTO           reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    BRING           reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    WHILE           reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    VOID            reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    FLOAT           reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    INT             reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    BOOL            reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    $end            reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    LLAVE_CIERRE    reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    ELSE            reduce using rule 80 (assignment -> ID ASIGNAR expression .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 83

    (79) assignment -> ID ASIGNAR PUNTOCOMA .

    FUN             reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    ID              reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    ASIGNAR         reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    IF              reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    FOR             reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    PUNTO           reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    BRING           reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    WHILE           reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    VOID            reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    FLOAT           reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    INT             reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    BOOL            reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    $end            reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)
    ELSE            reduce using rule 79 (assignment -> ID ASIGNAR PUNTOCOMA .)


state 84

    (76) assignment -> ID ASIGNAR condition . PUNTOCOMA
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       shift and go to state 149
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 85

    (105) expression -> NUMERO .
    (101) condition -> NUMERO .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for FUN resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for ID resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for CORCHETE_APERTURA resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for ASIGNAR resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for IF resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for PARENTESIS_APERTURA resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for FOR resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for PUNTO resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for BRING resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for VOID resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for FLOAT resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for INT resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for $end resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for LLAVE_CIERRE resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for NOT resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for NUMERO resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for TRUE resolved using rule 101 (condition -> NUMERO .)
  ! reduce/reduce conflict for FALSE resolved using rule 101 (condition -> NUMERO .)
    SUMA            reduce using rule 105 (expression -> NUMERO .)
    RESTA           reduce using rule 105 (expression -> NUMERO .)
    MULTIPLICACION  reduce using rule 105 (expression -> NUMERO .)
    DIVISION        reduce using rule 105 (expression -> NUMERO .)
    MODULO          reduce using rule 105 (expression -> NUMERO .)
    MASIGUAL        reduce using rule 105 (expression -> NUMERO .)
    MENOSIGUAL      reduce using rule 105 (expression -> NUMERO .)
    DIVIGUAL        reduce using rule 105 (expression -> NUMERO .)
    MULTIGUAL       reduce using rule 105 (expression -> NUMERO .)
    COMA            reduce using rule 105 (expression -> NUMERO .)
    PUNTOCOMA       reduce using rule 101 (condition -> NUMERO .)
    AND             reduce using rule 101 (condition -> NUMERO .)
    OR              reduce using rule 101 (condition -> NUMERO .)
    MENORQUE        reduce using rule 101 (condition -> NUMERO .)
    MAYORQUE        reduce using rule 101 (condition -> NUMERO .)
    IGUAL           reduce using rule 101 (condition -> NUMERO .)
    DIFERENTE       reduce using rule 101 (condition -> NUMERO .)
    MENORIGUAL      reduce using rule 101 (condition -> NUMERO .)
    MAYORIGUAL      reduce using rule 101 (condition -> NUMERO .)
    PARENTESIS_CIERRE reduce using rule 101 (condition -> NUMERO .)
    FUN             reduce using rule 101 (condition -> NUMERO .)
    ID              reduce using rule 101 (condition -> NUMERO .)
    CORCHETE_APERTURA reduce using rule 101 (condition -> NUMERO .)
    ASIGNAR         reduce using rule 101 (condition -> NUMERO .)
    IF              reduce using rule 101 (condition -> NUMERO .)
    PARENTESIS_APERTURA reduce using rule 101 (condition -> NUMERO .)
    FOR             reduce using rule 101 (condition -> NUMERO .)
    PUNTO           reduce using rule 101 (condition -> NUMERO .)
    BRING           reduce using rule 101 (condition -> NUMERO .)
    WHILE           reduce using rule 101 (condition -> NUMERO .)
    VOID            reduce using rule 101 (condition -> NUMERO .)
    FLOAT           reduce using rule 101 (condition -> NUMERO .)
    INT             reduce using rule 101 (condition -> NUMERO .)
    BOOL            reduce using rule 101 (condition -> NUMERO .)
    $end            reduce using rule 101 (condition -> NUMERO .)
    LLAVE_CIERRE    reduce using rule 101 (condition -> NUMERO .)
    ELSE            reduce using rule 101 (condition -> NUMERO .)
    NOT             reduce using rule 101 (condition -> NUMERO .)
    NUMERO          reduce using rule 101 (condition -> NUMERO .)
    ENTERO          reduce using rule 101 (condition -> NUMERO .)
    TRUE            reduce using rule 101 (condition -> NUMERO .)
    FALSE           reduce using rule 101 (condition -> NUMERO .)

  ! PUNTOCOMA       [ reduce using rule 105 (expression -> NUMERO .) ]
  ! FUN             [ reduce using rule 105 (expression -> NUMERO .) ]
  ! ID              [ reduce using rule 105 (expression -> NUMERO .) ]
  ! CORCHETE_APERTURA [ reduce using rule 105 (expression -> NUMERO .) ]
  ! ASIGNAR         [ reduce using rule 105 (expression -> NUMERO .) ]
  ! IF              [ reduce using rule 105 (expression -> NUMERO .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 105 (expression -> NUMERO .) ]
  ! FOR             [ reduce using rule 105 (expression -> NUMERO .) ]
  ! PUNTO           [ reduce using rule 105 (expression -> NUMERO .) ]
  ! BRING           [ reduce using rule 105 (expression -> NUMERO .) ]
  ! WHILE           [ reduce using rule 105 (expression -> NUMERO .) ]
  ! VOID            [ reduce using rule 105 (expression -> NUMERO .) ]
  ! FLOAT           [ reduce using rule 105 (expression -> NUMERO .) ]
  ! INT             [ reduce using rule 105 (expression -> NUMERO .) ]
  ! BOOL            [ reduce using rule 105 (expression -> NUMERO .) ]
  ! $end            [ reduce using rule 105 (expression -> NUMERO .) ]
  ! LLAVE_CIERRE    [ reduce using rule 105 (expression -> NUMERO .) ]
  ! ELSE            [ reduce using rule 105 (expression -> NUMERO .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 105 (expression -> NUMERO .) ]
  ! NOT             [ reduce using rule 105 (expression -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 105 (expression -> NUMERO .) ]
  ! ENTERO          [ reduce using rule 105 (expression -> NUMERO .) ]
  ! TRUE            [ reduce using rule 105 (expression -> NUMERO .) ]
  ! FALSE           [ reduce using rule 105 (expression -> NUMERO .) ]


state 86

    (106) expression -> ENTERO .
    (102) condition -> ENTERO .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for FUN resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for ID resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for CORCHETE_APERTURA resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for ASIGNAR resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for PARENTESIS_APERTURA resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for FOR resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for PUNTO resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for BRING resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for WHILE resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for VOID resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for FLOAT resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for INT resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for BOOL resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for $end resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for LLAVE_CIERRE resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for NOT resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for NUMERO resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for TRUE resolved using rule 102 (condition -> ENTERO .)
  ! reduce/reduce conflict for FALSE resolved using rule 102 (condition -> ENTERO .)
    SUMA            reduce using rule 106 (expression -> ENTERO .)
    RESTA           reduce using rule 106 (expression -> ENTERO .)
    MULTIPLICACION  reduce using rule 106 (expression -> ENTERO .)
    DIVISION        reduce using rule 106 (expression -> ENTERO .)
    MODULO          reduce using rule 106 (expression -> ENTERO .)
    MASIGUAL        reduce using rule 106 (expression -> ENTERO .)
    MENOSIGUAL      reduce using rule 106 (expression -> ENTERO .)
    DIVIGUAL        reduce using rule 106 (expression -> ENTERO .)
    MULTIGUAL       reduce using rule 106 (expression -> ENTERO .)
    COMA            reduce using rule 106 (expression -> ENTERO .)
    PUNTOCOMA       reduce using rule 102 (condition -> ENTERO .)
    AND             reduce using rule 102 (condition -> ENTERO .)
    OR              reduce using rule 102 (condition -> ENTERO .)
    MENORQUE        reduce using rule 102 (condition -> ENTERO .)
    MAYORQUE        reduce using rule 102 (condition -> ENTERO .)
    IGUAL           reduce using rule 102 (condition -> ENTERO .)
    DIFERENTE       reduce using rule 102 (condition -> ENTERO .)
    MENORIGUAL      reduce using rule 102 (condition -> ENTERO .)
    MAYORIGUAL      reduce using rule 102 (condition -> ENTERO .)
    PARENTESIS_CIERRE reduce using rule 102 (condition -> ENTERO .)
    FUN             reduce using rule 102 (condition -> ENTERO .)
    ID              reduce using rule 102 (condition -> ENTERO .)
    CORCHETE_APERTURA reduce using rule 102 (condition -> ENTERO .)
    ASIGNAR         reduce using rule 102 (condition -> ENTERO .)
    IF              reduce using rule 102 (condition -> ENTERO .)
    PARENTESIS_APERTURA reduce using rule 102 (condition -> ENTERO .)
    FOR             reduce using rule 102 (condition -> ENTERO .)
    PUNTO           reduce using rule 102 (condition -> ENTERO .)
    BRING           reduce using rule 102 (condition -> ENTERO .)
    WHILE           reduce using rule 102 (condition -> ENTERO .)
    VOID            reduce using rule 102 (condition -> ENTERO .)
    FLOAT           reduce using rule 102 (condition -> ENTERO .)
    INT             reduce using rule 102 (condition -> ENTERO .)
    BOOL            reduce using rule 102 (condition -> ENTERO .)
    $end            reduce using rule 102 (condition -> ENTERO .)
    LLAVE_CIERRE    reduce using rule 102 (condition -> ENTERO .)
    ELSE            reduce using rule 102 (condition -> ENTERO .)
    NOT             reduce using rule 102 (condition -> ENTERO .)
    NUMERO          reduce using rule 102 (condition -> ENTERO .)
    ENTERO          reduce using rule 102 (condition -> ENTERO .)
    TRUE            reduce using rule 102 (condition -> ENTERO .)
    FALSE           reduce using rule 102 (condition -> ENTERO .)

  ! PUNTOCOMA       [ reduce using rule 106 (expression -> ENTERO .) ]
  ! FUN             [ reduce using rule 106 (expression -> ENTERO .) ]
  ! ID              [ reduce using rule 106 (expression -> ENTERO .) ]
  ! CORCHETE_APERTURA [ reduce using rule 106 (expression -> ENTERO .) ]
  ! ASIGNAR         [ reduce using rule 106 (expression -> ENTERO .) ]
  ! IF              [ reduce using rule 106 (expression -> ENTERO .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 106 (expression -> ENTERO .) ]
  ! FOR             [ reduce using rule 106 (expression -> ENTERO .) ]
  ! PUNTO           [ reduce using rule 106 (expression -> ENTERO .) ]
  ! BRING           [ reduce using rule 106 (expression -> ENTERO .) ]
  ! WHILE           [ reduce using rule 106 (expression -> ENTERO .) ]
  ! VOID            [ reduce using rule 106 (expression -> ENTERO .) ]
  ! FLOAT           [ reduce using rule 106 (expression -> ENTERO .) ]
  ! INT             [ reduce using rule 106 (expression -> ENTERO .) ]
  ! BOOL            [ reduce using rule 106 (expression -> ENTERO .) ]
  ! $end            [ reduce using rule 106 (expression -> ENTERO .) ]
  ! LLAVE_CIERRE    [ reduce using rule 106 (expression -> ENTERO .) ]
  ! ELSE            [ reduce using rule 106 (expression -> ENTERO .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 106 (expression -> ENTERO .) ]
  ! NOT             [ reduce using rule 106 (expression -> ENTERO .) ]
  ! NUMERO          [ reduce using rule 106 (expression -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 106 (expression -> ENTERO .) ]
  ! TRUE            [ reduce using rule 106 (expression -> ENTERO .) ]
  ! FALSE           [ reduce using rule 106 (expression -> ENTERO .) ]


state 87

    (116) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (98) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (45) call_fun -> PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 81
    NUMERO          shift and go to state 85
    ENTERO          shift and go to state 86
    PARENTESIS_APERTURA shift and go to state 87
    NOT             shift and go to state 45
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    expression                     shift and go to state 150
    condition                      shift and go to state 104
    expression_list                shift and go to state 44
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50
    empty                          shift and go to state 41

state 88

    (78) assignment -> ID expression PUNTOCOMA .

    FUN             reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    ID              reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    ASIGNAR         reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    IF              reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    FOR             reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    PUNTO           reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    BRING           reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    WHILE           reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    VOID            reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    FLOAT           reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    INT             reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    BOOL            reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    $end            reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)
    ELSE            reduce using rule 78 (assignment -> ID expression PUNTOCOMA .)


state 89

    (107) expression -> expression SUMA . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 151

state 90

    (108) expression -> expression RESTA . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 152

state 91

    (109) expression -> expression MULTIPLICACION . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 153

state 92

    (110) expression -> expression DIVISION . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 154

state 93

    (111) expression -> expression MODULO . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 155

state 94

    (112) expression -> expression MASIGUAL . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 156

state 95

    (113) expression -> expression MENOSIGUAL . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 157

state 96

    (114) expression -> expression DIVIGUAL . expression
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 158

state 97

    (115) expression -> expression MULTIGUAL . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 159
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 98

    (82) expression_list -> expression COMA . expression_list
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)
    PUNTOCOMA       reduce using rule 126 (empty -> .)
    FUN             reduce using rule 126 (empty -> .)
    CORCHETE_APERTURA reduce using rule 126 (empty -> .)
    ASIGNAR         reduce using rule 126 (empty -> .)
    IF              reduce using rule 126 (empty -> .)
    FOR             reduce using rule 126 (empty -> .)
    PUNTO           reduce using rule 126 (empty -> .)
    BRING           reduce using rule 126 (empty -> .)
    WHILE           reduce using rule 126 (empty -> .)
    VOID            reduce using rule 126 (empty -> .)
    FLOAT           reduce using rule 126 (empty -> .)
    INT             reduce using rule 126 (empty -> .)
    BOOL            reduce using rule 126 (empty -> .)
    $end            reduce using rule 126 (empty -> .)
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    ELSE            reduce using rule 126 (empty -> .)
    NOT             reduce using rule 126 (empty -> .)
    TRUE            reduce using rule 126 (empty -> .)
    FALSE           reduce using rule 126 (empty -> .)

  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! NUMERO          [ reduce using rule 126 (empty -> .) ]
  ! ENTERO          [ reduce using rule 126 (empty -> .) ]

    expression                     shift and go to state 51
    expression_list                shift and go to state 160
    empty                          shift and go to state 41

state 99

    (47) call_fun -> ID expression_list PARENTESIS_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 161


state 100

    (44) call_fun -> ID PUNTO ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> ID PUNTO ID . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (50) call_fun -> ID PUNTO ID . PARENTESIS_APERTURA expression_list PUNTOCOMA
    (53) call_fun -> ID PUNTO ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    PARENTESIS_APERTURA shift and go to state 162
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 163
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 101

    (51) call_fun -> ID PUNTO PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 164
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 102

    (84) leer_arreglo -> ID CORCHETE_APERTURA expression . CORCHETE_CIERRE PUNTOCOMA
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    CORCHETE_CIERRE shift and go to state 165
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 103

    (98) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (116) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (45) call_fun -> PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (126) empty -> .

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 103
    ID              shift and go to state 105
    NUMERO          shift and go to state 48
    ENTERO          shift and go to state 49
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    condition                      shift and go to state 104
    expression                     shift and go to state 150
    expression_list                shift and go to state 44
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50
    empty                          shift and go to state 41

state 104

    (98) condition -> PARENTESIS_APERTURA condition . PARENTESIS_CIERRE
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 166
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 105

    (100) condition -> ID .
    (104) expression -> ID .
    (43) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> ID . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> ID . PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID . PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> ID . PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 100 (condition -> ID .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 100 (condition -> ID .)
    PARENTESIS_CIERRE reduce using rule 100 (condition -> ID .)
    AND             reduce using rule 100 (condition -> ID .)
    OR              reduce using rule 100 (condition -> ID .)
    MENORQUE        reduce using rule 100 (condition -> ID .)
    MAYORQUE        reduce using rule 100 (condition -> ID .)
    IGUAL           reduce using rule 100 (condition -> ID .)
    DIFERENTE       reduce using rule 100 (condition -> ID .)
    MENORIGUAL      reduce using rule 100 (condition -> ID .)
    MAYORIGUAL      reduce using rule 100 (condition -> ID .)
    COMA            reduce using rule 104 (expression -> ID .)
    SUMA            reduce using rule 104 (expression -> ID .)
    RESTA           reduce using rule 104 (expression -> ID .)
    MULTIPLICACION  reduce using rule 104 (expression -> ID .)
    DIVISION        reduce using rule 104 (expression -> ID .)
    MODULO          reduce using rule 104 (expression -> ID .)
    MASIGUAL        reduce using rule 104 (expression -> ID .)
    MENOSIGUAL      reduce using rule 104 (expression -> ID .)
    DIVIGUAL        reduce using rule 104 (expression -> ID .)
    MULTIGUAL       reduce using rule 104 (expression -> ID .)
    PARENTESIS_APERTURA shift and go to state 118
    PUNTO           shift and go to state 37
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40

  ! PARENTESIS_CIERRE [ reduce using rule 104 (expression -> ID .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 126 (empty -> .) ]

    expression_list                shift and go to state 36
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 106

    (27) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 167


state 107

    (89) condition -> condition AND . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 168
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 108

    (90) condition -> condition OR . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 169
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 109

    (92) condition -> condition MENORQUE . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 170
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 110

    (93) condition -> condition MAYORQUE . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 171
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 111

    (94) condition -> condition IGUAL . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 172
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 112

    (95) condition -> condition DIFERENTE . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 173
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 113

    (96) condition -> condition MENORIGUAL . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 174
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 114

    (97) condition -> condition MAYORIGUAL . condition
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 175
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 115

    (45) call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 176


state 116

    (91) condition -> NOT condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 91 (condition -> NOT condition .)
    PUNTOCOMA       reduce using rule 91 (condition -> NOT condition .)
    LLAVE_APERTURA  reduce using rule 91 (condition -> NOT condition .)
    SUMA            reduce using rule 91 (condition -> NOT condition .)
    RESTA           reduce using rule 91 (condition -> NOT condition .)
    MULTIPLICACION  reduce using rule 91 (condition -> NOT condition .)
    DIVISION        reduce using rule 91 (condition -> NOT condition .)
    MODULO          reduce using rule 91 (condition -> NOT condition .)
    MASIGUAL        reduce using rule 91 (condition -> NOT condition .)
    MENOSIGUAL      reduce using rule 91 (condition -> NOT condition .)
    DIVIGUAL        reduce using rule 91 (condition -> NOT condition .)
    MULTIGUAL       reduce using rule 91 (condition -> NOT condition .)
    COMA            reduce using rule 91 (condition -> NOT condition .)
    FUN             reduce using rule 91 (condition -> NOT condition .)
    ID              reduce using rule 91 (condition -> NOT condition .)
    CORCHETE_APERTURA reduce using rule 91 (condition -> NOT condition .)
    ASIGNAR         reduce using rule 91 (condition -> NOT condition .)
    IF              reduce using rule 91 (condition -> NOT condition .)
    PARENTESIS_APERTURA reduce using rule 91 (condition -> NOT condition .)
    FOR             reduce using rule 91 (condition -> NOT condition .)
    PUNTO           reduce using rule 91 (condition -> NOT condition .)
    BRING           reduce using rule 91 (condition -> NOT condition .)
    WHILE           reduce using rule 91 (condition -> NOT condition .)
    VOID            reduce using rule 91 (condition -> NOT condition .)
    FLOAT           reduce using rule 91 (condition -> NOT condition .)
    INT             reduce using rule 91 (condition -> NOT condition .)
    BOOL            reduce using rule 91 (condition -> NOT condition .)
    $end            reduce using rule 91 (condition -> NOT condition .)
    LLAVE_CIERRE    reduce using rule 91 (condition -> NOT condition .)
    ELSE            reduce using rule 91 (condition -> NOT condition .)
    CORCHETE_CIERRE reduce using rule 91 (condition -> NOT condition .)
    NOT             reduce using rule 91 (condition -> NOT condition .)
    NUMERO          reduce using rule 91 (condition -> NOT condition .)
    ENTERO          reduce using rule 91 (condition -> NOT condition .)
    TRUE            reduce using rule 91 (condition -> NOT condition .)
    FALSE           reduce using rule 91 (condition -> NOT condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 91 (condition -> NOT condition .) ]
  ! OR              [ reduce using rule 91 (condition -> NOT condition .) ]
  ! MENORQUE        [ reduce using rule 91 (condition -> NOT condition .) ]
  ! MAYORQUE        [ reduce using rule 91 (condition -> NOT condition .) ]
  ! IGUAL           [ reduce using rule 91 (condition -> NOT condition .) ]
  ! DIFERENTE       [ reduce using rule 91 (condition -> NOT condition .) ]
  ! MENORIGUAL      [ reduce using rule 91 (condition -> NOT condition .) ]
  ! MAYORIGUAL      [ reduce using rule 91 (condition -> NOT condition .) ]


state 117

    (98) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (45) call_fun -> PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 42
    ID              shift and go to state 47
    NUMERO          shift and go to state 48
    ENTERO          shift and go to state 49
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    condition                      shift and go to state 104
    expression_list                shift and go to state 44
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 118

    (43) call_fun -> ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> ID PARENTESIS_APERTURA . expression_list PUNTOCOMA
    (52) call_fun -> ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE
    (116) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 78
    expression                     shift and go to state 79
    empty                          shift and go to state 41

state 119

    (54) variable_declaration -> datatype ID ASIGNAR . expression PUNTOCOMA
    (55) variable_declaration -> datatype ID ASIGNAR . condition PUNTOCOMA
    (65) variable_declaration -> datatype ID ASIGNAR . expression
    (66) variable_declaration -> datatype ID ASIGNAR . condition
    (73) variable_declaration -> datatype ID ASIGNAR . PUNTOCOMA
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    PUNTOCOMA       shift and go to state 178
    ID              shift and go to state 81
    NUMERO          shift and go to state 85
    ENTERO          shift and go to state 86
    PARENTESIS_APERTURA shift and go to state 87
    NOT             shift and go to state 45
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    expression                     shift and go to state 177
    condition                      shift and go to state 179
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 120

    (63) variable_declaration -> datatype ID expression . PUNTOCOMA
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       shift and go to state 180
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 121

    (56) variable_declaration -> datatype ID PUNTOCOMA .

    FUN             reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    ID              reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    ASIGNAR         reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    IF              reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    FOR             reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    PUNTO           reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    BRING           reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    WHILE           reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    VOID            reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    FLOAT           reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    INT             reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    BOOL            reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    $end            reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    ELSE            reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    NOT             reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    NUMERO          reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    ENTERO          reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    TRUE            reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)
    FALSE           reduce using rule 56 (variable_declaration -> datatype ID PUNTOCOMA .)


state 122

    (64) variable_declaration -> datatype ID condition . PUNTOCOMA
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       shift and go to state 181
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 123

    (60) variable_declaration -> datatype ASIGNAR expression . PUNTOCOMA
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       shift and go to state 182
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 124

    (61) variable_declaration -> datatype ASIGNAR condition . PUNTOCOMA
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       shift and go to state 183
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 125

    (57) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE . ID ASIGNAR expression_list PUNTOCOMA
    (68) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE . ID ASIGNAR expression_list
    (71) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE . ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE . ID expression_list PUNTOCOMA
    (74) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE . ID ASIGNAR PUNTOCOMA

    ID              shift and go to state 184
    ASIGNAR         shift and go to state 185


state 126

    (70) variable_declaration -> datatype CORCHETE_APERTURA ID . ASIGNAR expression_list PUNTOCOMA

    ASIGNAR         shift and go to state 186


state 127

    (69) variable_declaration -> datatype CORCHETE_CIERRE ID . ASIGNAR expression_list PUNTOCOMA

    ASIGNAR         shift and go to state 187


state 128

    (77) assignment -> ASIGNAR expression PUNTOCOMA .

    FUN             reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    ID              reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    ASIGNAR         reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    IF              reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    FOR             reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    PUNTO           reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    BRING           reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    WHILE           reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    VOID            reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    FLOAT           reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    INT             reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    BOOL            reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    $end            reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)
    ELSE            reduce using rule 77 (assignment -> ASIGNAR expression PUNTOCOMA .)


state 129

    (116) expression -> PARENTESIS_APERTURA expression . PARENTESIS_CIERRE
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PARENTESIS_CIERRE shift and go to state 147
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 130

    (59) variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID . ASIGNAR expression_list PUNTOCOMA

    ASIGNAR         shift and go to state 188


state 131

    (25) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> IF PARENTESIS_APERTURA condition . LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> IF PARENTESIS_APERTURA condition . LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (98) condition -> PARENTESIS_APERTURA condition . PARENTESIS_CIERRE
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 189
    LLAVE_APERTURA  shift and go to state 190
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 132

    (31) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 191


state 133

    (29) if_statement -> IF condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> IF condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 192


state 134

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration . condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (89) condition -> . condition AND condition
    (90) condition -> . condition OR condition
    (91) condition -> . NOT condition
    (92) condition -> . condition MENORQUE condition
    (93) condition -> . condition MAYORQUE condition
    (94) condition -> . condition IGUAL condition
    (95) condition -> . condition DIFERENTE condition
    (96) condition -> . condition MENORIGUAL condition
    (97) condition -> . condition MAYORIGUAL condition
    (98) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (99) condition -> . boleano
    (100) condition -> . ID
    (101) condition -> . NUMERO
    (102) condition -> . ENTERO
    (103) condition -> . call_fun
    (124) boleano -> . TRUE
    (125) boleano -> . FALSE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE

    NOT             shift and go to state 45
    PARENTESIS_APERTURA shift and go to state 117
    ID              shift and go to state 64
    NUMERO          shift and go to state 65
    ENTERO          shift and go to state 66
    TRUE            shift and go to state 52
    FALSE           shift and go to state 53
    PUNTO           shift and go to state 21

    condition                      shift and go to state 193
    boleano                        shift and go to state 46
    call_fun                       shift and go to state 50

state 135

    (58) variable_declaration -> ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 33


state 136

    (46) call_fun -> PUNTO ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 194
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 137

    (14) import -> BRING ID PUNTOCOMA .

    FUN             reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    ID              reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    ASIGNAR         reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    IF              reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    FOR             reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    PUNTO           reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    BRING           reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    WHILE           reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    VOID            reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    FLOAT           reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    INT             reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    BOOL            reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    $end            reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 14 (import -> BRING ID PUNTOCOMA .)
    ELSE            reduce using rule 14 (import -> BRING ID PUNTOCOMA .)


state 138

    (85) while_statement -> WHILE PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> WHILE PARENTESIS_APERTURA condition . LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> WHILE PARENTESIS_APERTURA condition . PARENTESIS_CIERRE statements LLAVE_CIERRE
    (98) condition -> PARENTESIS_APERTURA condition . PARENTESIS_CIERRE
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 195
    LLAVE_APERTURA  shift and go to state 196
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 139

    (86) while_statement -> WHILE condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 197


state 140

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 198
    DOSPUNTOS       shift and go to state 199


state 141

    (22) fun_statement -> FUN ID parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    DOSPUNTOS       shift and go to state 200


state 142

    (117) parameters -> datatype ID .
    (118) parameters -> datatype ID . COMA parameters

    PARENTESIS_CIERRE reduce using rule 117 (parameters -> datatype ID .)
    DOSPUNTOS       reduce using rule 117 (parameters -> datatype ID .)
    COMA            shift and go to state 201


state 143

    (20) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    DOSPUNTOS       shift and go to state 202


state 144

    (16) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    DOSPUNTOS       shift and go to state 203


state 145

    (43) call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE . PUNTOCOMA
    (52) call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 204
    FUN             reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ID              reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    CORCHETE_APERTURA reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ASIGNAR         reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    IF              reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    FOR             reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    PUNTO           reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    BRING           reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    WHILE           reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    VOID            reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    FLOAT           reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    INT             reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    BOOL            reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    $end            reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    LLAVE_CIERRE    reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ELSE            reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    PARENTESIS_CIERRE reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    AND             reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    OR              reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MENORQUE        reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MAYORQUE        reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    IGUAL           reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    DIFERENTE       reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MENORIGUAL      reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MAYORIGUAL      reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    LLAVE_APERTURA  reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    SUMA            reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    RESTA           reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MULTIPLICACION  reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    DIVISION        reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MODULO          reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MASIGUAL        reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MENOSIGUAL      reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    DIVIGUAL        reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MULTIGUAL       reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    COMA            reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    CORCHETE_CIERRE reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    NOT             reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    NUMERO          reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ENTERO          reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    TRUE            reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    FALSE           reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)

  ! PUNTOCOMA       [ reduce using rule 52 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .) ]


state 146

    (49) call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .

    FUN             reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ID              reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    IF              reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    FOR             reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    BRING           reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    WHILE           reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    VOID            reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    INT             reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    BOOL            reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    $end            reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ELSE            reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    AND             reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    OR              reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MENORQUE        reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MAYORQUE        reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    IGUAL           reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    DIFERENTE       reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MENORIGUAL      reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    SUMA            reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    RESTA           reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    DIVISION        reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MODULO          reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MASIGUAL        reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    DIVIGUAL        reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MULTIGUAL       reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    COMA            reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    NOT             reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    TRUE            reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    FALSE           reduce using rule 49 (call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)


state 147

    (116) expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .

    PUNTOCOMA       reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    SUMA            reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    RESTA           reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    MULTIPLICACION  reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    DIVISION        reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    MODULO          reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    MASIGUAL        reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    MENOSIGUAL      reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    DIVIGUAL        reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    MULTIGUAL       reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    COMA            reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    PARENTESIS_CIERRE reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    FUN             reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    ID              reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    CORCHETE_APERTURA reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    ASIGNAR         reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    IF              reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    FOR             reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    PUNTO           reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    BRING           reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    WHILE           reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    VOID            reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    FLOAT           reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    INT             reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    BOOL            reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    $end            reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    LLAVE_CIERRE    reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    ELSE            reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    CORCHETE_CIERRE reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    NOT             reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    NUMERO          reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    ENTERO          reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    TRUE            reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    FALSE           reduce using rule 116 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)


state 148

    (75) assignment -> ID ASIGNAR expression PUNTOCOMA .

    FUN             reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    ID              reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    ASIGNAR         reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    IF              reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    FOR             reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    PUNTO           reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    BRING           reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    WHILE           reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    VOID            reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    FLOAT           reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    INT             reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    BOOL            reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    $end            reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    ELSE            reduce using rule 75 (assignment -> ID ASIGNAR expression PUNTOCOMA .)


state 149

    (76) assignment -> ID ASIGNAR condition PUNTOCOMA .

    FUN             reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    ID              reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    ASIGNAR         reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    IF              reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    FOR             reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    PUNTO           reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    BRING           reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    WHILE           reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    VOID            reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    FLOAT           reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    INT             reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    BOOL            reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    $end            reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)
    ELSE            reduce using rule 76 (assignment -> ID ASIGNAR condition PUNTOCOMA .)


state 150

    (116) expression -> PARENTESIS_APERTURA expression . PARENTESIS_CIERRE
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition
    (81) expression_list -> expression .
    (82) expression_list -> expression . COMA expression_list

  ! shift/reduce conflict for PARENTESIS_CIERRE resolved as shift
    PARENTESIS_CIERRE shift and go to state 147
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97
    COMA            shift and go to state 98

  ! PARENTESIS_CIERRE [ reduce using rule 81 (expression_list -> expression .) ]


state 151

    (107) expression -> expression SUMA expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       reduce using rule 107 (expression -> expression SUMA expression .)
    SUMA            reduce using rule 107 (expression -> expression SUMA expression .)
    RESTA           reduce using rule 107 (expression -> expression SUMA expression .)
    MODULO          reduce using rule 107 (expression -> expression SUMA expression .)
    MASIGUAL        reduce using rule 107 (expression -> expression SUMA expression .)
    MENOSIGUAL      reduce using rule 107 (expression -> expression SUMA expression .)
    DIVIGUAL        reduce using rule 107 (expression -> expression SUMA expression .)
    MULTIGUAL       reduce using rule 107 (expression -> expression SUMA expression .)
    COMA            reduce using rule 107 (expression -> expression SUMA expression .)
    PARENTESIS_CIERRE reduce using rule 107 (expression -> expression SUMA expression .)
    FUN             reduce using rule 107 (expression -> expression SUMA expression .)
    ID              reduce using rule 107 (expression -> expression SUMA expression .)
    CORCHETE_APERTURA reduce using rule 107 (expression -> expression SUMA expression .)
    ASIGNAR         reduce using rule 107 (expression -> expression SUMA expression .)
    IF              reduce using rule 107 (expression -> expression SUMA expression .)
    PARENTESIS_APERTURA reduce using rule 107 (expression -> expression SUMA expression .)
    FOR             reduce using rule 107 (expression -> expression SUMA expression .)
    PUNTO           reduce using rule 107 (expression -> expression SUMA expression .)
    BRING           reduce using rule 107 (expression -> expression SUMA expression .)
    WHILE           reduce using rule 107 (expression -> expression SUMA expression .)
    VOID            reduce using rule 107 (expression -> expression SUMA expression .)
    FLOAT           reduce using rule 107 (expression -> expression SUMA expression .)
    INT             reduce using rule 107 (expression -> expression SUMA expression .)
    BOOL            reduce using rule 107 (expression -> expression SUMA expression .)
    $end            reduce using rule 107 (expression -> expression SUMA expression .)
    LLAVE_CIERRE    reduce using rule 107 (expression -> expression SUMA expression .)
    ELSE            reduce using rule 107 (expression -> expression SUMA expression .)
    CORCHETE_CIERRE reduce using rule 107 (expression -> expression SUMA expression .)
    NOT             reduce using rule 107 (expression -> expression SUMA expression .)
    NUMERO          reduce using rule 107 (expression -> expression SUMA expression .)
    ENTERO          reduce using rule 107 (expression -> expression SUMA expression .)
    TRUE            reduce using rule 107 (expression -> expression SUMA expression .)
    FALSE           reduce using rule 107 (expression -> expression SUMA expression .)
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92

  ! MULTIPLICACION  [ reduce using rule 107 (expression -> expression SUMA expression .) ]
  ! DIVISION        [ reduce using rule 107 (expression -> expression SUMA expression .) ]
  ! SUMA            [ shift and go to state 89 ]
  ! RESTA           [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 93 ]
  ! MASIGUAL        [ shift and go to state 94 ]
  ! MENOSIGUAL      [ shift and go to state 95 ]
  ! DIVIGUAL        [ shift and go to state 96 ]
  ! MULTIGUAL       [ shift and go to state 97 ]


state 152

    (108) expression -> expression RESTA expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       reduce using rule 108 (expression -> expression RESTA expression .)
    SUMA            reduce using rule 108 (expression -> expression RESTA expression .)
    RESTA           reduce using rule 108 (expression -> expression RESTA expression .)
    MODULO          reduce using rule 108 (expression -> expression RESTA expression .)
    MASIGUAL        reduce using rule 108 (expression -> expression RESTA expression .)
    MENOSIGUAL      reduce using rule 108 (expression -> expression RESTA expression .)
    DIVIGUAL        reduce using rule 108 (expression -> expression RESTA expression .)
    MULTIGUAL       reduce using rule 108 (expression -> expression RESTA expression .)
    COMA            reduce using rule 108 (expression -> expression RESTA expression .)
    PARENTESIS_CIERRE reduce using rule 108 (expression -> expression RESTA expression .)
    FUN             reduce using rule 108 (expression -> expression RESTA expression .)
    ID              reduce using rule 108 (expression -> expression RESTA expression .)
    CORCHETE_APERTURA reduce using rule 108 (expression -> expression RESTA expression .)
    ASIGNAR         reduce using rule 108 (expression -> expression RESTA expression .)
    IF              reduce using rule 108 (expression -> expression RESTA expression .)
    PARENTESIS_APERTURA reduce using rule 108 (expression -> expression RESTA expression .)
    FOR             reduce using rule 108 (expression -> expression RESTA expression .)
    PUNTO           reduce using rule 108 (expression -> expression RESTA expression .)
    BRING           reduce using rule 108 (expression -> expression RESTA expression .)
    WHILE           reduce using rule 108 (expression -> expression RESTA expression .)
    VOID            reduce using rule 108 (expression -> expression RESTA expression .)
    FLOAT           reduce using rule 108 (expression -> expression RESTA expression .)
    INT             reduce using rule 108 (expression -> expression RESTA expression .)
    BOOL            reduce using rule 108 (expression -> expression RESTA expression .)
    $end            reduce using rule 108 (expression -> expression RESTA expression .)
    LLAVE_CIERRE    reduce using rule 108 (expression -> expression RESTA expression .)
    ELSE            reduce using rule 108 (expression -> expression RESTA expression .)
    CORCHETE_CIERRE reduce using rule 108 (expression -> expression RESTA expression .)
    NOT             reduce using rule 108 (expression -> expression RESTA expression .)
    NUMERO          reduce using rule 108 (expression -> expression RESTA expression .)
    ENTERO          reduce using rule 108 (expression -> expression RESTA expression .)
    TRUE            reduce using rule 108 (expression -> expression RESTA expression .)
    FALSE           reduce using rule 108 (expression -> expression RESTA expression .)
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92

  ! MULTIPLICACION  [ reduce using rule 108 (expression -> expression RESTA expression .) ]
  ! DIVISION        [ reduce using rule 108 (expression -> expression RESTA expression .) ]
  ! SUMA            [ shift and go to state 89 ]
  ! RESTA           [ shift and go to state 90 ]
  ! MODULO          [ shift and go to state 93 ]
  ! MASIGUAL        [ shift and go to state 94 ]
  ! MENOSIGUAL      [ shift and go to state 95 ]
  ! DIVIGUAL        [ shift and go to state 96 ]
  ! MULTIGUAL       [ shift and go to state 97 ]


state 153

    (109) expression -> expression MULTIPLICACION expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    SUMA            reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    RESTA           reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    MULTIPLICACION  reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    DIVISION        reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    MODULO          reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    MASIGUAL        reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    MENOSIGUAL      reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    DIVIGUAL        reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    MULTIGUAL       reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    COMA            reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    PARENTESIS_CIERRE reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    FUN             reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    ID              reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    CORCHETE_APERTURA reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    ASIGNAR         reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    IF              reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    PARENTESIS_APERTURA reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    FOR             reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    PUNTO           reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    BRING           reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    WHILE           reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    VOID            reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    FLOAT           reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    INT             reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    BOOL            reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    $end            reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    LLAVE_CIERRE    reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    ELSE            reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    CORCHETE_CIERRE reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    NOT             reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    NUMERO          reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    ENTERO          reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    TRUE            reduce using rule 109 (expression -> expression MULTIPLICACION expression .)
    FALSE           reduce using rule 109 (expression -> expression MULTIPLICACION expression .)

  ! SUMA            [ shift and go to state 89 ]
  ! RESTA           [ shift and go to state 90 ]
  ! MULTIPLICACION  [ shift and go to state 91 ]
  ! DIVISION        [ shift and go to state 92 ]
  ! MODULO          [ shift and go to state 93 ]
  ! MASIGUAL        [ shift and go to state 94 ]
  ! MENOSIGUAL      [ shift and go to state 95 ]
  ! DIVIGUAL        [ shift and go to state 96 ]
  ! MULTIGUAL       [ shift and go to state 97 ]


state 154

    (110) expression -> expression DIVISION expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       reduce using rule 110 (expression -> expression DIVISION expression .)
    SUMA            reduce using rule 110 (expression -> expression DIVISION expression .)
    RESTA           reduce using rule 110 (expression -> expression DIVISION expression .)
    MULTIPLICACION  reduce using rule 110 (expression -> expression DIVISION expression .)
    DIVISION        reduce using rule 110 (expression -> expression DIVISION expression .)
    MODULO          reduce using rule 110 (expression -> expression DIVISION expression .)
    MASIGUAL        reduce using rule 110 (expression -> expression DIVISION expression .)
    MENOSIGUAL      reduce using rule 110 (expression -> expression DIVISION expression .)
    DIVIGUAL        reduce using rule 110 (expression -> expression DIVISION expression .)
    MULTIGUAL       reduce using rule 110 (expression -> expression DIVISION expression .)
    COMA            reduce using rule 110 (expression -> expression DIVISION expression .)
    PARENTESIS_CIERRE reduce using rule 110 (expression -> expression DIVISION expression .)
    FUN             reduce using rule 110 (expression -> expression DIVISION expression .)
    ID              reduce using rule 110 (expression -> expression DIVISION expression .)
    CORCHETE_APERTURA reduce using rule 110 (expression -> expression DIVISION expression .)
    ASIGNAR         reduce using rule 110 (expression -> expression DIVISION expression .)
    IF              reduce using rule 110 (expression -> expression DIVISION expression .)
    PARENTESIS_APERTURA reduce using rule 110 (expression -> expression DIVISION expression .)
    FOR             reduce using rule 110 (expression -> expression DIVISION expression .)
    PUNTO           reduce using rule 110 (expression -> expression DIVISION expression .)
    BRING           reduce using rule 110 (expression -> expression DIVISION expression .)
    WHILE           reduce using rule 110 (expression -> expression DIVISION expression .)
    VOID            reduce using rule 110 (expression -> expression DIVISION expression .)
    FLOAT           reduce using rule 110 (expression -> expression DIVISION expression .)
    INT             reduce using rule 110 (expression -> expression DIVISION expression .)
    BOOL            reduce using rule 110 (expression -> expression DIVISION expression .)
    $end            reduce using rule 110 (expression -> expression DIVISION expression .)
    LLAVE_CIERRE    reduce using rule 110 (expression -> expression DIVISION expression .)
    ELSE            reduce using rule 110 (expression -> expression DIVISION expression .)
    CORCHETE_CIERRE reduce using rule 110 (expression -> expression DIVISION expression .)
    NOT             reduce using rule 110 (expression -> expression DIVISION expression .)
    NUMERO          reduce using rule 110 (expression -> expression DIVISION expression .)
    ENTERO          reduce using rule 110 (expression -> expression DIVISION expression .)
    TRUE            reduce using rule 110 (expression -> expression DIVISION expression .)
    FALSE           reduce using rule 110 (expression -> expression DIVISION expression .)

  ! SUMA            [ shift and go to state 89 ]
  ! RESTA           [ shift and go to state 90 ]
  ! MULTIPLICACION  [ shift and go to state 91 ]
  ! DIVISION        [ shift and go to state 92 ]
  ! MODULO          [ shift and go to state 93 ]
  ! MASIGUAL        [ shift and go to state 94 ]
  ! MENOSIGUAL      [ shift and go to state 95 ]
  ! DIVIGUAL        [ shift and go to state 96 ]
  ! MULTIGUAL       [ shift and go to state 97 ]


state 155

    (111) expression -> expression MODULO expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MASIGUAL resolved as shift
  ! shift/reduce conflict for MENOSIGUAL resolved as shift
  ! shift/reduce conflict for DIVIGUAL resolved as shift
  ! shift/reduce conflict for MULTIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 111 (expression -> expression MODULO expression .)
    COMA            reduce using rule 111 (expression -> expression MODULO expression .)
    PARENTESIS_CIERRE reduce using rule 111 (expression -> expression MODULO expression .)
    FUN             reduce using rule 111 (expression -> expression MODULO expression .)
    ID              reduce using rule 111 (expression -> expression MODULO expression .)
    CORCHETE_APERTURA reduce using rule 111 (expression -> expression MODULO expression .)
    ASIGNAR         reduce using rule 111 (expression -> expression MODULO expression .)
    IF              reduce using rule 111 (expression -> expression MODULO expression .)
    PARENTESIS_APERTURA reduce using rule 111 (expression -> expression MODULO expression .)
    FOR             reduce using rule 111 (expression -> expression MODULO expression .)
    PUNTO           reduce using rule 111 (expression -> expression MODULO expression .)
    BRING           reduce using rule 111 (expression -> expression MODULO expression .)
    WHILE           reduce using rule 111 (expression -> expression MODULO expression .)
    VOID            reduce using rule 111 (expression -> expression MODULO expression .)
    FLOAT           reduce using rule 111 (expression -> expression MODULO expression .)
    INT             reduce using rule 111 (expression -> expression MODULO expression .)
    BOOL            reduce using rule 111 (expression -> expression MODULO expression .)
    $end            reduce using rule 111 (expression -> expression MODULO expression .)
    LLAVE_CIERRE    reduce using rule 111 (expression -> expression MODULO expression .)
    ELSE            reduce using rule 111 (expression -> expression MODULO expression .)
    CORCHETE_CIERRE reduce using rule 111 (expression -> expression MODULO expression .)
    NOT             reduce using rule 111 (expression -> expression MODULO expression .)
    NUMERO          reduce using rule 111 (expression -> expression MODULO expression .)
    ENTERO          reduce using rule 111 (expression -> expression MODULO expression .)
    TRUE            reduce using rule 111 (expression -> expression MODULO expression .)
    FALSE           reduce using rule 111 (expression -> expression MODULO expression .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97

  ! SUMA            [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! RESTA           [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! MULTIPLICACION  [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! DIVISION        [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! MASIGUAL        [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! MENOSIGUAL      [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! DIVIGUAL        [ reduce using rule 111 (expression -> expression MODULO expression .) ]
  ! MULTIGUAL       [ reduce using rule 111 (expression -> expression MODULO expression .) ]


state 156

    (112) expression -> expression MASIGUAL expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MASIGUAL resolved as shift
  ! shift/reduce conflict for MENOSIGUAL resolved as shift
  ! shift/reduce conflict for DIVIGUAL resolved as shift
  ! shift/reduce conflict for MULTIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 112 (expression -> expression MASIGUAL expression .)
    COMA            reduce using rule 112 (expression -> expression MASIGUAL expression .)
    PARENTESIS_CIERRE reduce using rule 112 (expression -> expression MASIGUAL expression .)
    FUN             reduce using rule 112 (expression -> expression MASIGUAL expression .)
    ID              reduce using rule 112 (expression -> expression MASIGUAL expression .)
    CORCHETE_APERTURA reduce using rule 112 (expression -> expression MASIGUAL expression .)
    ASIGNAR         reduce using rule 112 (expression -> expression MASIGUAL expression .)
    IF              reduce using rule 112 (expression -> expression MASIGUAL expression .)
    PARENTESIS_APERTURA reduce using rule 112 (expression -> expression MASIGUAL expression .)
    FOR             reduce using rule 112 (expression -> expression MASIGUAL expression .)
    PUNTO           reduce using rule 112 (expression -> expression MASIGUAL expression .)
    BRING           reduce using rule 112 (expression -> expression MASIGUAL expression .)
    WHILE           reduce using rule 112 (expression -> expression MASIGUAL expression .)
    VOID            reduce using rule 112 (expression -> expression MASIGUAL expression .)
    FLOAT           reduce using rule 112 (expression -> expression MASIGUAL expression .)
    INT             reduce using rule 112 (expression -> expression MASIGUAL expression .)
    BOOL            reduce using rule 112 (expression -> expression MASIGUAL expression .)
    $end            reduce using rule 112 (expression -> expression MASIGUAL expression .)
    LLAVE_CIERRE    reduce using rule 112 (expression -> expression MASIGUAL expression .)
    ELSE            reduce using rule 112 (expression -> expression MASIGUAL expression .)
    CORCHETE_CIERRE reduce using rule 112 (expression -> expression MASIGUAL expression .)
    NOT             reduce using rule 112 (expression -> expression MASIGUAL expression .)
    NUMERO          reduce using rule 112 (expression -> expression MASIGUAL expression .)
    ENTERO          reduce using rule 112 (expression -> expression MASIGUAL expression .)
    TRUE            reduce using rule 112 (expression -> expression MASIGUAL expression .)
    FALSE           reduce using rule 112 (expression -> expression MASIGUAL expression .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97

  ! SUMA            [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! RESTA           [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! MULTIPLICACION  [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! DIVISION        [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! MODULO          [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! MASIGUAL        [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! MENOSIGUAL      [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! DIVIGUAL        [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]
  ! MULTIGUAL       [ reduce using rule 112 (expression -> expression MASIGUAL expression .) ]


state 157

    (113) expression -> expression MENOSIGUAL expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MASIGUAL resolved as shift
  ! shift/reduce conflict for MENOSIGUAL resolved as shift
  ! shift/reduce conflict for DIVIGUAL resolved as shift
  ! shift/reduce conflict for MULTIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    COMA            reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    PARENTESIS_CIERRE reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    FUN             reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    ID              reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    CORCHETE_APERTURA reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    ASIGNAR         reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    IF              reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    PARENTESIS_APERTURA reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    FOR             reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    PUNTO           reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    BRING           reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    WHILE           reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    VOID            reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    FLOAT           reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    INT             reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    BOOL            reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    $end            reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    LLAVE_CIERRE    reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    ELSE            reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    CORCHETE_CIERRE reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    NOT             reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    NUMERO          reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    ENTERO          reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    TRUE            reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    FALSE           reduce using rule 113 (expression -> expression MENOSIGUAL expression .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97

  ! SUMA            [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! RESTA           [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! MULTIPLICACION  [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! DIVISION        [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! MODULO          [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! MASIGUAL        [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! MENOSIGUAL      [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! DIVIGUAL        [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]
  ! MULTIGUAL       [ reduce using rule 113 (expression -> expression MENOSIGUAL expression .) ]


state 158

    (114) expression -> expression DIVIGUAL expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MASIGUAL resolved as shift
  ! shift/reduce conflict for MENOSIGUAL resolved as shift
  ! shift/reduce conflict for DIVIGUAL resolved as shift
  ! shift/reduce conflict for MULTIGUAL resolved as shift
    PUNTOCOMA       reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    COMA            reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    PARENTESIS_CIERRE reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    FUN             reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    ID              reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    CORCHETE_APERTURA reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    ASIGNAR         reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    IF              reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    PARENTESIS_APERTURA reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    FOR             reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    PUNTO           reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    BRING           reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    WHILE           reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    VOID            reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    FLOAT           reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    INT             reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    BOOL            reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    $end            reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    LLAVE_CIERRE    reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    ELSE            reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    CORCHETE_CIERRE reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    NOT             reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    NUMERO          reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    ENTERO          reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    TRUE            reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    FALSE           reduce using rule 114 (expression -> expression DIVIGUAL expression .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97

  ! SUMA            [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! RESTA           [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! MULTIPLICACION  [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! DIVISION        [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! MODULO          [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! MASIGUAL        [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! MENOSIGUAL      [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! DIVIGUAL        [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]
  ! MULTIGUAL       [ reduce using rule 114 (expression -> expression DIVIGUAL expression .) ]


state 159

    (115) expression -> expression MULTIGUAL condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    SUMA            reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    RESTA           reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    MULTIPLICACION  reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    DIVISION        reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    MODULO          reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    MASIGUAL        reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    MENOSIGUAL      reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    DIVIGUAL        reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    MULTIGUAL       reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    COMA            reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    PARENTESIS_CIERRE reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    FUN             reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    ID              reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    CORCHETE_APERTURA reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    ASIGNAR         reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    IF              reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    PARENTESIS_APERTURA reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    FOR             reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    PUNTO           reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    BRING           reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    WHILE           reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    VOID            reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    FLOAT           reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    INT             reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    BOOL            reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    $end            reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    LLAVE_CIERRE    reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    ELSE            reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    CORCHETE_CIERRE reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    NOT             reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    NUMERO          reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    ENTERO          reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    TRUE            reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    FALSE           reduce using rule 115 (expression -> expression MULTIGUAL condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 160

    (82) expression_list -> expression COMA expression_list .

    PARENTESIS_CIERRE reduce using rule 82 (expression_list -> expression COMA expression_list .)
    PUNTOCOMA       reduce using rule 82 (expression_list -> expression COMA expression_list .)
    FUN             reduce using rule 82 (expression_list -> expression COMA expression_list .)
    ID              reduce using rule 82 (expression_list -> expression COMA expression_list .)
    CORCHETE_APERTURA reduce using rule 82 (expression_list -> expression COMA expression_list .)
    ASIGNAR         reduce using rule 82 (expression_list -> expression COMA expression_list .)
    IF              reduce using rule 82 (expression_list -> expression COMA expression_list .)
    PARENTESIS_APERTURA reduce using rule 82 (expression_list -> expression COMA expression_list .)
    FOR             reduce using rule 82 (expression_list -> expression COMA expression_list .)
    PUNTO           reduce using rule 82 (expression_list -> expression COMA expression_list .)
    BRING           reduce using rule 82 (expression_list -> expression COMA expression_list .)
    WHILE           reduce using rule 82 (expression_list -> expression COMA expression_list .)
    VOID            reduce using rule 82 (expression_list -> expression COMA expression_list .)
    FLOAT           reduce using rule 82 (expression_list -> expression COMA expression_list .)
    INT             reduce using rule 82 (expression_list -> expression COMA expression_list .)
    BOOL            reduce using rule 82 (expression_list -> expression COMA expression_list .)
    $end            reduce using rule 82 (expression_list -> expression COMA expression_list .)
    LLAVE_CIERRE    reduce using rule 82 (expression_list -> expression COMA expression_list .)
    ELSE            reduce using rule 82 (expression_list -> expression COMA expression_list .)
    NOT             reduce using rule 82 (expression_list -> expression COMA expression_list .)
    NUMERO          reduce using rule 82 (expression_list -> expression COMA expression_list .)
    ENTERO          reduce using rule 82 (expression_list -> expression COMA expression_list .)
    TRUE            reduce using rule 82 (expression_list -> expression COMA expression_list .)
    FALSE           reduce using rule 82 (expression_list -> expression COMA expression_list .)


state 161

    (47) call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    AND             reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    OR              reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORQUE        reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORQUE        reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IGUAL           reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIFERENTE       reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORIGUAL      reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    SUMA            reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    RESTA           reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVISION        reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MODULO          reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MASIGUAL        reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVIGUAL        reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIGUAL       reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    COMA            reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NOT             reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NUMERO          reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ENTERO          reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    TRUE            reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FALSE           reduce using rule 47 (call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 162

    (44) call_fun -> ID PUNTO ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (50) call_fun -> ID PUNTO ID PARENTESIS_APERTURA . expression_list PUNTOCOMA
    (53) call_fun -> ID PUNTO ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE
    (116) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 205
    expression                     shift and go to state 79
    empty                          shift and go to state 41

state 163

    (48) call_fun -> ID PUNTO ID expression_list . PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_CIERRE shift and go to state 206


state 164

    (51) call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_CIERRE shift and go to state 207


state 165

    (84) leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 208


state 166

    (98) condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .

    PARENTESIS_CIERRE reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    AND             reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    OR              reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORQUE        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORQUE        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    IGUAL           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    DIFERENTE       reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORIGUAL      reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORIGUAL      reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    PUNTOCOMA       reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    LLAVE_APERTURA  reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    SUMA            reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    RESTA           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MULTIPLICACION  reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    DIVISION        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MODULO          reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MASIGUAL        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENOSIGUAL      reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    DIVIGUAL        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MULTIGUAL       reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    COMA            reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    FUN             reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    ID              reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    CORCHETE_APERTURA reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    ASIGNAR         reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    IF              reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    FOR             reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    PUNTO           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    BRING           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    WHILE           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    VOID            reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    FLOAT           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    INT             reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    BOOL            reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    $end            reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    LLAVE_CIERRE    reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    ELSE            reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    CORCHETE_CIERRE reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    NOT             reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    NUMERO          reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    ENTERO          reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    TRUE            reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    FALSE           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)


state 167

    (27) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 209
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 168

    (89) condition -> condition AND condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 89 (condition -> condition AND condition .)
    PUNTOCOMA       reduce using rule 89 (condition -> condition AND condition .)
    LLAVE_APERTURA  reduce using rule 89 (condition -> condition AND condition .)
    SUMA            reduce using rule 89 (condition -> condition AND condition .)
    RESTA           reduce using rule 89 (condition -> condition AND condition .)
    MULTIPLICACION  reduce using rule 89 (condition -> condition AND condition .)
    DIVISION        reduce using rule 89 (condition -> condition AND condition .)
    MODULO          reduce using rule 89 (condition -> condition AND condition .)
    MASIGUAL        reduce using rule 89 (condition -> condition AND condition .)
    MENOSIGUAL      reduce using rule 89 (condition -> condition AND condition .)
    DIVIGUAL        reduce using rule 89 (condition -> condition AND condition .)
    MULTIGUAL       reduce using rule 89 (condition -> condition AND condition .)
    COMA            reduce using rule 89 (condition -> condition AND condition .)
    FUN             reduce using rule 89 (condition -> condition AND condition .)
    ID              reduce using rule 89 (condition -> condition AND condition .)
    CORCHETE_APERTURA reduce using rule 89 (condition -> condition AND condition .)
    ASIGNAR         reduce using rule 89 (condition -> condition AND condition .)
    IF              reduce using rule 89 (condition -> condition AND condition .)
    PARENTESIS_APERTURA reduce using rule 89 (condition -> condition AND condition .)
    FOR             reduce using rule 89 (condition -> condition AND condition .)
    PUNTO           reduce using rule 89 (condition -> condition AND condition .)
    BRING           reduce using rule 89 (condition -> condition AND condition .)
    WHILE           reduce using rule 89 (condition -> condition AND condition .)
    VOID            reduce using rule 89 (condition -> condition AND condition .)
    FLOAT           reduce using rule 89 (condition -> condition AND condition .)
    INT             reduce using rule 89 (condition -> condition AND condition .)
    BOOL            reduce using rule 89 (condition -> condition AND condition .)
    $end            reduce using rule 89 (condition -> condition AND condition .)
    LLAVE_CIERRE    reduce using rule 89 (condition -> condition AND condition .)
    ELSE            reduce using rule 89 (condition -> condition AND condition .)
    CORCHETE_CIERRE reduce using rule 89 (condition -> condition AND condition .)
    NOT             reduce using rule 89 (condition -> condition AND condition .)
    NUMERO          reduce using rule 89 (condition -> condition AND condition .)
    ENTERO          reduce using rule 89 (condition -> condition AND condition .)
    TRUE            reduce using rule 89 (condition -> condition AND condition .)
    FALSE           reduce using rule 89 (condition -> condition AND condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 89 (condition -> condition AND condition .) ]
  ! OR              [ reduce using rule 89 (condition -> condition AND condition .) ]
  ! MENORQUE        [ reduce using rule 89 (condition -> condition AND condition .) ]
  ! MAYORQUE        [ reduce using rule 89 (condition -> condition AND condition .) ]
  ! IGUAL           [ reduce using rule 89 (condition -> condition AND condition .) ]
  ! DIFERENTE       [ reduce using rule 89 (condition -> condition AND condition .) ]
  ! MENORIGUAL      [ reduce using rule 89 (condition -> condition AND condition .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (condition -> condition AND condition .) ]


state 169

    (90) condition -> condition OR condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 90 (condition -> condition OR condition .)
    PUNTOCOMA       reduce using rule 90 (condition -> condition OR condition .)
    LLAVE_APERTURA  reduce using rule 90 (condition -> condition OR condition .)
    SUMA            reduce using rule 90 (condition -> condition OR condition .)
    RESTA           reduce using rule 90 (condition -> condition OR condition .)
    MULTIPLICACION  reduce using rule 90 (condition -> condition OR condition .)
    DIVISION        reduce using rule 90 (condition -> condition OR condition .)
    MODULO          reduce using rule 90 (condition -> condition OR condition .)
    MASIGUAL        reduce using rule 90 (condition -> condition OR condition .)
    MENOSIGUAL      reduce using rule 90 (condition -> condition OR condition .)
    DIVIGUAL        reduce using rule 90 (condition -> condition OR condition .)
    MULTIGUAL       reduce using rule 90 (condition -> condition OR condition .)
    COMA            reduce using rule 90 (condition -> condition OR condition .)
    FUN             reduce using rule 90 (condition -> condition OR condition .)
    ID              reduce using rule 90 (condition -> condition OR condition .)
    CORCHETE_APERTURA reduce using rule 90 (condition -> condition OR condition .)
    ASIGNAR         reduce using rule 90 (condition -> condition OR condition .)
    IF              reduce using rule 90 (condition -> condition OR condition .)
    PARENTESIS_APERTURA reduce using rule 90 (condition -> condition OR condition .)
    FOR             reduce using rule 90 (condition -> condition OR condition .)
    PUNTO           reduce using rule 90 (condition -> condition OR condition .)
    BRING           reduce using rule 90 (condition -> condition OR condition .)
    WHILE           reduce using rule 90 (condition -> condition OR condition .)
    VOID            reduce using rule 90 (condition -> condition OR condition .)
    FLOAT           reduce using rule 90 (condition -> condition OR condition .)
    INT             reduce using rule 90 (condition -> condition OR condition .)
    BOOL            reduce using rule 90 (condition -> condition OR condition .)
    $end            reduce using rule 90 (condition -> condition OR condition .)
    LLAVE_CIERRE    reduce using rule 90 (condition -> condition OR condition .)
    ELSE            reduce using rule 90 (condition -> condition OR condition .)
    CORCHETE_CIERRE reduce using rule 90 (condition -> condition OR condition .)
    NOT             reduce using rule 90 (condition -> condition OR condition .)
    NUMERO          reduce using rule 90 (condition -> condition OR condition .)
    ENTERO          reduce using rule 90 (condition -> condition OR condition .)
    TRUE            reduce using rule 90 (condition -> condition OR condition .)
    FALSE           reduce using rule 90 (condition -> condition OR condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 90 (condition -> condition OR condition .) ]
  ! OR              [ reduce using rule 90 (condition -> condition OR condition .) ]
  ! MENORQUE        [ reduce using rule 90 (condition -> condition OR condition .) ]
  ! MAYORQUE        [ reduce using rule 90 (condition -> condition OR condition .) ]
  ! IGUAL           [ reduce using rule 90 (condition -> condition OR condition .) ]
  ! DIFERENTE       [ reduce using rule 90 (condition -> condition OR condition .) ]
  ! MENORIGUAL      [ reduce using rule 90 (condition -> condition OR condition .) ]
  ! MAYORIGUAL      [ reduce using rule 90 (condition -> condition OR condition .) ]


state 170

    (92) condition -> condition MENORQUE condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 92 (condition -> condition MENORQUE condition .)
    PUNTOCOMA       reduce using rule 92 (condition -> condition MENORQUE condition .)
    LLAVE_APERTURA  reduce using rule 92 (condition -> condition MENORQUE condition .)
    SUMA            reduce using rule 92 (condition -> condition MENORQUE condition .)
    RESTA           reduce using rule 92 (condition -> condition MENORQUE condition .)
    MULTIPLICACION  reduce using rule 92 (condition -> condition MENORQUE condition .)
    DIVISION        reduce using rule 92 (condition -> condition MENORQUE condition .)
    MODULO          reduce using rule 92 (condition -> condition MENORQUE condition .)
    MASIGUAL        reduce using rule 92 (condition -> condition MENORQUE condition .)
    MENOSIGUAL      reduce using rule 92 (condition -> condition MENORQUE condition .)
    DIVIGUAL        reduce using rule 92 (condition -> condition MENORQUE condition .)
    MULTIGUAL       reduce using rule 92 (condition -> condition MENORQUE condition .)
    COMA            reduce using rule 92 (condition -> condition MENORQUE condition .)
    FUN             reduce using rule 92 (condition -> condition MENORQUE condition .)
    ID              reduce using rule 92 (condition -> condition MENORQUE condition .)
    CORCHETE_APERTURA reduce using rule 92 (condition -> condition MENORQUE condition .)
    ASIGNAR         reduce using rule 92 (condition -> condition MENORQUE condition .)
    IF              reduce using rule 92 (condition -> condition MENORQUE condition .)
    PARENTESIS_APERTURA reduce using rule 92 (condition -> condition MENORQUE condition .)
    FOR             reduce using rule 92 (condition -> condition MENORQUE condition .)
    PUNTO           reduce using rule 92 (condition -> condition MENORQUE condition .)
    BRING           reduce using rule 92 (condition -> condition MENORQUE condition .)
    WHILE           reduce using rule 92 (condition -> condition MENORQUE condition .)
    VOID            reduce using rule 92 (condition -> condition MENORQUE condition .)
    FLOAT           reduce using rule 92 (condition -> condition MENORQUE condition .)
    INT             reduce using rule 92 (condition -> condition MENORQUE condition .)
    BOOL            reduce using rule 92 (condition -> condition MENORQUE condition .)
    $end            reduce using rule 92 (condition -> condition MENORQUE condition .)
    LLAVE_CIERRE    reduce using rule 92 (condition -> condition MENORQUE condition .)
    ELSE            reduce using rule 92 (condition -> condition MENORQUE condition .)
    CORCHETE_CIERRE reduce using rule 92 (condition -> condition MENORQUE condition .)
    NOT             reduce using rule 92 (condition -> condition MENORQUE condition .)
    NUMERO          reduce using rule 92 (condition -> condition MENORQUE condition .)
    ENTERO          reduce using rule 92 (condition -> condition MENORQUE condition .)
    TRUE            reduce using rule 92 (condition -> condition MENORQUE condition .)
    FALSE           reduce using rule 92 (condition -> condition MENORQUE condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]
  ! OR              [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]
  ! MENORQUE        [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]
  ! MAYORQUE        [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]
  ! IGUAL           [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]
  ! DIFERENTE       [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]
  ! MENORIGUAL      [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]
  ! MAYORIGUAL      [ reduce using rule 92 (condition -> condition MENORQUE condition .) ]


state 171

    (93) condition -> condition MAYORQUE condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 93 (condition -> condition MAYORQUE condition .)
    PUNTOCOMA       reduce using rule 93 (condition -> condition MAYORQUE condition .)
    LLAVE_APERTURA  reduce using rule 93 (condition -> condition MAYORQUE condition .)
    SUMA            reduce using rule 93 (condition -> condition MAYORQUE condition .)
    RESTA           reduce using rule 93 (condition -> condition MAYORQUE condition .)
    MULTIPLICACION  reduce using rule 93 (condition -> condition MAYORQUE condition .)
    DIVISION        reduce using rule 93 (condition -> condition MAYORQUE condition .)
    MODULO          reduce using rule 93 (condition -> condition MAYORQUE condition .)
    MASIGUAL        reduce using rule 93 (condition -> condition MAYORQUE condition .)
    MENOSIGUAL      reduce using rule 93 (condition -> condition MAYORQUE condition .)
    DIVIGUAL        reduce using rule 93 (condition -> condition MAYORQUE condition .)
    MULTIGUAL       reduce using rule 93 (condition -> condition MAYORQUE condition .)
    COMA            reduce using rule 93 (condition -> condition MAYORQUE condition .)
    FUN             reduce using rule 93 (condition -> condition MAYORQUE condition .)
    ID              reduce using rule 93 (condition -> condition MAYORQUE condition .)
    CORCHETE_APERTURA reduce using rule 93 (condition -> condition MAYORQUE condition .)
    ASIGNAR         reduce using rule 93 (condition -> condition MAYORQUE condition .)
    IF              reduce using rule 93 (condition -> condition MAYORQUE condition .)
    PARENTESIS_APERTURA reduce using rule 93 (condition -> condition MAYORQUE condition .)
    FOR             reduce using rule 93 (condition -> condition MAYORQUE condition .)
    PUNTO           reduce using rule 93 (condition -> condition MAYORQUE condition .)
    BRING           reduce using rule 93 (condition -> condition MAYORQUE condition .)
    WHILE           reduce using rule 93 (condition -> condition MAYORQUE condition .)
    VOID            reduce using rule 93 (condition -> condition MAYORQUE condition .)
    FLOAT           reduce using rule 93 (condition -> condition MAYORQUE condition .)
    INT             reduce using rule 93 (condition -> condition MAYORQUE condition .)
    BOOL            reduce using rule 93 (condition -> condition MAYORQUE condition .)
    $end            reduce using rule 93 (condition -> condition MAYORQUE condition .)
    LLAVE_CIERRE    reduce using rule 93 (condition -> condition MAYORQUE condition .)
    ELSE            reduce using rule 93 (condition -> condition MAYORQUE condition .)
    CORCHETE_CIERRE reduce using rule 93 (condition -> condition MAYORQUE condition .)
    NOT             reduce using rule 93 (condition -> condition MAYORQUE condition .)
    NUMERO          reduce using rule 93 (condition -> condition MAYORQUE condition .)
    ENTERO          reduce using rule 93 (condition -> condition MAYORQUE condition .)
    TRUE            reduce using rule 93 (condition -> condition MAYORQUE condition .)
    FALSE           reduce using rule 93 (condition -> condition MAYORQUE condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]
  ! OR              [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]
  ! MENORQUE        [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]
  ! MAYORQUE        [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]
  ! IGUAL           [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]
  ! DIFERENTE       [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]
  ! MENORIGUAL      [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]
  ! MAYORIGUAL      [ reduce using rule 93 (condition -> condition MAYORQUE condition .) ]


state 172

    (94) condition -> condition IGUAL condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 94 (condition -> condition IGUAL condition .)
    PUNTOCOMA       reduce using rule 94 (condition -> condition IGUAL condition .)
    LLAVE_APERTURA  reduce using rule 94 (condition -> condition IGUAL condition .)
    SUMA            reduce using rule 94 (condition -> condition IGUAL condition .)
    RESTA           reduce using rule 94 (condition -> condition IGUAL condition .)
    MULTIPLICACION  reduce using rule 94 (condition -> condition IGUAL condition .)
    DIVISION        reduce using rule 94 (condition -> condition IGUAL condition .)
    MODULO          reduce using rule 94 (condition -> condition IGUAL condition .)
    MASIGUAL        reduce using rule 94 (condition -> condition IGUAL condition .)
    MENOSIGUAL      reduce using rule 94 (condition -> condition IGUAL condition .)
    DIVIGUAL        reduce using rule 94 (condition -> condition IGUAL condition .)
    MULTIGUAL       reduce using rule 94 (condition -> condition IGUAL condition .)
    COMA            reduce using rule 94 (condition -> condition IGUAL condition .)
    FUN             reduce using rule 94 (condition -> condition IGUAL condition .)
    ID              reduce using rule 94 (condition -> condition IGUAL condition .)
    CORCHETE_APERTURA reduce using rule 94 (condition -> condition IGUAL condition .)
    ASIGNAR         reduce using rule 94 (condition -> condition IGUAL condition .)
    IF              reduce using rule 94 (condition -> condition IGUAL condition .)
    PARENTESIS_APERTURA reduce using rule 94 (condition -> condition IGUAL condition .)
    FOR             reduce using rule 94 (condition -> condition IGUAL condition .)
    PUNTO           reduce using rule 94 (condition -> condition IGUAL condition .)
    BRING           reduce using rule 94 (condition -> condition IGUAL condition .)
    WHILE           reduce using rule 94 (condition -> condition IGUAL condition .)
    VOID            reduce using rule 94 (condition -> condition IGUAL condition .)
    FLOAT           reduce using rule 94 (condition -> condition IGUAL condition .)
    INT             reduce using rule 94 (condition -> condition IGUAL condition .)
    BOOL            reduce using rule 94 (condition -> condition IGUAL condition .)
    $end            reduce using rule 94 (condition -> condition IGUAL condition .)
    LLAVE_CIERRE    reduce using rule 94 (condition -> condition IGUAL condition .)
    ELSE            reduce using rule 94 (condition -> condition IGUAL condition .)
    CORCHETE_CIERRE reduce using rule 94 (condition -> condition IGUAL condition .)
    NOT             reduce using rule 94 (condition -> condition IGUAL condition .)
    NUMERO          reduce using rule 94 (condition -> condition IGUAL condition .)
    ENTERO          reduce using rule 94 (condition -> condition IGUAL condition .)
    TRUE            reduce using rule 94 (condition -> condition IGUAL condition .)
    FALSE           reduce using rule 94 (condition -> condition IGUAL condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 94 (condition -> condition IGUAL condition .) ]
  ! OR              [ reduce using rule 94 (condition -> condition IGUAL condition .) ]
  ! MENORQUE        [ reduce using rule 94 (condition -> condition IGUAL condition .) ]
  ! MAYORQUE        [ reduce using rule 94 (condition -> condition IGUAL condition .) ]
  ! IGUAL           [ reduce using rule 94 (condition -> condition IGUAL condition .) ]
  ! DIFERENTE       [ reduce using rule 94 (condition -> condition IGUAL condition .) ]
  ! MENORIGUAL      [ reduce using rule 94 (condition -> condition IGUAL condition .) ]
  ! MAYORIGUAL      [ reduce using rule 94 (condition -> condition IGUAL condition .) ]


state 173

    (95) condition -> condition DIFERENTE condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 95 (condition -> condition DIFERENTE condition .)
    PUNTOCOMA       reduce using rule 95 (condition -> condition DIFERENTE condition .)
    LLAVE_APERTURA  reduce using rule 95 (condition -> condition DIFERENTE condition .)
    SUMA            reduce using rule 95 (condition -> condition DIFERENTE condition .)
    RESTA           reduce using rule 95 (condition -> condition DIFERENTE condition .)
    MULTIPLICACION  reduce using rule 95 (condition -> condition DIFERENTE condition .)
    DIVISION        reduce using rule 95 (condition -> condition DIFERENTE condition .)
    MODULO          reduce using rule 95 (condition -> condition DIFERENTE condition .)
    MASIGUAL        reduce using rule 95 (condition -> condition DIFERENTE condition .)
    MENOSIGUAL      reduce using rule 95 (condition -> condition DIFERENTE condition .)
    DIVIGUAL        reduce using rule 95 (condition -> condition DIFERENTE condition .)
    MULTIGUAL       reduce using rule 95 (condition -> condition DIFERENTE condition .)
    COMA            reduce using rule 95 (condition -> condition DIFERENTE condition .)
    FUN             reduce using rule 95 (condition -> condition DIFERENTE condition .)
    ID              reduce using rule 95 (condition -> condition DIFERENTE condition .)
    CORCHETE_APERTURA reduce using rule 95 (condition -> condition DIFERENTE condition .)
    ASIGNAR         reduce using rule 95 (condition -> condition DIFERENTE condition .)
    IF              reduce using rule 95 (condition -> condition DIFERENTE condition .)
    PARENTESIS_APERTURA reduce using rule 95 (condition -> condition DIFERENTE condition .)
    FOR             reduce using rule 95 (condition -> condition DIFERENTE condition .)
    PUNTO           reduce using rule 95 (condition -> condition DIFERENTE condition .)
    BRING           reduce using rule 95 (condition -> condition DIFERENTE condition .)
    WHILE           reduce using rule 95 (condition -> condition DIFERENTE condition .)
    VOID            reduce using rule 95 (condition -> condition DIFERENTE condition .)
    FLOAT           reduce using rule 95 (condition -> condition DIFERENTE condition .)
    INT             reduce using rule 95 (condition -> condition DIFERENTE condition .)
    BOOL            reduce using rule 95 (condition -> condition DIFERENTE condition .)
    $end            reduce using rule 95 (condition -> condition DIFERENTE condition .)
    LLAVE_CIERRE    reduce using rule 95 (condition -> condition DIFERENTE condition .)
    ELSE            reduce using rule 95 (condition -> condition DIFERENTE condition .)
    CORCHETE_CIERRE reduce using rule 95 (condition -> condition DIFERENTE condition .)
    NOT             reduce using rule 95 (condition -> condition DIFERENTE condition .)
    NUMERO          reduce using rule 95 (condition -> condition DIFERENTE condition .)
    ENTERO          reduce using rule 95 (condition -> condition DIFERENTE condition .)
    TRUE            reduce using rule 95 (condition -> condition DIFERENTE condition .)
    FALSE           reduce using rule 95 (condition -> condition DIFERENTE condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]
  ! OR              [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]
  ! MENORQUE        [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]
  ! MAYORQUE        [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]
  ! IGUAL           [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]
  ! DIFERENTE       [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]
  ! MENORIGUAL      [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]
  ! MAYORIGUAL      [ reduce using rule 95 (condition -> condition DIFERENTE condition .) ]


state 174

    (96) condition -> condition MENORIGUAL condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    PUNTOCOMA       reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    LLAVE_APERTURA  reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    SUMA            reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    RESTA           reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    MULTIPLICACION  reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    DIVISION        reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    MODULO          reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    MASIGUAL        reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    MENOSIGUAL      reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    DIVIGUAL        reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    MULTIGUAL       reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    COMA            reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    FUN             reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    ID              reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    CORCHETE_APERTURA reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    ASIGNAR         reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    IF              reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    PARENTESIS_APERTURA reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    FOR             reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    PUNTO           reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    BRING           reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    WHILE           reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    VOID            reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    FLOAT           reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    INT             reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    BOOL            reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    $end            reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    LLAVE_CIERRE    reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    ELSE            reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    CORCHETE_CIERRE reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    NOT             reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    NUMERO          reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    ENTERO          reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    TRUE            reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    FALSE           reduce using rule 96 (condition -> condition MENORIGUAL condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]
  ! OR              [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]
  ! MENORQUE        [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]
  ! MAYORQUE        [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]
  ! IGUAL           [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]
  ! DIFERENTE       [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]
  ! MENORIGUAL      [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (condition -> condition MENORIGUAL condition .) ]


state 175

    (97) condition -> condition MAYORIGUAL condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    PUNTOCOMA       reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    LLAVE_APERTURA  reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    SUMA            reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    RESTA           reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    MULTIPLICACION  reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    DIVISION        reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    MODULO          reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    MASIGUAL        reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    MENOSIGUAL      reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    DIVIGUAL        reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    MULTIGUAL       reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    COMA            reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    FUN             reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    ID              reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    CORCHETE_APERTURA reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    ASIGNAR         reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    IF              reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    PARENTESIS_APERTURA reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    FOR             reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    PUNTO           reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    BRING           reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    WHILE           reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    VOID            reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    FLOAT           reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    INT             reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    BOOL            reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    $end            reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    LLAVE_CIERRE    reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    ELSE            reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    CORCHETE_CIERRE reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    NOT             reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    NUMERO          reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    ENTERO          reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    TRUE            reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    FALSE           reduce using rule 97 (condition -> condition MAYORIGUAL condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114

  ! AND             [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]
  ! OR              [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]
  ! MENORQUE        [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]
  ! MAYORQUE        [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]
  ! IGUAL           [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]
  ! DIFERENTE       [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]
  ! MENORIGUAL      [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (condition -> condition MAYORIGUAL condition .) ]


state 176

    (45) call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    AND             reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    OR              reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORQUE        reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORQUE        reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IGUAL           reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIFERENTE       reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORIGUAL      reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    SUMA            reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    RESTA           reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVISION        reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MODULO          reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MASIGUAL        reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVIGUAL        reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIGUAL       reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    COMA            reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NOT             reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NUMERO          reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ENTERO          reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    TRUE            reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FALSE           reduce using rule 45 (call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 177

    (54) variable_declaration -> datatype ID ASIGNAR expression . PUNTOCOMA
    (65) variable_declaration -> datatype ID ASIGNAR expression .
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PUNTOCOMA       shift and go to state 210
    FUN             reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    ID              reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    CORCHETE_APERTURA reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    ASIGNAR         reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    IF              reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    PARENTESIS_APERTURA reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    FOR             reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    PUNTO           reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    BRING           reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    WHILE           reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    VOID            reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    FLOAT           reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    INT             reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    BOOL            reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    $end            reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    LLAVE_CIERRE    reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    ELSE            reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    NOT             reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    NUMERO          reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    ENTERO          reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    TRUE            reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    FALSE           reduce using rule 65 (variable_declaration -> datatype ID ASIGNAR expression .)
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 178

    (73) variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .

    FUN             reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    ID              reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    ASIGNAR         reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    IF              reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    FOR             reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    PUNTO           reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    BRING           reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    WHILE           reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    VOID            reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    FLOAT           reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    INT             reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    BOOL            reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    $end            reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    ELSE            reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    NOT             reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    NUMERO          reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    ENTERO          reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    TRUE            reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)
    FALSE           reduce using rule 73 (variable_declaration -> datatype ID ASIGNAR PUNTOCOMA .)


state 179

    (55) variable_declaration -> datatype ID ASIGNAR condition . PUNTOCOMA
    (66) variable_declaration -> datatype ID ASIGNAR condition .
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       shift and go to state 211
    FUN             reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    ID              reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    CORCHETE_APERTURA reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    ASIGNAR         reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    IF              reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    PARENTESIS_APERTURA reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    FOR             reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    PUNTO           reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    BRING           reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    WHILE           reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    VOID            reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    FLOAT           reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    INT             reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    BOOL            reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    $end            reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    LLAVE_CIERRE    reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    ELSE            reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    NOT             reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    NUMERO          reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    ENTERO          reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    TRUE            reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    FALSE           reduce using rule 66 (variable_declaration -> datatype ID ASIGNAR condition .)
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 180

    (63) variable_declaration -> datatype ID expression PUNTOCOMA .

    FUN             reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    ID              reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    ASIGNAR         reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    IF              reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    FOR             reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    PUNTO           reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    BRING           reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    WHILE           reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    VOID            reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    FLOAT           reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    INT             reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    BOOL            reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    $end            reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    ELSE            reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    NOT             reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    NUMERO          reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    ENTERO          reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    TRUE            reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)
    FALSE           reduce using rule 63 (variable_declaration -> datatype ID expression PUNTOCOMA .)


state 181

    (64) variable_declaration -> datatype ID condition PUNTOCOMA .

    FUN             reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    ID              reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    ASIGNAR         reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    IF              reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    FOR             reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    PUNTO           reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    BRING           reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    WHILE           reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    VOID            reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    FLOAT           reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    INT             reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    BOOL            reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    $end            reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    ELSE            reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    NOT             reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    NUMERO          reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    ENTERO          reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    TRUE            reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)
    FALSE           reduce using rule 64 (variable_declaration -> datatype ID condition PUNTOCOMA .)


state 182

    (60) variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .

    FUN             reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    ID              reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    ASIGNAR         reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    IF              reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    FOR             reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    PUNTO           reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    BRING           reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    WHILE           reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    VOID            reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    FLOAT           reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    INT             reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    BOOL            reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    $end            reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    ELSE            reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    NOT             reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    NUMERO          reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    ENTERO          reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    TRUE            reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)
    FALSE           reduce using rule 60 (variable_declaration -> datatype ASIGNAR expression PUNTOCOMA .)


state 183

    (61) variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .

    FUN             reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    ID              reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    ASIGNAR         reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    IF              reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    FOR             reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    PUNTO           reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    BRING           reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    WHILE           reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    VOID            reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    FLOAT           reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    INT             reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    BOOL            reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    $end            reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    ELSE            reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    NOT             reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    NUMERO          reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    ENTERO          reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    TRUE            reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)
    FALSE           reduce using rule 61 (variable_declaration -> datatype ASIGNAR condition PUNTOCOMA .)


state 184

    (57) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID . ASIGNAR expression_list PUNTOCOMA
    (68) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID . ASIGNAR expression_list
    (72) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID . expression_list PUNTOCOMA
    (74) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID . ASIGNAR PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ASIGNAR         shift and go to state 212
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 213
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 185

    (71) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR . expression_list PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 214
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 186

    (70) variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR . expression_list PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 215
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 187

    (69) variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR . expression_list PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 216
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 188

    (59) variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR . expression_list PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    PUNTOCOMA       reduce using rule 126 (empty -> .)

    expression_list                shift and go to state 217
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 189

    (25) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . statements LLAVE_CIERRE
    (36) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements
    (38) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (98) condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_APERTURA  shift and go to state 218
    PARENTESIS_CIERRE reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    AND             reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    OR              reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORQUE        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORQUE        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    IGUAL           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    DIFERENTE       reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORIGUAL      reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORIGUAL      reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 219
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 190

    (33) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA . statements LLAVE_CIERRE
    (34) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 220
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 191

    (31) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 221
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 192

    (29) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (30) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 222
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 193

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition . PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (89) condition -> condition . AND condition
    (90) condition -> condition . OR condition
    (92) condition -> condition . MENORQUE condition
    (93) condition -> condition . MAYORQUE condition
    (94) condition -> condition . IGUAL condition
    (95) condition -> condition . DIFERENTE condition
    (96) condition -> condition . MENORIGUAL condition
    (97) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       shift and go to state 223
    AND             shift and go to state 107
    OR              shift and go to state 108
    MENORQUE        shift and go to state 109
    MAYORQUE        shift and go to state 110
    IGUAL           shift and go to state 111
    DIFERENTE       shift and go to state 112
    MENORIGUAL      shift and go to state 113
    MAYORIGUAL      shift and go to state 114


state 194

    (46) call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_CIERRE shift and go to state 224


state 195

    (85) while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE . statements LLAVE_CIERRE
    (98) condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_APERTURA  shift and go to state 225
    PARENTESIS_CIERRE reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    AND             reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    OR              reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORQUE        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORQUE        reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    IGUAL           reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    DIFERENTE       reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORIGUAL      reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORIGUAL      reduce using rule 98 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 226
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 196

    (87) while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 227
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 197

    (86) while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 228
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 198

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

    DOSPUNTOS       shift and go to state 229
    LLAVE_APERTURA  shift and go to state 231
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

    datatype                       shift and go to state 230

state 199

    (23) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

    datatype                       shift and go to state 232

state 200

    (22) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

    datatype                       shift and go to state 233

state 201

    (118) parameters -> datatype ID COMA . parameters
    (117) parameters -> . datatype ID
    (118) parameters -> . datatype ID COMA parameters
    (119) parameters -> . empty
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL
    (126) empty -> .

    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27
    PARENTESIS_CIERRE reduce using rule 126 (empty -> .)
    DOSPUNTOS       reduce using rule 126 (empty -> .)

    datatype                       shift and go to state 74
    parameters                     shift and go to state 234
    empty                          shift and go to state 75

state 202

    (20) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

    datatype                       shift and go to state 235

state 203

    (16) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

    datatype                       shift and go to state 236

state 204

    (43) call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    AND             reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    OR              reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORQUE        reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORQUE        reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IGUAL           reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIFERENTE       reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORIGUAL      reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    SUMA            reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    RESTA           reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVISION        reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MODULO          reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MASIGUAL        reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVIGUAL        reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIGUAL       reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    COMA            reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NOT             reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NUMERO          reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ENTERO          reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    TRUE            reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FALSE           reduce using rule 43 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 205

    (44) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE PUNTOCOMA
    (50) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list . PUNTOCOMA
    (53) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE

    PARENTESIS_CIERRE shift and go to state 237
    PUNTOCOMA       shift and go to state 238


state 206

    (48) call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 239


state 207

    (51) call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 240


state 208

    (84) leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .

    FUN             reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    ID              reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    IF              reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    INT             reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    $end            reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 84 (leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA .)


state 209

    (27) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE
    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 241


state 210

    (54) variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .

    FUN             reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    ID              reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    ASIGNAR         reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    IF              reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    FOR             reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    PUNTO           reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    BRING           reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    WHILE           reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    VOID            reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    FLOAT           reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    INT             reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    BOOL            reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    $end            reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    ELSE            reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    NOT             reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    NUMERO          reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    ENTERO          reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    TRUE            reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    FALSE           reduce using rule 54 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)


state 211

    (55) variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .

    FUN             reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    ID              reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    ASIGNAR         reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    IF              reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    FOR             reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    PUNTO           reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    BRING           reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    WHILE           reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    VOID            reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    FLOAT           reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    INT             reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    BOOL            reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    $end            reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    ELSE            reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    NOT             reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    NUMERO          reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    ENTERO          reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    TRUE            reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    FALSE           reduce using rule 55 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)


state 212

    (57) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR . expression_list PUNTOCOMA
    (68) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR . expression_list
    (74) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR . PUNTOCOMA
    (81) expression_list -> . expression
    (82) expression_list -> . expression COMA expression_list
    (83) expression_list -> . empty
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (126) empty -> .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
    PUNTOCOMA       shift and go to state 243
    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60
    FUN             reduce using rule 126 (empty -> .)
    CORCHETE_APERTURA reduce using rule 126 (empty -> .)
    ASIGNAR         reduce using rule 126 (empty -> .)
    IF              reduce using rule 126 (empty -> .)
    FOR             reduce using rule 126 (empty -> .)
    PUNTO           reduce using rule 126 (empty -> .)
    BRING           reduce using rule 126 (empty -> .)
    WHILE           reduce using rule 126 (empty -> .)
    VOID            reduce using rule 126 (empty -> .)
    FLOAT           reduce using rule 126 (empty -> .)
    INT             reduce using rule 126 (empty -> .)
    BOOL            reduce using rule 126 (empty -> .)
    $end            reduce using rule 126 (empty -> .)
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    ELSE            reduce using rule 126 (empty -> .)
    NOT             reduce using rule 126 (empty -> .)
    TRUE            reduce using rule 126 (empty -> .)
    FALSE           reduce using rule 126 (empty -> .)

  ! PUNTOCOMA       [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! NUMERO          [ reduce using rule 126 (empty -> .) ]
  ! ENTERO          [ reduce using rule 126 (empty -> .) ]

    expression_list                shift and go to state 242
    expression                     shift and go to state 51
    empty                          shift and go to state 41

state 213

    (72) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list . PUNTOCOMA

    PUNTOCOMA       shift and go to state 244


state 214

    (71) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list . PUNTOCOMA

    PUNTOCOMA       shift and go to state 245


state 215

    (70) variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list . PUNTOCOMA

    PUNTOCOMA       shift and go to state 246


state 216

    (69) variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list . PUNTOCOMA

    PUNTOCOMA       shift and go to state 247


state 217

    (59) variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list . PUNTOCOMA

    PUNTOCOMA       shift and go to state 248


state 218

    (25) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements
    (38) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 126 (empty -> .)
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    ELSE            reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 249
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 219

    (35) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements . LLAVE_CIERRE
    (36) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 250


state 220

    (33) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements . LLAVE_CIERRE
    (34) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 251


state 221

    (31) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE
    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 252


state 222

    (29) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE
    (30) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 253


state 223

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA . expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (104) expression -> . ID
    (105) expression -> . NUMERO
    (106) expression -> . ENTERO
    (107) expression -> . expression SUMA expression
    (108) expression -> . expression RESTA expression
    (109) expression -> . expression MULTIPLICACION expression
    (110) expression -> . expression DIVISION expression
    (111) expression -> . expression MODULO expression
    (112) expression -> . expression MASIGUAL expression
    (113) expression -> . expression MENOSIGUAL expression
    (114) expression -> . expression DIVIGUAL expression
    (115) expression -> . expression MULTIGUAL condition
    (116) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 31
    NUMERO          shift and go to state 39
    ENTERO          shift and go to state 40
    PARENTESIS_APERTURA shift and go to state 60

    expression                     shift and go to state 254

state 224

    (46) call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 255


state 225

    (85) while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 256
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 226

    (88) while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 257


state 227

    (87) while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 258


state 228

    (86) while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 259


state 229

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . LLAVE_APERTURA statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

    LLAVE_APERTURA  shift and go to state 261
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

    datatype                       shift and go to state 260

state 230

    (24) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 262


state 231

    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 263
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 232

    (23) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 264


state 233

    (22) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 265


state 234

    (118) parameters -> datatype ID COMA parameters .

    PARENTESIS_CIERRE reduce using rule 118 (parameters -> datatype ID COMA parameters .)
    DOSPUNTOS       reduce using rule 118 (parameters -> datatype ID COMA parameters .)


state 235

    (20) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 266


state 236

    (16) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 267


state 237

    (44) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE . PUNTOCOMA
    (53) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 268
    FUN             reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ID              reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    CORCHETE_APERTURA reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ASIGNAR         reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    IF              reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    FOR             reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    PUNTO           reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    BRING           reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    WHILE           reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    VOID            reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    FLOAT           reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    INT             reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    BOOL            reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    $end            reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    LLAVE_CIERRE    reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ELSE            reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    PARENTESIS_CIERRE reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    AND             reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    OR              reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MENORQUE        reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MAYORQUE        reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    IGUAL           reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    DIFERENTE       reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MENORIGUAL      reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MAYORIGUAL      reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    LLAVE_APERTURA  reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    SUMA            reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    RESTA           reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MULTIPLICACION  reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    DIVISION        reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MODULO          reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MASIGUAL        reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MENOSIGUAL      reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    DIVIGUAL        reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    MULTIGUAL       reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    COMA            reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    CORCHETE_CIERRE reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    NOT             reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    NUMERO          reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    ENTERO          reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    TRUE            reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)
    FALSE           reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .)

  ! PUNTOCOMA       [ reduce using rule 53 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE .) ]


state 238

    (50) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .

    FUN             reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ID              reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    IF              reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    FOR             reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    BRING           reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    WHILE           reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    VOID            reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    INT             reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    BOOL            reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    $end            reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ELSE            reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    AND             reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    OR              reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MENORQUE        reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MAYORQUE        reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    IGUAL           reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    DIFERENTE       reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MENORIGUAL      reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    SUMA            reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    RESTA           reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    DIVISION        reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MODULO          reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MASIGUAL        reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    DIVIGUAL        reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    MULTIGUAL       reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    COMA            reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    NOT             reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    TRUE            reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)
    FALSE           reduce using rule 50 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA .)


state 239

    (48) call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    AND             reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    OR              reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORQUE        reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORQUE        reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IGUAL           reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIFERENTE       reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORIGUAL      reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    SUMA            reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    RESTA           reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVISION        reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MODULO          reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MASIGUAL        reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVIGUAL        reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIGUAL       reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    COMA            reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NOT             reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NUMERO          reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ENTERO          reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    TRUE            reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FALSE           reduce using rule 48 (call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 240

    (51) call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    AND             reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    OR              reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORQUE        reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORQUE        reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IGUAL           reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIFERENTE       reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORIGUAL      reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    SUMA            reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    RESTA           reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVISION        reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MODULO          reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MASIGUAL        reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVIGUAL        reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIGUAL       reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    COMA            reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NOT             reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NUMERO          reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ENTERO          reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    TRUE            reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FALSE           reduce using rule 51 (call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 241

    (27) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .
    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements LLAVE_CIERRE

  ! shift/reduce conflict for ELSE resolved as shift
    FUN             reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            shift and go to state 269

  ! ELSE            [ reduce using rule 27 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .) ]


state 242

    (57) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list . PUNTOCOMA
    (68) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .

    PUNTOCOMA       shift and go to state 270
    FUN             reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    ID              reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    CORCHETE_APERTURA reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    ASIGNAR         reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    IF              reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    PARENTESIS_APERTURA reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    FOR             reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    PUNTO           reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    BRING           reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    WHILE           reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    VOID            reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    FLOAT           reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    INT             reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    BOOL            reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    $end            reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    LLAVE_CIERRE    reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    ELSE            reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    NOT             reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    NUMERO          reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    ENTERO          reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    TRUE            reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)
    FALSE           reduce using rule 68 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list .)


state 243

    (74) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .

    FUN             reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    ID              reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    ASIGNAR         reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    IF              reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    FOR             reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    PUNTO           reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    BRING           reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    WHILE           reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    VOID            reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    FLOAT           reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    INT             reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    BOOL            reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    $end            reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    ELSE            reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    NOT             reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    NUMERO          reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    ENTERO          reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    TRUE            reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)
    FALSE           reduce using rule 74 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA .)


state 244

    (72) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .

    FUN             reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    ID              reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    IF              reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    FOR             reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    BRING           reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    WHILE           reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    VOID            reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    INT             reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    BOOL            reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    $end            reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    ELSE            reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    NOT             reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    TRUE            reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)
    FALSE           reduce using rule 72 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA .)


state 245

    (71) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .

    FUN             reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    ID              reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    IF              reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    FOR             reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    BRING           reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    WHILE           reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    VOID            reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    INT             reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    BOOL            reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    $end            reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    ELSE            reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    NOT             reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    TRUE            reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)
    FALSE           reduce using rule 71 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA .)


state 246

    (70) variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .

    FUN             reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    ID              reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    IF              reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    FOR             reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    BRING           reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    WHILE           reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    VOID            reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    INT             reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    BOOL            reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    $end            reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    ELSE            reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    NOT             reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    TRUE            reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)
    FALSE           reduce using rule 70 (variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA .)


state 247

    (69) variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .

    FUN             reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ID              reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    IF              reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FOR             reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    BRING           reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    WHILE           reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    VOID            reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    INT             reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    BOOL            reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    $end            reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ELSE            reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    NOT             reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    TRUE            reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FALSE           reduce using rule 69 (variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)


state 248

    (59) variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .

    FUN             reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ID              reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    IF              reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FOR             reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    BRING           reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    WHILE           reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    VOID            reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    INT             reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    BOOL            reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    $end            reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ELSE            reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    NOT             reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    TRUE            reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FALSE           reduce using rule 59 (variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)


state 249

    (25) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE
    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .
    (38) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements

  ! shift/reduce conflict for LLAVE_CIERRE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    LLAVE_CIERRE    shift and go to state 271
    FUN             reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    ID              reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    CORCHETE_APERTURA reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    ASIGNAR         reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    IF              reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    PARENTESIS_APERTURA reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    FOR             reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    PUNTO           reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    BRING           reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    WHILE           reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    VOID            reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    FLOAT           reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    INT             reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    BOOL            reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    $end            reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .)
    ELSE            shift and go to state 272

  ! LLAVE_CIERRE    [ reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .) ]
  ! ELSE            [ reduce using rule 37 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements .) ]


state 250

    (35) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .
    (36) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements LLAVE_CIERRE

  ! shift/reduce conflict for ELSE resolved as shift
    FUN             reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    ID              reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    IF              reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    FOR             reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    BRING           reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    WHILE           reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    VOID            reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    INT             reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    BOOL            reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    $end            reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    ELSE            shift and go to state 273

  ! ELSE            [ reduce using rule 35 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .) ]


state 251

    (33) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .
    (34) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements LLAVE_CIERRE

  ! shift/reduce conflict for ELSE resolved as shift
    FUN             reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            shift and go to state 274

  ! ELSE            [ reduce using rule 33 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .) ]


state 252

    (31) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .
    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements LLAVE_CIERRE

  ! shift/reduce conflict for ELSE resolved as shift
    FUN             reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            shift and go to state 275

  ! ELSE            [ reduce using rule 31 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .) ]


state 253

    (29) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .
    (30) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements LLAVE_CIERRE

  ! shift/reduce conflict for ELSE resolved as shift
    FUN             reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            shift and go to state 276

  ! ELSE            [ reduce using rule 29 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .) ]


state 254

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (107) expression -> expression . SUMA expression
    (108) expression -> expression . RESTA expression
    (109) expression -> expression . MULTIPLICACION expression
    (110) expression -> expression . DIVISION expression
    (111) expression -> expression . MODULO expression
    (112) expression -> expression . MASIGUAL expression
    (113) expression -> expression . MENOSIGUAL expression
    (114) expression -> expression . DIVIGUAL expression
    (115) expression -> expression . MULTIGUAL condition

    PARENTESIS_CIERRE shift and go to state 277
    SUMA            shift and go to state 89
    RESTA           shift and go to state 90
    MULTIPLICACION  shift and go to state 91
    DIVISION        shift and go to state 92
    MODULO          shift and go to state 93
    MASIGUAL        shift and go to state 94
    MENOSIGUAL      shift and go to state 95
    DIVIGUAL        shift and go to state 96
    MULTIGUAL       shift and go to state 97


state 255

    (46) call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    AND             reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    OR              reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORQUE        reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORQUE        reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IGUAL           reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIFERENTE       reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORIGUAL      reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    SUMA            reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    RESTA           reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVISION        reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MODULO          reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MASIGUAL        reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVIGUAL        reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIGUAL       reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    COMA            reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NOT             reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NUMERO          reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ENTERO          reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    TRUE            reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FALSE           reduce using rule 46 (call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 256

    (85) while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 278


state 257

    (88) while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .

    FUN             reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    ID              reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    IF              reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    FOR             reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    BRING           reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    WHILE           reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    VOID            reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    INT             reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    BOOL            reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    $end            reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)
    ELSE            reduce using rule 88 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE .)


state 258

    (87) while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 87 (while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE .)


state 259

    (86) while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 86 (while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 260

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_APERTURA  shift and go to state 279
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    datatype                       shift and go to state 16
    statements                     shift and go to state 280
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12

state 261

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 281
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 262

    (24) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    datatype                       shift and go to state 16
    statements                     shift and go to state 282
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12

state 263

    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 283


state 264

    (23) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    datatype                       shift and go to state 16
    statements                     shift and go to state 284
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12

state 265

    (22) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    datatype                       shift and go to state 16
    statements                     shift and go to state 285
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12

state 266

    (20) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    datatype                       shift and go to state 16
    statements                     shift and go to state 286
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12

state 267

    (16) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    datatype                       shift and go to state 16
    statements                     shift and go to state 287
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12

state 268

    (44) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ASIGNAR         reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTO           reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    WHILE           reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ELSE            reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PARENTESIS_CIERRE reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    AND             reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    OR              reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORQUE        reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORQUE        reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IGUAL           reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIFERENTE       reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENORIGUAL      reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MAYORIGUAL      reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_APERTURA  reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    SUMA            reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    RESTA           reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIPLICACION  reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVISION        reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MODULO          reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MASIGUAL        reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MENOSIGUAL      reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    DIVIGUAL        reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    MULTIGUAL       reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    COMA            reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    CORCHETE_CIERRE reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NOT             reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    NUMERO          reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ENTERO          reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    TRUE            reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FALSE           reduce using rule 44 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 269

    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 288


state 270

    (57) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .

    FUN             reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ID              reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    CORCHETE_APERTURA reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ASIGNAR         reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    IF              reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    PARENTESIS_APERTURA reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FOR             reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    PUNTO           reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    BRING           reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    WHILE           reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    VOID            reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FLOAT           reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    INT             reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    BOOL            reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    $end            reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ELSE            reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    NOT             reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    NUMERO          reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    ENTERO          reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    TRUE            reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)
    FALSE           reduce using rule 57 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA .)


state 271

    (25) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .
    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . ELSE statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements

  ! shift/reduce conflict for ELSE resolved as shift
    FUN             reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            shift and go to state 290
    LLAVE_APERTURA  shift and go to state 289

  ! ELSE            [ reduce using rule 25 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .) ]


state 272

    (38) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 291


state 273

    (36) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 292


state 274

    (34) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 293


state 275

    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 294


state 276

    (30) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 295


state 277

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 296


state 278

    (85) while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 85 (while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 279

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (18) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 126 (empty -> .)
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    ELSE            reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    datatype                       shift and go to state 16
    statements                     shift and go to state 297
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12

state 280

    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 298


state 281

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 299


state 282

    (24) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 300


state 283

    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 284

    (23) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 301


state 285

    (22) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 302


state 286

    (20) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 303


state 287

    (16) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 304


state 288

    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 305
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 289

    (39) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 306
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 290

    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE . statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_APERTURA  shift and go to state 307
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 308
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 291

    (38) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 309
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 292

    (36) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 310
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 293

    (34) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 311
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 294

    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 312
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 295

    (30) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 313
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 296

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    variable_declaration           shift and go to state 5
    statements                     shift and go to state 314
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 297

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE
    (18) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .

  ! shift/reduce conflict for LLAVE_CIERRE resolved as shift
    LLAVE_CIERRE    shift and go to state 315
    FUN             reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    ID              reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    CORCHETE_APERTURA reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    ASIGNAR         reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    IF              reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    PARENTESIS_APERTURA reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    FOR             reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    PUNTO           reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    BRING           reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    WHILE           reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    VOID            reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    FLOAT           reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    INT             reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    BOOL            reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    $end            reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    ELSE            reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)

  ! LLAVE_CIERRE    [ reduce using rule 18 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .) ]


state 298

    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .

    FUN             reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    ID              reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    IF              reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    FOR             reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    BRING           reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    WHILE           reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    VOID            reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    INT             reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    BOOL            reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    $end            reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    ELSE            reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)


state 299

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)


state 300

    (24) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 24 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 301

    (23) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 23 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 302

    (22) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 22 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 303

    (20) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 20 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 304

    (16) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 16 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 305

    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 316


state 306

    (39) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 317


state 307

    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (12) statement -> . leer_arreglo
    (13) statement -> . while_statement
    (126) empty -> .
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (18) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (20) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (23) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (24) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (54) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (55) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (56) variable_declaration -> . datatype ID PUNTOCOMA
    (57) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (58) variable_declaration -> . ID PUNTOCOMA
    (59) variable_declaration -> . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (60) variable_declaration -> . datatype ASIGNAR expression PUNTOCOMA
    (61) variable_declaration -> . datatype ASIGNAR condition PUNTOCOMA
    (62) variable_declaration -> . datatype PUNTOCOMA
    (63) variable_declaration -> . datatype ID expression PUNTOCOMA
    (64) variable_declaration -> . datatype ID condition PUNTOCOMA
    (65) variable_declaration -> . datatype ID ASIGNAR expression
    (66) variable_declaration -> . datatype ID ASIGNAR condition
    (67) variable_declaration -> . datatype ID
    (68) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list
    (69) variable_declaration -> . datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA
    (70) variable_declaration -> . datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA
    (71) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA
    (72) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA
    (73) variable_declaration -> . datatype ID ASIGNAR PUNTOCOMA
    (74) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA
    (75) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (76) assignment -> . ID ASIGNAR condition PUNTOCOMA
    (77) assignment -> . ASIGNAR expression PUNTOCOMA
    (78) assignment -> . ID expression PUNTOCOMA
    (79) assignment -> . ID ASIGNAR PUNTOCOMA
    (80) assignment -> . ID ASIGNAR expression
    (25) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (27) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (28) if_statement -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (29) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (30) if_statement -> . IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (31) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (32) if_statement -> . IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (33) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (34) if_statement -> . IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (35) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (36) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements
    (38) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (39) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (40) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE
    (41) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements
    (42) for_statement -> . FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (43) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (44) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (45) call_fun -> . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (46) call_fun -> . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (47) call_fun -> . ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (48) call_fun -> . ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA
    (49) call_fun -> . ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (50) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA
    (51) call_fun -> . ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (52) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (53) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE
    (14) import -> . BRING ID PUNTOCOMA
    (84) leer_arreglo -> . ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA
    (85) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (86) while_statement -> . WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (87) while_statement -> . WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE
    (88) while_statement -> . WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE
    (120) datatype -> . VOID
    (121) datatype -> . FLOAT
    (122) datatype -> . INT
    (123) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CORCHETE_APERTURA resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PARENTESIS_APERTURA resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 126 (empty -> .)
    LLAVE_CIERRE    reduce using rule 126 (empty -> .)
    ELSE            reduce using rule 126 (empty -> .)
    FUN             shift and go to state 13
    ID              shift and go to state 14
    CORCHETE_APERTURA shift and go to state 18
    ASIGNAR         shift and go to state 17
    IF              shift and go to state 19
    PARENTESIS_APERTURA shift and go to state 15
    FOR             shift and go to state 20
    PUNTO           shift and go to state 21
    BRING           shift and go to state 22
    WHILE           shift and go to state 23
    VOID            shift and go to state 24
    FLOAT           shift and go to state 25
    INT             shift and go to state 26
    BOOL            shift and go to state 27

  ! FUN             [ reduce using rule 126 (empty -> .) ]
  ! ID              [ reduce using rule 126 (empty -> .) ]
  ! CORCHETE_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! ASIGNAR         [ reduce using rule 126 (empty -> .) ]
  ! IF              [ reduce using rule 126 (empty -> .) ]
  ! PARENTESIS_APERTURA [ reduce using rule 126 (empty -> .) ]
  ! FOR             [ reduce using rule 126 (empty -> .) ]
  ! PUNTO           [ reduce using rule 126 (empty -> .) ]
  ! BRING           [ reduce using rule 126 (empty -> .) ]
  ! WHILE           [ reduce using rule 126 (empty -> .) ]
  ! VOID            [ reduce using rule 126 (empty -> .) ]
  ! FLOAT           [ reduce using rule 126 (empty -> .) ]
  ! INT             [ reduce using rule 126 (empty -> .) ]
  ! BOOL            [ reduce using rule 126 (empty -> .) ]

    statements                     shift and go to state 318
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    leer_arreglo                   shift and go to state 11
    while_statement                shift and go to state 12
    datatype                       shift and go to state 16

state 308

    (40) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 319


state 309

    (38) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 320


state 310

    (36) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 321


state 311

    (34) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 322


state 312

    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 323


state 313

    (30) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 324


state 314

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 325


state 315

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 316

    (28) if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 28 (if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 317

    (39) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 39 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 318

    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements . LLAVE_CIERRE
    (41) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .

  ! shift/reduce conflict for LLAVE_CIERRE resolved as shift
    LLAVE_CIERRE    shift and go to state 326
    FUN             reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    ID              reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    CORCHETE_APERTURA reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    ASIGNAR         reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    IF              reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    PARENTESIS_APERTURA reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    FOR             reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    PUNTO           reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    BRING           reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    WHILE           reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    VOID            reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    FLOAT           reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    INT             reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    BOOL            reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    $end            reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)
    ELSE            reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .)

  ! LLAVE_CIERRE    [ reduce using rule 41 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements .) ]


state 319

    (40) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .

    FUN             reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    ID              reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    IF              reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    FOR             reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    BRING           reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    WHILE           reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    VOID            reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    INT             reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    BOOL            reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    $end            reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)
    ELSE            reduce using rule 40 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE .)


state 320

    (38) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 38 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 321

    (36) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 36 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 322

    (34) if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 34 (if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 323

    (32) if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 32 (if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 324

    (30) if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 30 (if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 325

    (42) for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 42 (for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 326

    (26) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    CORCHETE_APERTURA reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ASIGNAR         reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PARENTESIS_APERTURA reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    PUNTO           reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    WHILE           reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            reduce using rule 26 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 0 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 0 resolved as shift
WARNING: shift/reduce conflict for BRING in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for VOID in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 2 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 2 resolved as shift
WARNING: shift/reduce conflict for BRING in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for VOID in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 2 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 54 resolved as shift
WARNING: shift/reduce conflict for ID in state 54 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 54 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 54 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT in state 54 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 54 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 54 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 54 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_CIERRE in state 62 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 64 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 64 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_CIERRE in state 79 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 81 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 81 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 98 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 98 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 98 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 116 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 116 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 145 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_CIERRE in state 150 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 155 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 155 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 155 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 155 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 155 resolved as shift
WARNING: shift/reduce conflict for MASIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MENOSIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for DIVIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for MULTIGUAL in state 155 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 156 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 156 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 156 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 156 resolved as shift
WARNING: shift/reduce conflict for MASIGUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for MENOSIGUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVIGUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for MULTIGUAL in state 156 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 157 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 157 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 157 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 157 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 157 resolved as shift
WARNING: shift/reduce conflict for MASIGUAL in state 157 resolved as shift
WARNING: shift/reduce conflict for MENOSIGUAL in state 157 resolved as shift
WARNING: shift/reduce conflict for DIVIGUAL in state 157 resolved as shift
WARNING: shift/reduce conflict for MULTIGUAL in state 157 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 158 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 158 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 158 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 158 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 158 resolved as shift
WARNING: shift/reduce conflict for MASIGUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for MENOSIGUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for DIVIGUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for MULTIGUAL in state 158 resolved as shift
WARNING: shift/reduce conflict for FUN in state 167 resolved as shift
WARNING: shift/reduce conflict for ID in state 167 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 167 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 167 resolved as shift
WARNING: shift/reduce conflict for IF in state 167 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 167 resolved as shift
WARNING: shift/reduce conflict for FOR in state 167 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 167 resolved as shift
WARNING: shift/reduce conflict for BRING in state 167 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 167 resolved as shift
WARNING: shift/reduce conflict for VOID in state 167 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 167 resolved as shift
WARNING: shift/reduce conflict for INT in state 167 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 167 resolved as shift
WARNING: shift/reduce conflict for AND in state 168 resolved as shift
WARNING: shift/reduce conflict for OR in state 168 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 168 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 168 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 168 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for AND in state 169 resolved as shift
WARNING: shift/reduce conflict for OR in state 169 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 169 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 169 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 169 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 169 resolved as shift
WARNING: shift/reduce conflict for AND in state 170 resolved as shift
WARNING: shift/reduce conflict for OR in state 170 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 170 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 170 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 170 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 170 resolved as shift
WARNING: shift/reduce conflict for AND in state 171 resolved as shift
WARNING: shift/reduce conflict for OR in state 171 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 171 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 171 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 171 resolved as shift
WARNING: shift/reduce conflict for AND in state 172 resolved as shift
WARNING: shift/reduce conflict for OR in state 172 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 172 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 172 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 172 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 172 resolved as shift
WARNING: shift/reduce conflict for AND in state 173 resolved as shift
WARNING: shift/reduce conflict for OR in state 173 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 173 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 173 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 173 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for AND in state 174 resolved as shift
WARNING: shift/reduce conflict for OR in state 174 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 174 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 174 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 174 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 174 resolved as shift
WARNING: shift/reduce conflict for AND in state 175 resolved as shift
WARNING: shift/reduce conflict for OR in state 175 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 175 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 175 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 175 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 175 resolved as shift
WARNING: shift/reduce conflict for FUN in state 189 resolved as shift
WARNING: shift/reduce conflict for ID in state 189 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 189 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 189 resolved as shift
WARNING: shift/reduce conflict for IF in state 189 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 189 resolved as shift
WARNING: shift/reduce conflict for FOR in state 189 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 189 resolved as shift
WARNING: shift/reduce conflict for BRING in state 189 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 189 resolved as shift
WARNING: shift/reduce conflict for VOID in state 189 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 189 resolved as shift
WARNING: shift/reduce conflict for INT in state 189 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 189 resolved as shift
WARNING: shift/reduce conflict for FUN in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 190 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 190 resolved as shift
WARNING: shift/reduce conflict for IF in state 190 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 190 resolved as shift
WARNING: shift/reduce conflict for FOR in state 190 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 190 resolved as shift
WARNING: shift/reduce conflict for BRING in state 190 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 190 resolved as shift
WARNING: shift/reduce conflict for VOID in state 190 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 190 resolved as shift
WARNING: shift/reduce conflict for INT in state 190 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 190 resolved as shift
WARNING: shift/reduce conflict for FUN in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 191 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 191 resolved as shift
WARNING: shift/reduce conflict for IF in state 191 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 191 resolved as shift
WARNING: shift/reduce conflict for FOR in state 191 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 191 resolved as shift
WARNING: shift/reduce conflict for BRING in state 191 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 191 resolved as shift
WARNING: shift/reduce conflict for VOID in state 191 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 191 resolved as shift
WARNING: shift/reduce conflict for INT in state 191 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 191 resolved as shift
WARNING: shift/reduce conflict for FUN in state 192 resolved as shift
WARNING: shift/reduce conflict for ID in state 192 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 192 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 192 resolved as shift
WARNING: shift/reduce conflict for IF in state 192 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 192 resolved as shift
WARNING: shift/reduce conflict for FOR in state 192 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 192 resolved as shift
WARNING: shift/reduce conflict for BRING in state 192 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 192 resolved as shift
WARNING: shift/reduce conflict for VOID in state 192 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 192 resolved as shift
WARNING: shift/reduce conflict for INT in state 192 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 192 resolved as shift
WARNING: shift/reduce conflict for FUN in state 195 resolved as shift
WARNING: shift/reduce conflict for ID in state 195 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 195 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 195 resolved as shift
WARNING: shift/reduce conflict for IF in state 195 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 195 resolved as shift
WARNING: shift/reduce conflict for FOR in state 195 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 195 resolved as shift
WARNING: shift/reduce conflict for BRING in state 195 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 195 resolved as shift
WARNING: shift/reduce conflict for VOID in state 195 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 195 resolved as shift
WARNING: shift/reduce conflict for INT in state 195 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 195 resolved as shift
WARNING: shift/reduce conflict for FUN in state 196 resolved as shift
WARNING: shift/reduce conflict for ID in state 196 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 196 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 196 resolved as shift
WARNING: shift/reduce conflict for IF in state 196 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 196 resolved as shift
WARNING: shift/reduce conflict for FOR in state 196 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 196 resolved as shift
WARNING: shift/reduce conflict for BRING in state 196 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 196 resolved as shift
WARNING: shift/reduce conflict for VOID in state 196 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 196 resolved as shift
WARNING: shift/reduce conflict for INT in state 196 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 196 resolved as shift
WARNING: shift/reduce conflict for FUN in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 197 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 197 resolved as shift
WARNING: shift/reduce conflict for IF in state 197 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 197 resolved as shift
WARNING: shift/reduce conflict for FOR in state 197 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 197 resolved as shift
WARNING: shift/reduce conflict for BRING in state 197 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 197 resolved as shift
WARNING: shift/reduce conflict for VOID in state 197 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 197 resolved as shift
WARNING: shift/reduce conflict for INT in state 197 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 197 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 212 resolved as shift
WARNING: shift/reduce conflict for ID in state 212 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 212 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 212 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 212 resolved as shift
WARNING: shift/reduce conflict for FUN in state 218 resolved as shift
WARNING: shift/reduce conflict for ID in state 218 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 218 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 218 resolved as shift
WARNING: shift/reduce conflict for IF in state 218 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 218 resolved as shift
WARNING: shift/reduce conflict for FOR in state 218 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 218 resolved as shift
WARNING: shift/reduce conflict for BRING in state 218 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 218 resolved as shift
WARNING: shift/reduce conflict for VOID in state 218 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 218 resolved as shift
WARNING: shift/reduce conflict for INT in state 218 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 218 resolved as shift
WARNING: shift/reduce conflict for FUN in state 225 resolved as shift
WARNING: shift/reduce conflict for ID in state 225 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 225 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 225 resolved as shift
WARNING: shift/reduce conflict for IF in state 225 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 225 resolved as shift
WARNING: shift/reduce conflict for FOR in state 225 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 225 resolved as shift
WARNING: shift/reduce conflict for BRING in state 225 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 225 resolved as shift
WARNING: shift/reduce conflict for VOID in state 225 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 225 resolved as shift
WARNING: shift/reduce conflict for INT in state 225 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 225 resolved as shift
WARNING: shift/reduce conflict for FUN in state 231 resolved as shift
WARNING: shift/reduce conflict for ID in state 231 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 231 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 231 resolved as shift
WARNING: shift/reduce conflict for IF in state 231 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 231 resolved as shift
WARNING: shift/reduce conflict for FOR in state 231 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 231 resolved as shift
WARNING: shift/reduce conflict for BRING in state 231 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 231 resolved as shift
WARNING: shift/reduce conflict for VOID in state 231 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 231 resolved as shift
WARNING: shift/reduce conflict for INT in state 231 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 231 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 237 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 241 resolved as shift
WARNING: shift/reduce conflict for LLAVE_CIERRE in state 249 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 249 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 250 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 251 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 252 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 253 resolved as shift
WARNING: shift/reduce conflict for FUN in state 260 resolved as shift
WARNING: shift/reduce conflict for ID in state 260 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 260 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 260 resolved as shift
WARNING: shift/reduce conflict for IF in state 260 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 260 resolved as shift
WARNING: shift/reduce conflict for FOR in state 260 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 260 resolved as shift
WARNING: shift/reduce conflict for BRING in state 260 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 260 resolved as shift
WARNING: shift/reduce conflict for VOID in state 260 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 260 resolved as shift
WARNING: shift/reduce conflict for INT in state 260 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 260 resolved as shift
WARNING: shift/reduce conflict for FUN in state 261 resolved as shift
WARNING: shift/reduce conflict for ID in state 261 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 261 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 261 resolved as shift
WARNING: shift/reduce conflict for IF in state 261 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 261 resolved as shift
WARNING: shift/reduce conflict for FOR in state 261 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 261 resolved as shift
WARNING: shift/reduce conflict for BRING in state 261 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 261 resolved as shift
WARNING: shift/reduce conflict for VOID in state 261 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 261 resolved as shift
WARNING: shift/reduce conflict for INT in state 261 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 261 resolved as shift
WARNING: shift/reduce conflict for FUN in state 262 resolved as shift
WARNING: shift/reduce conflict for ID in state 262 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 262 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 262 resolved as shift
WARNING: shift/reduce conflict for IF in state 262 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 262 resolved as shift
WARNING: shift/reduce conflict for FOR in state 262 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 262 resolved as shift
WARNING: shift/reduce conflict for BRING in state 262 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 262 resolved as shift
WARNING: shift/reduce conflict for VOID in state 262 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 262 resolved as shift
WARNING: shift/reduce conflict for INT in state 262 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 262 resolved as shift
WARNING: shift/reduce conflict for FUN in state 264 resolved as shift
WARNING: shift/reduce conflict for ID in state 264 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 264 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 264 resolved as shift
WARNING: shift/reduce conflict for IF in state 264 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 264 resolved as shift
WARNING: shift/reduce conflict for FOR in state 264 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 264 resolved as shift
WARNING: shift/reduce conflict for BRING in state 264 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 264 resolved as shift
WARNING: shift/reduce conflict for VOID in state 264 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 264 resolved as shift
WARNING: shift/reduce conflict for INT in state 264 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 264 resolved as shift
WARNING: shift/reduce conflict for FUN in state 265 resolved as shift
WARNING: shift/reduce conflict for ID in state 265 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 265 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 265 resolved as shift
WARNING: shift/reduce conflict for IF in state 265 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 265 resolved as shift
WARNING: shift/reduce conflict for FOR in state 265 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 265 resolved as shift
WARNING: shift/reduce conflict for BRING in state 265 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 265 resolved as shift
WARNING: shift/reduce conflict for VOID in state 265 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 265 resolved as shift
WARNING: shift/reduce conflict for INT in state 265 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 265 resolved as shift
WARNING: shift/reduce conflict for FUN in state 266 resolved as shift
WARNING: shift/reduce conflict for ID in state 266 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 266 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 266 resolved as shift
WARNING: shift/reduce conflict for IF in state 266 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 266 resolved as shift
WARNING: shift/reduce conflict for FOR in state 266 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 266 resolved as shift
WARNING: shift/reduce conflict for BRING in state 266 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 266 resolved as shift
WARNING: shift/reduce conflict for VOID in state 266 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 266 resolved as shift
WARNING: shift/reduce conflict for INT in state 266 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 266 resolved as shift
WARNING: shift/reduce conflict for FUN in state 267 resolved as shift
WARNING: shift/reduce conflict for ID in state 267 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 267 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 267 resolved as shift
WARNING: shift/reduce conflict for IF in state 267 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 267 resolved as shift
WARNING: shift/reduce conflict for FOR in state 267 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 267 resolved as shift
WARNING: shift/reduce conflict for BRING in state 267 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 267 resolved as shift
WARNING: shift/reduce conflict for VOID in state 267 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 267 resolved as shift
WARNING: shift/reduce conflict for INT in state 267 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 267 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 271 resolved as shift
WARNING: shift/reduce conflict for FUN in state 279 resolved as shift
WARNING: shift/reduce conflict for ID in state 279 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 279 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 279 resolved as shift
WARNING: shift/reduce conflict for IF in state 279 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 279 resolved as shift
WARNING: shift/reduce conflict for FOR in state 279 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 279 resolved as shift
WARNING: shift/reduce conflict for BRING in state 279 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 279 resolved as shift
WARNING: shift/reduce conflict for VOID in state 279 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 279 resolved as shift
WARNING: shift/reduce conflict for INT in state 279 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 279 resolved as shift
WARNING: shift/reduce conflict for FUN in state 288 resolved as shift
WARNING: shift/reduce conflict for ID in state 288 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 288 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 288 resolved as shift
WARNING: shift/reduce conflict for IF in state 288 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 288 resolved as shift
WARNING: shift/reduce conflict for FOR in state 288 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 288 resolved as shift
WARNING: shift/reduce conflict for BRING in state 288 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 288 resolved as shift
WARNING: shift/reduce conflict for VOID in state 288 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 288 resolved as shift
WARNING: shift/reduce conflict for INT in state 288 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 288 resolved as shift
WARNING: shift/reduce conflict for FUN in state 289 resolved as shift
WARNING: shift/reduce conflict for ID in state 289 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 289 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 289 resolved as shift
WARNING: shift/reduce conflict for IF in state 289 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 289 resolved as shift
WARNING: shift/reduce conflict for FOR in state 289 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 289 resolved as shift
WARNING: shift/reduce conflict for BRING in state 289 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 289 resolved as shift
WARNING: shift/reduce conflict for VOID in state 289 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 289 resolved as shift
WARNING: shift/reduce conflict for INT in state 289 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 289 resolved as shift
WARNING: shift/reduce conflict for FUN in state 290 resolved as shift
WARNING: shift/reduce conflict for ID in state 290 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 290 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 290 resolved as shift
WARNING: shift/reduce conflict for IF in state 290 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 290 resolved as shift
WARNING: shift/reduce conflict for FOR in state 290 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 290 resolved as shift
WARNING: shift/reduce conflict for BRING in state 290 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 290 resolved as shift
WARNING: shift/reduce conflict for VOID in state 290 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 290 resolved as shift
WARNING: shift/reduce conflict for INT in state 290 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 290 resolved as shift
WARNING: shift/reduce conflict for FUN in state 291 resolved as shift
WARNING: shift/reduce conflict for ID in state 291 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 291 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 291 resolved as shift
WARNING: shift/reduce conflict for IF in state 291 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 291 resolved as shift
WARNING: shift/reduce conflict for FOR in state 291 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 291 resolved as shift
WARNING: shift/reduce conflict for BRING in state 291 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 291 resolved as shift
WARNING: shift/reduce conflict for VOID in state 291 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 291 resolved as shift
WARNING: shift/reduce conflict for INT in state 291 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 291 resolved as shift
WARNING: shift/reduce conflict for FUN in state 292 resolved as shift
WARNING: shift/reduce conflict for ID in state 292 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 292 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 292 resolved as shift
WARNING: shift/reduce conflict for IF in state 292 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 292 resolved as shift
WARNING: shift/reduce conflict for FOR in state 292 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 292 resolved as shift
WARNING: shift/reduce conflict for BRING in state 292 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 292 resolved as shift
WARNING: shift/reduce conflict for VOID in state 292 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 292 resolved as shift
WARNING: shift/reduce conflict for INT in state 292 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 292 resolved as shift
WARNING: shift/reduce conflict for FUN in state 293 resolved as shift
WARNING: shift/reduce conflict for ID in state 293 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 293 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 293 resolved as shift
WARNING: shift/reduce conflict for IF in state 293 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 293 resolved as shift
WARNING: shift/reduce conflict for FOR in state 293 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 293 resolved as shift
WARNING: shift/reduce conflict for BRING in state 293 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 293 resolved as shift
WARNING: shift/reduce conflict for VOID in state 293 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 293 resolved as shift
WARNING: shift/reduce conflict for INT in state 293 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 293 resolved as shift
WARNING: shift/reduce conflict for FUN in state 294 resolved as shift
WARNING: shift/reduce conflict for ID in state 294 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 294 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 294 resolved as shift
WARNING: shift/reduce conflict for IF in state 294 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 294 resolved as shift
WARNING: shift/reduce conflict for FOR in state 294 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 294 resolved as shift
WARNING: shift/reduce conflict for BRING in state 294 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 294 resolved as shift
WARNING: shift/reduce conflict for VOID in state 294 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 294 resolved as shift
WARNING: shift/reduce conflict for INT in state 294 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 294 resolved as shift
WARNING: shift/reduce conflict for FUN in state 295 resolved as shift
WARNING: shift/reduce conflict for ID in state 295 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 295 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 295 resolved as shift
WARNING: shift/reduce conflict for IF in state 295 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 295 resolved as shift
WARNING: shift/reduce conflict for FOR in state 295 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 295 resolved as shift
WARNING: shift/reduce conflict for BRING in state 295 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 295 resolved as shift
WARNING: shift/reduce conflict for VOID in state 295 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 295 resolved as shift
WARNING: shift/reduce conflict for INT in state 295 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 295 resolved as shift
WARNING: shift/reduce conflict for FUN in state 296 resolved as shift
WARNING: shift/reduce conflict for ID in state 296 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 296 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 296 resolved as shift
WARNING: shift/reduce conflict for IF in state 296 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 296 resolved as shift
WARNING: shift/reduce conflict for FOR in state 296 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 296 resolved as shift
WARNING: shift/reduce conflict for BRING in state 296 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 296 resolved as shift
WARNING: shift/reduce conflict for VOID in state 296 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 296 resolved as shift
WARNING: shift/reduce conflict for INT in state 296 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 296 resolved as shift
WARNING: shift/reduce conflict for LLAVE_CIERRE in state 297 resolved as shift
WARNING: shift/reduce conflict for FUN in state 307 resolved as shift
WARNING: shift/reduce conflict for ID in state 307 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_APERTURA in state 307 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 307 resolved as shift
WARNING: shift/reduce conflict for IF in state 307 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_APERTURA in state 307 resolved as shift
WARNING: shift/reduce conflict for FOR in state 307 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 307 resolved as shift
WARNING: shift/reduce conflict for BRING in state 307 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 307 resolved as shift
WARNING: shift/reduce conflict for VOID in state 307 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 307 resolved as shift
WARNING: shift/reduce conflict for INT in state 307 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 307 resolved as shift
WARNING: shift/reduce conflict for LLAVE_CIERRE in state 318 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (statements -> statement)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (statements -> empty)
WARNING: rejected rule (statement -> empty) in state 3
WARNING: reduce/reduce conflict in state 47 resolved using rule (condition -> ID)
WARNING: rejected rule (expression -> ID) in state 47
WARNING: reduce/reduce conflict in state 47 resolved using rule (condition -> ID)
WARNING: rejected rule (empty -> <empty>) in state 47
WARNING: reduce/reduce conflict in state 48 resolved using rule (condition -> NUMERO)
WARNING: rejected rule (expression -> NUMERO) in state 48
WARNING: reduce/reduce conflict in state 49 resolved using rule (condition -> ENTERO)
WARNING: rejected rule (expression -> ENTERO) in state 49
WARNING: reduce/reduce conflict in state 64 resolved using rule (condition -> ID)
WARNING: rejected rule (empty -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 80 resolved using rule (expression_list -> empty)
WARNING: rejected rule (parameters -> empty) in state 80
WARNING: reduce/reduce conflict in state 81 resolved using rule (condition -> ID)
WARNING: rejected rule (expression -> ID) in state 81
WARNING: reduce/reduce conflict in state 81 resolved using rule (condition -> ID)
WARNING: rejected rule (empty -> <empty>) in state 81
WARNING: reduce/reduce conflict in state 85 resolved using rule (condition -> NUMERO)
WARNING: rejected rule (expression -> NUMERO) in state 85
WARNING: reduce/reduce conflict in state 86 resolved using rule (condition -> ENTERO)
WARNING: rejected rule (expression -> ENTERO) in state 86
WARNING: reduce/reduce conflict in state 105 resolved using rule (condition -> ID)
WARNING: rejected rule (expression -> ID) in state 105
WARNING: reduce/reduce conflict in state 105 resolved using rule (condition -> ID)
WARNING: rejected rule (empty -> <empty>) in state 105
WARNING: Rule (statement -> empty) is never reduced
