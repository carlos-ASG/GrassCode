Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CATCH
    CONST
    INIT
    MODULOINCREMENTO
    RETURN
    TRY
    WHILE

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statement statements
Rule 3     statements -> empty
Rule 4     statement -> fun_statement
Rule 5     statement -> variable_declaration
Rule 6     statement -> assignment
Rule 7     statement -> if_statement
Rule 8     statement -> for_statement
Rule 9     statement -> call_fun
Rule 10    statement -> import
Rule 11    statement -> empty
Rule 12    import -> BRING ID PUNTOCOMA
Rule 13    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 14    fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 15    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 16    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
Rule 17    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
Rule 18    fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 19    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
Rule 20    fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 21    fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 22    fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
Rule 23    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 24    if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 25    for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
Rule 26    call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 27    call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
Rule 28    variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA
Rule 29    variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA
Rule 30    variable_declaration -> datatype ID PUNTOCOMA
Rule 31    variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
Rule 32    variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
Rule 33    assignment -> ID ASIGNAR expression PUNTOCOMA
Rule 34    expression_list -> expression
Rule 35    expression_list -> expression COMA expression_list
Rule 36    expression_list -> empty
Rule 37    condition -> condition AND condition
Rule 38    condition -> condition OR condition
Rule 39    condition -> NOT condition
Rule 40    condition -> condition MENORQUE condition
Rule 41    condition -> condition MAYORQUE condition
Rule 42    condition -> condition IGUAL condition
Rule 43    condition -> condition DIFERENTE condition
Rule 44    condition -> condition MENORIGUAL condition
Rule 45    condition -> condition MAYORIGUAL condition
Rule 46    condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE
Rule 47    condition -> boleano
Rule 48    condition -> ID
Rule 49    condition -> NUMERO
Rule 50    condition -> ENTERO
Rule 51    expression -> ID
Rule 52    expression -> NUMERO
Rule 53    expression -> ENTERO
Rule 54    expression -> expression SUMA expression
Rule 55    expression -> expression RESTA expression
Rule 56    expression -> expression MULTIPLICACION expression
Rule 57    expression -> expression DIVISION expression
Rule 58    expression -> expression MODULO expression
Rule 59    expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE
Rule 60    parameters -> datatype ID
Rule 61    parameters -> datatype ID COMA parameters
Rule 62    parameters -> empty
Rule 63    datatype -> VOID
Rule 64    datatype -> FLOAT
Rule 65    datatype -> INT
Rule 66    datatype -> BOOL
Rule 67    boleano -> TRUE
Rule 68    boleano -> FALSE
Rule 69    empty -> <empty>

Terminals, with rules where they appear

AND                  : 37
ASIGNAR              : 25 25 28 29 31 32 33
BOOL                 : 66
BRING                : 12
CATCH                : 
COMA                 : 35 61
CONST                : 
CORCHETE_APERTURA    : 31 31 32 32
CORCHETE_CIERRE      : 31 31 32 32
DIFERENTE            : 43
DIVISION             : 57
DOSPUNTOS            : 13 14 16 17 18 19 20 21
ELSE                 : 24
ENTERO               : 50 53
FALSE                : 68
FLOAT                : 64
FOR                  : 25
FUN                  : 13 15 16 17 18 19 20 21 22
ID                   : 12 13 14 15 16 17 19 20 21 22 25 25 26 27 27 28 29 30 31 32 33 48 51 60 61
IF                   : 23 24
IGUAL                : 42
INIT                 : 
INT                  : 65
LLAVE_APERTURA       : 13 14 15 16 18 19 20 21 22 23 24 24 25
LLAVE_CIERRE         : 13 14 15 17 18 19 20 21 22 23 24 24 25
MAYORIGUAL           : 45
MAYORQUE             : 41
MENORIGUAL           : 44
MENORQUE             : 40
MODULO               : 58
MODULOINCREMENTO     : 
MULTIPLICACION       : 56
NOT                  : 39
NUMERO               : 49 52
OR                   : 38
PARENTESIS_APERTURA  : 13 14 15 16 17 18 19 21 22 23 24 25 26 27 46 59
PARENTESIS_CIERRE    : 13 14 15 16 17 18 19 20 22 23 24 25 26 27 46 59
PUNTO                : 27
PUNTOCOMA            : 12 25 25 26 27 28 29 30 31 32 33
RESTA                : 55
RETURN               : 
SUMA                 : 54
TRUE                 : 67
TRY                  : 
VOID                 : 63
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 6
boleano              : 47
call_fun             : 9
condition            : 23 24 25 29 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46
datatype             : 13 14 16 17 18 20 21 22 25 28 29 30 31 32 60 61
empty                : 3 11 36 62
expression           : 25 25 28 33 34 35 54 54 55 55 56 56 57 57 58 58 59
expression_list      : 26 27 31 35
for_statement        : 8
fun_statement        : 4
if_statement         : 7
import               : 10
parameters           : 13 14 15 16 17 18 19 20 21 22 61
statement            : 1 2
statements           : 2 13 14 15 16 17 18 19 20 21 22 23 24 24 25 0
variable_declaration : 5

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    datatype                       shift and go to state 13

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement .
    (2) statements -> statement . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! reduce/reduce conflict for $end resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for LLAVE_CIERRE resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for FUN resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for ID resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for IF resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for FOR resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for BRING resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for VOID resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for FLOAT resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for INT resolved using rule 1 (statements -> statement .)
  ! reduce/reduce conflict for BOOL resolved using rule 1 (statements -> statement .)
  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 1 (statements -> statement .)
    LLAVE_CIERRE    reduce using rule 1 (statements -> statement .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 1 (statements -> statement .) ]
  ! ID              [ reduce using rule 1 (statements -> statement .) ]
  ! IF              [ reduce using rule 1 (statements -> statement .) ]
  ! FOR             [ reduce using rule 1 (statements -> statement .) ]
  ! BRING           [ reduce using rule 1 (statements -> statement .) ]
  ! VOID            [ reduce using rule 1 (statements -> statement .) ]
  ! FLOAT           [ reduce using rule 1 (statements -> statement .) ]
  ! INT             [ reduce using rule 1 (statements -> statement .) ]
  ! BOOL            [ reduce using rule 1 (statements -> statement .) ]
  ! $end            [ reduce using rule 69 (empty -> .) ]
  ! LLAVE_CIERRE    [ reduce using rule 69 (empty -> .) ]
  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    statement                      shift and go to state 2
    statements                     shift and go to state 21
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    datatype                       shift and go to state 13

state 3

    (3) statements -> empty .
    (11) statement -> empty .

  ! reduce/reduce conflict for FUN resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for BRING resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for VOID resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for FLOAT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for INT resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for BOOL resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 3 (statements -> empty .)
  ! reduce/reduce conflict for LLAVE_CIERRE resolved using rule 3 (statements -> empty .)
    $end            reduce using rule 3 (statements -> empty .)
    LLAVE_CIERRE    reduce using rule 3 (statements -> empty .)
    FUN             reduce using rule 3 (statements -> empty .)
    ID              reduce using rule 3 (statements -> empty .)
    IF              reduce using rule 3 (statements -> empty .)
    FOR             reduce using rule 3 (statements -> empty .)
    BRING           reduce using rule 3 (statements -> empty .)
    VOID            reduce using rule 3 (statements -> empty .)
    FLOAT           reduce using rule 3 (statements -> empty .)
    INT             reduce using rule 3 (statements -> empty .)
    BOOL            reduce using rule 3 (statements -> empty .)

  ! FUN             [ reduce using rule 11 (statement -> empty .) ]
  ! ID              [ reduce using rule 11 (statement -> empty .) ]
  ! IF              [ reduce using rule 11 (statement -> empty .) ]
  ! FOR             [ reduce using rule 11 (statement -> empty .) ]
  ! BRING           [ reduce using rule 11 (statement -> empty .) ]
  ! VOID            [ reduce using rule 11 (statement -> empty .) ]
  ! FLOAT           [ reduce using rule 11 (statement -> empty .) ]
  ! INT             [ reduce using rule 11 (statement -> empty .) ]
  ! BOOL            [ reduce using rule 11 (statement -> empty .) ]
  ! $end            [ reduce using rule 11 (statement -> empty .) ]
  ! LLAVE_CIERRE    [ reduce using rule 11 (statement -> empty .) ]


state 4

    (4) statement -> fun_statement .

    FUN             reduce using rule 4 (statement -> fun_statement .)
    ID              reduce using rule 4 (statement -> fun_statement .)
    IF              reduce using rule 4 (statement -> fun_statement .)
    FOR             reduce using rule 4 (statement -> fun_statement .)
    BRING           reduce using rule 4 (statement -> fun_statement .)
    VOID            reduce using rule 4 (statement -> fun_statement .)
    FLOAT           reduce using rule 4 (statement -> fun_statement .)
    INT             reduce using rule 4 (statement -> fun_statement .)
    BOOL            reduce using rule 4 (statement -> fun_statement .)
    $end            reduce using rule 4 (statement -> fun_statement .)
    LLAVE_CIERRE    reduce using rule 4 (statement -> fun_statement .)


state 5

    (5) statement -> variable_declaration .

    FUN             reduce using rule 5 (statement -> variable_declaration .)
    ID              reduce using rule 5 (statement -> variable_declaration .)
    IF              reduce using rule 5 (statement -> variable_declaration .)
    FOR             reduce using rule 5 (statement -> variable_declaration .)
    BRING           reduce using rule 5 (statement -> variable_declaration .)
    VOID            reduce using rule 5 (statement -> variable_declaration .)
    FLOAT           reduce using rule 5 (statement -> variable_declaration .)
    INT             reduce using rule 5 (statement -> variable_declaration .)
    BOOL            reduce using rule 5 (statement -> variable_declaration .)
    $end            reduce using rule 5 (statement -> variable_declaration .)
    LLAVE_CIERRE    reduce using rule 5 (statement -> variable_declaration .)


state 6

    (6) statement -> assignment .

    FUN             reduce using rule 6 (statement -> assignment .)
    ID              reduce using rule 6 (statement -> assignment .)
    IF              reduce using rule 6 (statement -> assignment .)
    FOR             reduce using rule 6 (statement -> assignment .)
    BRING           reduce using rule 6 (statement -> assignment .)
    VOID            reduce using rule 6 (statement -> assignment .)
    FLOAT           reduce using rule 6 (statement -> assignment .)
    INT             reduce using rule 6 (statement -> assignment .)
    BOOL            reduce using rule 6 (statement -> assignment .)
    $end            reduce using rule 6 (statement -> assignment .)
    LLAVE_CIERRE    reduce using rule 6 (statement -> assignment .)


state 7

    (7) statement -> if_statement .

    FUN             reduce using rule 7 (statement -> if_statement .)
    ID              reduce using rule 7 (statement -> if_statement .)
    IF              reduce using rule 7 (statement -> if_statement .)
    FOR             reduce using rule 7 (statement -> if_statement .)
    BRING           reduce using rule 7 (statement -> if_statement .)
    VOID            reduce using rule 7 (statement -> if_statement .)
    FLOAT           reduce using rule 7 (statement -> if_statement .)
    INT             reduce using rule 7 (statement -> if_statement .)
    BOOL            reduce using rule 7 (statement -> if_statement .)
    $end            reduce using rule 7 (statement -> if_statement .)
    LLAVE_CIERRE    reduce using rule 7 (statement -> if_statement .)


state 8

    (8) statement -> for_statement .

    FUN             reduce using rule 8 (statement -> for_statement .)
    ID              reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    BRING           reduce using rule 8 (statement -> for_statement .)
    VOID            reduce using rule 8 (statement -> for_statement .)
    FLOAT           reduce using rule 8 (statement -> for_statement .)
    INT             reduce using rule 8 (statement -> for_statement .)
    BOOL            reduce using rule 8 (statement -> for_statement .)
    $end            reduce using rule 8 (statement -> for_statement .)
    LLAVE_CIERRE    reduce using rule 8 (statement -> for_statement .)


state 9

    (9) statement -> call_fun .

    FUN             reduce using rule 9 (statement -> call_fun .)
    ID              reduce using rule 9 (statement -> call_fun .)
    IF              reduce using rule 9 (statement -> call_fun .)
    FOR             reduce using rule 9 (statement -> call_fun .)
    BRING           reduce using rule 9 (statement -> call_fun .)
    VOID            reduce using rule 9 (statement -> call_fun .)
    FLOAT           reduce using rule 9 (statement -> call_fun .)
    INT             reduce using rule 9 (statement -> call_fun .)
    BOOL            reduce using rule 9 (statement -> call_fun .)
    $end            reduce using rule 9 (statement -> call_fun .)
    LLAVE_CIERRE    reduce using rule 9 (statement -> call_fun .)


state 10

    (10) statement -> import .

    FUN             reduce using rule 10 (statement -> import .)
    ID              reduce using rule 10 (statement -> import .)
    IF              reduce using rule 10 (statement -> import .)
    FOR             reduce using rule 10 (statement -> import .)
    BRING           reduce using rule 10 (statement -> import .)
    VOID            reduce using rule 10 (statement -> import .)
    FLOAT           reduce using rule 10 (statement -> import .)
    INT             reduce using rule 10 (statement -> import .)
    BOOL            reduce using rule 10 (statement -> import .)
    $end            reduce using rule 10 (statement -> import .)
    LLAVE_CIERRE    reduce using rule 10 (statement -> import .)


state 11

    (13) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> FUN . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> FUN . ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> FUN . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE

    ID              shift and go to state 22
    PARENTESIS_APERTURA shift and go to state 23


state 12

    (14) fun_statement -> ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (33) assignment -> ID . ASIGNAR expression PUNTOCOMA
    (26) call_fun -> ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> ID . PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_APERTURA shift and go to state 24
    ASIGNAR         shift and go to state 25
    PUNTO           shift and go to state 26


state 13

    (28) variable_declaration -> datatype . ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> datatype . ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> datatype . ID PUNTOCOMA
    (31) variable_declaration -> datatype . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> datatype . CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA

    ID              shift and go to state 27
    CORCHETE_APERTURA shift and go to state 28


state 14

    (23) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> IF . PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_APERTURA shift and go to state 29


state 15

    (25) for_statement -> FOR . PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_APERTURA shift and go to state 30


state 16

    (12) import -> BRING . ID PUNTOCOMA

    ID              shift and go to state 31


state 17

    (63) datatype -> VOID .

    ID              reduce using rule 63 (datatype -> VOID .)
    CORCHETE_APERTURA reduce using rule 63 (datatype -> VOID .)
    LLAVE_APERTURA  reduce using rule 63 (datatype -> VOID .)
    FUN             reduce using rule 63 (datatype -> VOID .)
    IF              reduce using rule 63 (datatype -> VOID .)
    FOR             reduce using rule 63 (datatype -> VOID .)
    BRING           reduce using rule 63 (datatype -> VOID .)
    VOID            reduce using rule 63 (datatype -> VOID .)
    FLOAT           reduce using rule 63 (datatype -> VOID .)
    INT             reduce using rule 63 (datatype -> VOID .)
    BOOL            reduce using rule 63 (datatype -> VOID .)
    LLAVE_CIERRE    reduce using rule 63 (datatype -> VOID .)


state 18

    (64) datatype -> FLOAT .

    ID              reduce using rule 64 (datatype -> FLOAT .)
    CORCHETE_APERTURA reduce using rule 64 (datatype -> FLOAT .)
    LLAVE_APERTURA  reduce using rule 64 (datatype -> FLOAT .)
    FUN             reduce using rule 64 (datatype -> FLOAT .)
    IF              reduce using rule 64 (datatype -> FLOAT .)
    FOR             reduce using rule 64 (datatype -> FLOAT .)
    BRING           reduce using rule 64 (datatype -> FLOAT .)
    VOID            reduce using rule 64 (datatype -> FLOAT .)
    FLOAT           reduce using rule 64 (datatype -> FLOAT .)
    INT             reduce using rule 64 (datatype -> FLOAT .)
    BOOL            reduce using rule 64 (datatype -> FLOAT .)
    LLAVE_CIERRE    reduce using rule 64 (datatype -> FLOAT .)


state 19

    (65) datatype -> INT .

    ID              reduce using rule 65 (datatype -> INT .)
    CORCHETE_APERTURA reduce using rule 65 (datatype -> INT .)
    LLAVE_APERTURA  reduce using rule 65 (datatype -> INT .)
    FUN             reduce using rule 65 (datatype -> INT .)
    IF              reduce using rule 65 (datatype -> INT .)
    FOR             reduce using rule 65 (datatype -> INT .)
    BRING           reduce using rule 65 (datatype -> INT .)
    VOID            reduce using rule 65 (datatype -> INT .)
    FLOAT           reduce using rule 65 (datatype -> INT .)
    INT             reduce using rule 65 (datatype -> INT .)
    BOOL            reduce using rule 65 (datatype -> INT .)
    LLAVE_CIERRE    reduce using rule 65 (datatype -> INT .)


state 20

    (66) datatype -> BOOL .

    ID              reduce using rule 66 (datatype -> BOOL .)
    CORCHETE_APERTURA reduce using rule 66 (datatype -> BOOL .)
    LLAVE_APERTURA  reduce using rule 66 (datatype -> BOOL .)
    FUN             reduce using rule 66 (datatype -> BOOL .)
    IF              reduce using rule 66 (datatype -> BOOL .)
    FOR             reduce using rule 66 (datatype -> BOOL .)
    BRING           reduce using rule 66 (datatype -> BOOL .)
    VOID            reduce using rule 66 (datatype -> BOOL .)
    FLOAT           reduce using rule 66 (datatype -> BOOL .)
    INT             reduce using rule 66 (datatype -> BOOL .)
    BOOL            reduce using rule 66 (datatype -> BOOL .)
    LLAVE_CIERRE    reduce using rule 66 (datatype -> BOOL .)


state 21

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)
    LLAVE_CIERRE    reduce using rule 2 (statements -> statement statements .)
    FUN             reduce using rule 2 (statements -> statement statements .)
    ID              reduce using rule 2 (statements -> statement statements .)
    IF              reduce using rule 2 (statements -> statement statements .)
    FOR             reduce using rule 2 (statements -> statement statements .)
    BRING           reduce using rule 2 (statements -> statement statements .)
    VOID            reduce using rule 2 (statements -> statement statements .)
    FLOAT           reduce using rule 2 (statements -> statement statements .)
    INT             reduce using rule 2 (statements -> statement statements .)
    BOOL            reduce using rule 2 (statements -> statement statements .)


state 22

    (13) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (19) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> FUN ID . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> FUN ID . PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (60) parameters -> . datatype ID
    (61) parameters -> . datatype ID COMA parameters
    (62) parameters -> . empty
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL
    (69) empty -> .

    PARENTESIS_APERTURA shift and go to state 32
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20
    PARENTESIS_CIERRE reduce using rule 69 (empty -> .)

    parameters                     shift and go to state 33
    datatype                       shift and go to state 34
    empty                          shift and go to state 35

state 23

    (18) fun_statement -> FUN PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (60) parameters -> . datatype ID
    (61) parameters -> . datatype ID COMA parameters
    (62) parameters -> . empty
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL
    (69) empty -> .

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20
    PARENTESIS_CIERRE reduce using rule 69 (empty -> .)

    parameters                     shift and go to state 36
    datatype                       shift and go to state 34
    empty                          shift and go to state 35

state 24

    (14) fun_statement -> ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (60) parameters -> . datatype ID
    (61) parameters -> . datatype ID COMA parameters
    (62) parameters -> . empty
    (34) expression_list -> . expression
    (35) expression_list -> . expression COMA expression_list
    (36) expression_list -> . empty
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL
    (69) empty -> .
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20
    PARENTESIS_CIERRE reduce using rule 69 (empty -> .)
    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    parameters                     shift and go to state 39
    datatype                       shift and go to state 34
    expression_list                shift and go to state 40
    empty                          shift and go to state 41
    expression                     shift and go to state 42

state 25

    (33) assignment -> ID ASIGNAR . expression PUNTOCOMA
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 45

state 26

    (27) call_fun -> ID PUNTO . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA

    ID              shift and go to state 46


state 27

    (28) variable_declaration -> datatype ID . ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> datatype ID . ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> datatype ID . PUNTOCOMA

    ASIGNAR         shift and go to state 47
    PUNTOCOMA       shift and go to state 48


state 28

    (31) variable_declaration -> datatype CORCHETE_APERTURA . CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> datatype CORCHETE_APERTURA . CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA

    CORCHETE_CIERRE shift and go to state 49


state 29

    (23) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> IF PARENTESIS_APERTURA . condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 51
    boleano                        shift and go to state 53

state 30

    (25) for_statement -> FOR PARENTESIS_APERTURA . datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

    datatype                       shift and go to state 59

state 31

    (12) import -> BRING ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 60


state 32

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> FUN ID PARENTESIS_APERTURA . parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (60) parameters -> . datatype ID
    (61) parameters -> . datatype ID COMA parameters
    (62) parameters -> . empty
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL
    (69) empty -> .

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20
    PARENTESIS_CIERRE reduce using rule 69 (empty -> .)
    DOSPUNTOS       reduce using rule 69 (empty -> .)

    parameters                     shift and go to state 61
    datatype                       shift and go to state 34
    empty                          shift and go to state 35

state 33

    (20) fun_statement -> FUN ID parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 62


state 34

    (60) parameters -> datatype . ID
    (61) parameters -> datatype . ID COMA parameters

    ID              shift and go to state 63


state 35

    (62) parameters -> empty .

    PARENTESIS_CIERRE reduce using rule 62 (parameters -> empty .)
    DOSPUNTOS       reduce using rule 62 (parameters -> empty .)


state 36

    (18) fun_statement -> FUN PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 64


state 37

    (51) expression -> ID .

    COMA            reduce using rule 51 (expression -> ID .)
    SUMA            reduce using rule 51 (expression -> ID .)
    RESTA           reduce using rule 51 (expression -> ID .)
    MULTIPLICACION  reduce using rule 51 (expression -> ID .)
    DIVISION        reduce using rule 51 (expression -> ID .)
    MODULO          reduce using rule 51 (expression -> ID .)
    PARENTESIS_CIERRE reduce using rule 51 (expression -> ID .)
    PUNTOCOMA       reduce using rule 51 (expression -> ID .)
    CORCHETE_CIERRE reduce using rule 51 (expression -> ID .)


state 38

    (59) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 65

state 39

    (14) fun_statement -> ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 66


state 40

    (26) call_fun -> ID PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_CIERRE shift and go to state 67


state 41

    (62) parameters -> empty .
    (36) expression_list -> empty .

  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 36 (expression_list -> empty .)
    PARENTESIS_CIERRE reduce using rule 36 (expression_list -> empty .)

  ! PARENTESIS_CIERRE [ reduce using rule 62 (parameters -> empty .) ]


state 42

    (34) expression_list -> expression .
    (35) expression_list -> expression . COMA expression_list
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    PARENTESIS_CIERRE reduce using rule 34 (expression_list -> expression .)
    CORCHETE_CIERRE reduce using rule 34 (expression_list -> expression .)
    COMA            shift and go to state 68
    SUMA            shift and go to state 69
    RESTA           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    MODULO          shift and go to state 73


state 43

    (52) expression -> NUMERO .

    COMA            reduce using rule 52 (expression -> NUMERO .)
    SUMA            reduce using rule 52 (expression -> NUMERO .)
    RESTA           reduce using rule 52 (expression -> NUMERO .)
    MULTIPLICACION  reduce using rule 52 (expression -> NUMERO .)
    DIVISION        reduce using rule 52 (expression -> NUMERO .)
    MODULO          reduce using rule 52 (expression -> NUMERO .)
    PARENTESIS_CIERRE reduce using rule 52 (expression -> NUMERO .)
    PUNTOCOMA       reduce using rule 52 (expression -> NUMERO .)
    CORCHETE_CIERRE reduce using rule 52 (expression -> NUMERO .)


state 44

    (53) expression -> ENTERO .

    COMA            reduce using rule 53 (expression -> ENTERO .)
    SUMA            reduce using rule 53 (expression -> ENTERO .)
    RESTA           reduce using rule 53 (expression -> ENTERO .)
    MULTIPLICACION  reduce using rule 53 (expression -> ENTERO .)
    DIVISION        reduce using rule 53 (expression -> ENTERO .)
    MODULO          reduce using rule 53 (expression -> ENTERO .)
    PARENTESIS_CIERRE reduce using rule 53 (expression -> ENTERO .)
    PUNTOCOMA       reduce using rule 53 (expression -> ENTERO .)
    CORCHETE_CIERRE reduce using rule 53 (expression -> ENTERO .)


state 45

    (33) assignment -> ID ASIGNAR expression . PUNTOCOMA
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    PUNTOCOMA       shift and go to state 74
    SUMA            shift and go to state 69
    RESTA           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    MODULO          shift and go to state 73


state 46

    (27) call_fun -> ID PUNTO ID . PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_APERTURA shift and go to state 75


state 47

    (28) variable_declaration -> datatype ID ASIGNAR . expression PUNTOCOMA
    (29) variable_declaration -> datatype ID ASIGNAR . condition PUNTOCOMA
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    ID              shift and go to state 76
    NUMERO          shift and go to state 79
    ENTERO          shift and go to state 80
    PARENTESIS_APERTURA shift and go to state 81
    NOT             shift and go to state 52
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    expression                     shift and go to state 77
    condition                      shift and go to state 78
    boleano                        shift and go to state 53

state 48

    (30) variable_declaration -> datatype ID PUNTOCOMA .

    FUN             reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    ID              reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    IF              reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    FOR             reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    BRING           reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    VOID            reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    FLOAT           reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    INT             reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    BOOL            reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    $end            reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 30 (variable_declaration -> datatype ID PUNTOCOMA .)


state 49

    (31) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE . ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE . ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA

    ID              shift and go to state 82


state 50

    (46) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 83
    boleano                        shift and go to state 53

state 51

    (23) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> IF PARENTESIS_APERTURA condition . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 84
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92


state 52

    (39) condition -> NOT . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 93
    boleano                        shift and go to state 53

state 53

    (47) condition -> boleano .

    PARENTESIS_CIERRE reduce using rule 47 (condition -> boleano .)
    AND             reduce using rule 47 (condition -> boleano .)
    OR              reduce using rule 47 (condition -> boleano .)
    MENORQUE        reduce using rule 47 (condition -> boleano .)
    MAYORQUE        reduce using rule 47 (condition -> boleano .)
    IGUAL           reduce using rule 47 (condition -> boleano .)
    DIFERENTE       reduce using rule 47 (condition -> boleano .)
    MENORIGUAL      reduce using rule 47 (condition -> boleano .)
    MAYORIGUAL      reduce using rule 47 (condition -> boleano .)
    PUNTOCOMA       reduce using rule 47 (condition -> boleano .)


state 54

    (48) condition -> ID .

    PARENTESIS_CIERRE reduce using rule 48 (condition -> ID .)
    AND             reduce using rule 48 (condition -> ID .)
    OR              reduce using rule 48 (condition -> ID .)
    MENORQUE        reduce using rule 48 (condition -> ID .)
    MAYORQUE        reduce using rule 48 (condition -> ID .)
    IGUAL           reduce using rule 48 (condition -> ID .)
    DIFERENTE       reduce using rule 48 (condition -> ID .)
    MENORIGUAL      reduce using rule 48 (condition -> ID .)
    MAYORIGUAL      reduce using rule 48 (condition -> ID .)
    PUNTOCOMA       reduce using rule 48 (condition -> ID .)


state 55

    (49) condition -> NUMERO .

    PARENTESIS_CIERRE reduce using rule 49 (condition -> NUMERO .)
    AND             reduce using rule 49 (condition -> NUMERO .)
    OR              reduce using rule 49 (condition -> NUMERO .)
    MENORQUE        reduce using rule 49 (condition -> NUMERO .)
    MAYORQUE        reduce using rule 49 (condition -> NUMERO .)
    IGUAL           reduce using rule 49 (condition -> NUMERO .)
    DIFERENTE       reduce using rule 49 (condition -> NUMERO .)
    MENORIGUAL      reduce using rule 49 (condition -> NUMERO .)
    MAYORIGUAL      reduce using rule 49 (condition -> NUMERO .)
    PUNTOCOMA       reduce using rule 49 (condition -> NUMERO .)


state 56

    (50) condition -> ENTERO .

    PARENTESIS_CIERRE reduce using rule 50 (condition -> ENTERO .)
    AND             reduce using rule 50 (condition -> ENTERO .)
    OR              reduce using rule 50 (condition -> ENTERO .)
    MENORQUE        reduce using rule 50 (condition -> ENTERO .)
    MAYORQUE        reduce using rule 50 (condition -> ENTERO .)
    IGUAL           reduce using rule 50 (condition -> ENTERO .)
    DIFERENTE       reduce using rule 50 (condition -> ENTERO .)
    MENORIGUAL      reduce using rule 50 (condition -> ENTERO .)
    MAYORIGUAL      reduce using rule 50 (condition -> ENTERO .)
    PUNTOCOMA       reduce using rule 50 (condition -> ENTERO .)


state 57

    (67) boleano -> TRUE .

    PARENTESIS_CIERRE reduce using rule 67 (boleano -> TRUE .)
    AND             reduce using rule 67 (boleano -> TRUE .)
    OR              reduce using rule 67 (boleano -> TRUE .)
    MENORQUE        reduce using rule 67 (boleano -> TRUE .)
    MAYORQUE        reduce using rule 67 (boleano -> TRUE .)
    IGUAL           reduce using rule 67 (boleano -> TRUE .)
    DIFERENTE       reduce using rule 67 (boleano -> TRUE .)
    MENORIGUAL      reduce using rule 67 (boleano -> TRUE .)
    MAYORIGUAL      reduce using rule 67 (boleano -> TRUE .)
    PUNTOCOMA       reduce using rule 67 (boleano -> TRUE .)


state 58

    (68) boleano -> FALSE .

    PARENTESIS_CIERRE reduce using rule 68 (boleano -> FALSE .)
    AND             reduce using rule 68 (boleano -> FALSE .)
    OR              reduce using rule 68 (boleano -> FALSE .)
    MENORQUE        reduce using rule 68 (boleano -> FALSE .)
    MAYORQUE        reduce using rule 68 (boleano -> FALSE .)
    IGUAL           reduce using rule 68 (boleano -> FALSE .)
    DIFERENTE       reduce using rule 68 (boleano -> FALSE .)
    MENORIGUAL      reduce using rule 68 (boleano -> FALSE .)
    MAYORIGUAL      reduce using rule 68 (boleano -> FALSE .)
    PUNTOCOMA       reduce using rule 68 (boleano -> FALSE .)


state 59

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype . ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE

    ID              shift and go to state 94


state 60

    (12) import -> BRING ID PUNTOCOMA .

    FUN             reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    ID              reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    IF              reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    FOR             reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    BRING           reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    VOID            reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    FLOAT           reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    INT             reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    BOOL            reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    $end            reduce using rule 12 (import -> BRING ID PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 12 (import -> BRING ID PUNTOCOMA .)


state 61

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> FUN ID PARENTESIS_APERTURA parameters . PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE

    PARENTESIS_CIERRE shift and go to state 95
    DOSPUNTOS       shift and go to state 96


state 62

    (20) fun_statement -> FUN ID parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    DOSPUNTOS       shift and go to state 97


state 63

    (60) parameters -> datatype ID .
    (61) parameters -> datatype ID . COMA parameters

    PARENTESIS_CIERRE reduce using rule 60 (parameters -> datatype ID .)
    DOSPUNTOS       reduce using rule 60 (parameters -> datatype ID .)
    COMA            shift and go to state 98


state 64

    (18) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    DOSPUNTOS       shift and go to state 99


state 65

    (59) expression -> PARENTESIS_APERTURA expression . PARENTESIS_CIERRE
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    PARENTESIS_CIERRE shift and go to state 100
    SUMA            shift and go to state 69
    RESTA           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    MODULO          shift and go to state 73


state 66

    (14) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE

    DOSPUNTOS       shift and go to state 101


state 67

    (26) call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 102


state 68

    (35) expression_list -> expression COMA . expression_list
    (34) expression_list -> . expression
    (35) expression_list -> . expression COMA expression_list
    (36) expression_list -> . empty
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (69) empty -> .

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38
    PARENTESIS_CIERRE reduce using rule 69 (empty -> .)
    CORCHETE_CIERRE reduce using rule 69 (empty -> .)

    expression                     shift and go to state 42
    expression_list                shift and go to state 103
    empty                          shift and go to state 104

state 69

    (54) expression -> expression SUMA . expression
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 105

state 70

    (55) expression -> expression RESTA . expression
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 106

state 71

    (56) expression -> expression MULTIPLICACION . expression
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 107

state 72

    (57) expression -> expression DIVISION . expression
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 108

state 73

    (58) expression -> expression MODULO . expression
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 109

state 74

    (33) assignment -> ID ASIGNAR expression PUNTOCOMA .

    FUN             reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    ID              reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    IF              reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    FOR             reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    BRING           reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    VOID            reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    FLOAT           reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    INT             reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    BOOL            reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    $end            reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 33 (assignment -> ID ASIGNAR expression PUNTOCOMA .)


state 75

    (27) call_fun -> ID PUNTO ID PARENTESIS_APERTURA . expression_list PARENTESIS_CIERRE PUNTOCOMA
    (34) expression_list -> . expression
    (35) expression_list -> . expression COMA expression_list
    (36) expression_list -> . empty
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (69) empty -> .

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38
    PARENTESIS_CIERRE reduce using rule 69 (empty -> .)

    expression_list                shift and go to state 110
    expression                     shift and go to state 42
    empty                          shift and go to state 104

state 76

    (51) expression -> ID .
    (48) condition -> ID .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 48 (condition -> ID .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 48 (condition -> ID .)
    SUMA            reduce using rule 51 (expression -> ID .)
    RESTA           reduce using rule 51 (expression -> ID .)
    MULTIPLICACION  reduce using rule 51 (expression -> ID .)
    DIVISION        reduce using rule 51 (expression -> ID .)
    MODULO          reduce using rule 51 (expression -> ID .)
    PUNTOCOMA       reduce using rule 48 (condition -> ID .)
    AND             reduce using rule 48 (condition -> ID .)
    OR              reduce using rule 48 (condition -> ID .)
    MENORQUE        reduce using rule 48 (condition -> ID .)
    MAYORQUE        reduce using rule 48 (condition -> ID .)
    IGUAL           reduce using rule 48 (condition -> ID .)
    DIFERENTE       reduce using rule 48 (condition -> ID .)
    MENORIGUAL      reduce using rule 48 (condition -> ID .)
    MAYORIGUAL      reduce using rule 48 (condition -> ID .)
    PARENTESIS_CIERRE reduce using rule 48 (condition -> ID .)

  ! PUNTOCOMA       [ reduce using rule 51 (expression -> ID .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 51 (expression -> ID .) ]


state 77

    (28) variable_declaration -> datatype ID ASIGNAR expression . PUNTOCOMA
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    PUNTOCOMA       shift and go to state 111
    SUMA            shift and go to state 69
    RESTA           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    MODULO          shift and go to state 73


state 78

    (29) variable_declaration -> datatype ID ASIGNAR condition . PUNTOCOMA
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       shift and go to state 112
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92


state 79

    (52) expression -> NUMERO .
    (49) condition -> NUMERO .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 49 (condition -> NUMERO .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 49 (condition -> NUMERO .)
    SUMA            reduce using rule 52 (expression -> NUMERO .)
    RESTA           reduce using rule 52 (expression -> NUMERO .)
    MULTIPLICACION  reduce using rule 52 (expression -> NUMERO .)
    DIVISION        reduce using rule 52 (expression -> NUMERO .)
    MODULO          reduce using rule 52 (expression -> NUMERO .)
    PUNTOCOMA       reduce using rule 49 (condition -> NUMERO .)
    AND             reduce using rule 49 (condition -> NUMERO .)
    OR              reduce using rule 49 (condition -> NUMERO .)
    MENORQUE        reduce using rule 49 (condition -> NUMERO .)
    MAYORQUE        reduce using rule 49 (condition -> NUMERO .)
    IGUAL           reduce using rule 49 (condition -> NUMERO .)
    DIFERENTE       reduce using rule 49 (condition -> NUMERO .)
    MENORIGUAL      reduce using rule 49 (condition -> NUMERO .)
    MAYORIGUAL      reduce using rule 49 (condition -> NUMERO .)
    PARENTESIS_CIERRE reduce using rule 49 (condition -> NUMERO .)

  ! PUNTOCOMA       [ reduce using rule 52 (expression -> NUMERO .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 52 (expression -> NUMERO .) ]


state 80

    (53) expression -> ENTERO .
    (50) condition -> ENTERO .

  ! reduce/reduce conflict for PUNTOCOMA resolved using rule 50 (condition -> ENTERO .)
  ! reduce/reduce conflict for PARENTESIS_CIERRE resolved using rule 50 (condition -> ENTERO .)
    SUMA            reduce using rule 53 (expression -> ENTERO .)
    RESTA           reduce using rule 53 (expression -> ENTERO .)
    MULTIPLICACION  reduce using rule 53 (expression -> ENTERO .)
    DIVISION        reduce using rule 53 (expression -> ENTERO .)
    MODULO          reduce using rule 53 (expression -> ENTERO .)
    PUNTOCOMA       reduce using rule 50 (condition -> ENTERO .)
    AND             reduce using rule 50 (condition -> ENTERO .)
    OR              reduce using rule 50 (condition -> ENTERO .)
    MENORQUE        reduce using rule 50 (condition -> ENTERO .)
    MAYORQUE        reduce using rule 50 (condition -> ENTERO .)
    IGUAL           reduce using rule 50 (condition -> ENTERO .)
    DIFERENTE       reduce using rule 50 (condition -> ENTERO .)
    MENORIGUAL      reduce using rule 50 (condition -> ENTERO .)
    MAYORIGUAL      reduce using rule 50 (condition -> ENTERO .)
    PARENTESIS_CIERRE reduce using rule 50 (condition -> ENTERO .)

  ! PUNTOCOMA       [ reduce using rule 53 (expression -> ENTERO .) ]
  ! PARENTESIS_CIERRE [ reduce using rule 53 (expression -> ENTERO .) ]


state 81

    (59) expression -> PARENTESIS_APERTURA . expression PARENTESIS_CIERRE
    (46) condition -> PARENTESIS_APERTURA . condition PARENTESIS_CIERRE
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    ID              shift and go to state 76
    NUMERO          shift and go to state 79
    ENTERO          shift and go to state 80
    PARENTESIS_APERTURA shift and go to state 81
    NOT             shift and go to state 52
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    expression                     shift and go to state 65
    condition                      shift and go to state 83
    boleano                        shift and go to state 53

state 82

    (31) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID . ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID . ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA

    ASIGNAR         shift and go to state 113


state 83

    (46) condition -> PARENTESIS_APERTURA condition . PARENTESIS_CIERRE
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

    PARENTESIS_CIERRE shift and go to state 114
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92


state 84

    (23) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 115


state 85

    (37) condition -> condition AND . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 116
    boleano                        shift and go to state 53

state 86

    (38) condition -> condition OR . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 117
    boleano                        shift and go to state 53

state 87

    (40) condition -> condition MENORQUE . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 118
    boleano                        shift and go to state 53

state 88

    (41) condition -> condition MAYORQUE . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 119
    boleano                        shift and go to state 53

state 89

    (42) condition -> condition IGUAL . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 120
    boleano                        shift and go to state 53

state 90

    (43) condition -> condition DIFERENTE . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 121
    boleano                        shift and go to state 53

state 91

    (44) condition -> condition MENORIGUAL . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 122
    boleano                        shift and go to state 53

state 92

    (45) condition -> condition MAYORIGUAL . condition
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 123
    boleano                        shift and go to state 53

state 93

    (39) condition -> NOT condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 39 (condition -> NOT condition .)
    PUNTOCOMA       reduce using rule 39 (condition -> NOT condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 39 (condition -> NOT condition .) ]
  ! OR              [ reduce using rule 39 (condition -> NOT condition .) ]
  ! MENORQUE        [ reduce using rule 39 (condition -> NOT condition .) ]
  ! MAYORQUE        [ reduce using rule 39 (condition -> NOT condition .) ]
  ! IGUAL           [ reduce using rule 39 (condition -> NOT condition .) ]
  ! DIFERENTE       [ reduce using rule 39 (condition -> NOT condition .) ]
  ! MENORIGUAL      [ reduce using rule 39 (condition -> NOT condition .) ]
  ! MAYORIGUAL      [ reduce using rule 39 (condition -> NOT condition .) ]


state 94

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID . ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE

    ASIGNAR         shift and go to state 124


state 95

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS datatype statements LLAVE_CIERRE
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

    DOSPUNTOS       shift and go to state 125
    LLAVE_APERTURA  shift and go to state 127
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

    datatype                       shift and go to state 126

state 96

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

    datatype                       shift and go to state 128

state 97

    (20) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

    datatype                       shift and go to state 129

state 98

    (61) parameters -> datatype ID COMA . parameters
    (60) parameters -> . datatype ID
    (61) parameters -> . datatype ID COMA parameters
    (62) parameters -> . empty
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL
    (69) empty -> .

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20
    PARENTESIS_CIERRE reduce using rule 69 (empty -> .)
    DOSPUNTOS       reduce using rule 69 (empty -> .)

    datatype                       shift and go to state 34
    parameters                     shift and go to state 130
    empty                          shift and go to state 35

state 99

    (18) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

    datatype                       shift and go to state 131

state 100

    (59) expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .

    COMA            reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    SUMA            reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    RESTA           reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    MULTIPLICACION  reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    DIVISION        reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    MODULO          reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    PARENTESIS_CIERRE reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    PUNTOCOMA       reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)
    CORCHETE_CIERRE reduce using rule 59 (expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE .)


state 101

    (14) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

    datatype                       shift and go to state 132

state 102

    (26) call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 26 (call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 103

    (35) expression_list -> expression COMA expression_list .

    PARENTESIS_CIERRE reduce using rule 35 (expression_list -> expression COMA expression_list .)
    CORCHETE_CIERRE reduce using rule 35 (expression_list -> expression COMA expression_list .)


state 104

    (36) expression_list -> empty .

    PARENTESIS_CIERRE reduce using rule 36 (expression_list -> empty .)
    CORCHETE_CIERRE reduce using rule 36 (expression_list -> empty .)


state 105

    (54) expression -> expression SUMA expression .
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    COMA            reduce using rule 54 (expression -> expression SUMA expression .)
    SUMA            reduce using rule 54 (expression -> expression SUMA expression .)
    RESTA           reduce using rule 54 (expression -> expression SUMA expression .)
    MODULO          reduce using rule 54 (expression -> expression SUMA expression .)
    PARENTESIS_CIERRE reduce using rule 54 (expression -> expression SUMA expression .)
    PUNTOCOMA       reduce using rule 54 (expression -> expression SUMA expression .)
    CORCHETE_CIERRE reduce using rule 54 (expression -> expression SUMA expression .)
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MULTIPLICACION  [ reduce using rule 54 (expression -> expression SUMA expression .) ]
  ! DIVISION        [ reduce using rule 54 (expression -> expression SUMA expression .) ]
  ! SUMA            [ shift and go to state 69 ]
  ! RESTA           [ shift and go to state 70 ]
  ! MODULO          [ shift and go to state 73 ]


state 106

    (55) expression -> expression RESTA expression .
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    COMA            reduce using rule 55 (expression -> expression RESTA expression .)
    SUMA            reduce using rule 55 (expression -> expression RESTA expression .)
    RESTA           reduce using rule 55 (expression -> expression RESTA expression .)
    MODULO          reduce using rule 55 (expression -> expression RESTA expression .)
    PARENTESIS_CIERRE reduce using rule 55 (expression -> expression RESTA expression .)
    PUNTOCOMA       reduce using rule 55 (expression -> expression RESTA expression .)
    CORCHETE_CIERRE reduce using rule 55 (expression -> expression RESTA expression .)
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72

  ! MULTIPLICACION  [ reduce using rule 55 (expression -> expression RESTA expression .) ]
  ! DIVISION        [ reduce using rule 55 (expression -> expression RESTA expression .) ]
  ! SUMA            [ shift and go to state 69 ]
  ! RESTA           [ shift and go to state 70 ]
  ! MODULO          [ shift and go to state 73 ]


state 107

    (56) expression -> expression MULTIPLICACION expression .
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    COMA            reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    SUMA            reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    RESTA           reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    MULTIPLICACION  reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    DIVISION        reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    MODULO          reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    PARENTESIS_CIERRE reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    PUNTOCOMA       reduce using rule 56 (expression -> expression MULTIPLICACION expression .)
    CORCHETE_CIERRE reduce using rule 56 (expression -> expression MULTIPLICACION expression .)

  ! SUMA            [ shift and go to state 69 ]
  ! RESTA           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]


state 108

    (57) expression -> expression DIVISION expression .
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    COMA            reduce using rule 57 (expression -> expression DIVISION expression .)
    SUMA            reduce using rule 57 (expression -> expression DIVISION expression .)
    RESTA           reduce using rule 57 (expression -> expression DIVISION expression .)
    MULTIPLICACION  reduce using rule 57 (expression -> expression DIVISION expression .)
    DIVISION        reduce using rule 57 (expression -> expression DIVISION expression .)
    MODULO          reduce using rule 57 (expression -> expression DIVISION expression .)
    PARENTESIS_CIERRE reduce using rule 57 (expression -> expression DIVISION expression .)
    PUNTOCOMA       reduce using rule 57 (expression -> expression DIVISION expression .)
    CORCHETE_CIERRE reduce using rule 57 (expression -> expression DIVISION expression .)

  ! SUMA            [ shift and go to state 69 ]
  ! RESTA           [ shift and go to state 70 ]
  ! MULTIPLICACION  [ shift and go to state 71 ]
  ! DIVISION        [ shift and go to state 72 ]
  ! MODULO          [ shift and go to state 73 ]


state 109

    (58) expression -> expression MODULO expression .
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    COMA            reduce using rule 58 (expression -> expression MODULO expression .)
    PARENTESIS_CIERRE reduce using rule 58 (expression -> expression MODULO expression .)
    PUNTOCOMA       reduce using rule 58 (expression -> expression MODULO expression .)
    CORCHETE_CIERRE reduce using rule 58 (expression -> expression MODULO expression .)
    SUMA            shift and go to state 69
    RESTA           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    MODULO          shift and go to state 73

  ! SUMA            [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! RESTA           [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! MULTIPLICACION  [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! DIVISION        [ reduce using rule 58 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 58 (expression -> expression MODULO expression .) ]


state 110

    (27) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list . PARENTESIS_CIERRE PUNTOCOMA

    PARENTESIS_CIERRE shift and go to state 133


state 111

    (28) variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .

    FUN             reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    ID              reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    IF              reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    FOR             reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    BRING           reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    VOID            reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    FLOAT           reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    INT             reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    BOOL            reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    $end            reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 28 (variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA .)


state 112

    (29) variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .

    FUN             reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    ID              reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    IF              reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    FOR             reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    BRING           reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    VOID            reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    FLOAT           reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    INT             reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    BOOL            reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    $end            reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 29 (variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA .)


state 113

    (31) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR . CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR . CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA

    CORCHETE_APERTURA shift and go to state 134


state 114

    (46) condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .

    PARENTESIS_CIERRE reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    AND             reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    OR              reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORQUE        reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORQUE        reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    IGUAL           reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    DIFERENTE       reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MENORIGUAL      reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    MAYORIGUAL      reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)
    PUNTOCOMA       reduce using rule 46 (condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE .)


state 115

    (23) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    statements                     shift and go to state 135
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    datatype                       shift and go to state 13

state 116

    (37) condition -> condition AND condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 37 (condition -> condition AND condition .)
    PUNTOCOMA       reduce using rule 37 (condition -> condition AND condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 37 (condition -> condition AND condition .) ]
  ! OR              [ reduce using rule 37 (condition -> condition AND condition .) ]
  ! MENORQUE        [ reduce using rule 37 (condition -> condition AND condition .) ]
  ! MAYORQUE        [ reduce using rule 37 (condition -> condition AND condition .) ]
  ! IGUAL           [ reduce using rule 37 (condition -> condition AND condition .) ]
  ! DIFERENTE       [ reduce using rule 37 (condition -> condition AND condition .) ]
  ! MENORIGUAL      [ reduce using rule 37 (condition -> condition AND condition .) ]
  ! MAYORIGUAL      [ reduce using rule 37 (condition -> condition AND condition .) ]


state 117

    (38) condition -> condition OR condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 38 (condition -> condition OR condition .)
    PUNTOCOMA       reduce using rule 38 (condition -> condition OR condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 38 (condition -> condition OR condition .) ]
  ! OR              [ reduce using rule 38 (condition -> condition OR condition .) ]
  ! MENORQUE        [ reduce using rule 38 (condition -> condition OR condition .) ]
  ! MAYORQUE        [ reduce using rule 38 (condition -> condition OR condition .) ]
  ! IGUAL           [ reduce using rule 38 (condition -> condition OR condition .) ]
  ! DIFERENTE       [ reduce using rule 38 (condition -> condition OR condition .) ]
  ! MENORIGUAL      [ reduce using rule 38 (condition -> condition OR condition .) ]
  ! MAYORIGUAL      [ reduce using rule 38 (condition -> condition OR condition .) ]


state 118

    (40) condition -> condition MENORQUE condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 40 (condition -> condition MENORQUE condition .)
    PUNTOCOMA       reduce using rule 40 (condition -> condition MENORQUE condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]
  ! OR              [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]
  ! MENORQUE        [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]
  ! MAYORQUE        [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]
  ! IGUAL           [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]
  ! DIFERENTE       [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]
  ! MENORIGUAL      [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]
  ! MAYORIGUAL      [ reduce using rule 40 (condition -> condition MENORQUE condition .) ]


state 119

    (41) condition -> condition MAYORQUE condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 41 (condition -> condition MAYORQUE condition .)
    PUNTOCOMA       reduce using rule 41 (condition -> condition MAYORQUE condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]
  ! OR              [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]
  ! MENORQUE        [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]
  ! MAYORQUE        [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]
  ! IGUAL           [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]
  ! DIFERENTE       [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]
  ! MENORIGUAL      [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]
  ! MAYORIGUAL      [ reduce using rule 41 (condition -> condition MAYORQUE condition .) ]


state 120

    (42) condition -> condition IGUAL condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 42 (condition -> condition IGUAL condition .)
    PUNTOCOMA       reduce using rule 42 (condition -> condition IGUAL condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 42 (condition -> condition IGUAL condition .) ]
  ! OR              [ reduce using rule 42 (condition -> condition IGUAL condition .) ]
  ! MENORQUE        [ reduce using rule 42 (condition -> condition IGUAL condition .) ]
  ! MAYORQUE        [ reduce using rule 42 (condition -> condition IGUAL condition .) ]
  ! IGUAL           [ reduce using rule 42 (condition -> condition IGUAL condition .) ]
  ! DIFERENTE       [ reduce using rule 42 (condition -> condition IGUAL condition .) ]
  ! MENORIGUAL      [ reduce using rule 42 (condition -> condition IGUAL condition .) ]
  ! MAYORIGUAL      [ reduce using rule 42 (condition -> condition IGUAL condition .) ]


state 121

    (43) condition -> condition DIFERENTE condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 43 (condition -> condition DIFERENTE condition .)
    PUNTOCOMA       reduce using rule 43 (condition -> condition DIFERENTE condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]
  ! OR              [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]
  ! MENORQUE        [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]
  ! MAYORQUE        [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]
  ! IGUAL           [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]
  ! DIFERENTE       [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]
  ! MENORIGUAL      [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]
  ! MAYORIGUAL      [ reduce using rule 43 (condition -> condition DIFERENTE condition .) ]


state 122

    (44) condition -> condition MENORIGUAL condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 44 (condition -> condition MENORIGUAL condition .)
    PUNTOCOMA       reduce using rule 44 (condition -> condition MENORIGUAL condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]
  ! OR              [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]
  ! MENORQUE        [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]
  ! MAYORQUE        [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]
  ! IGUAL           [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]
  ! DIFERENTE       [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]
  ! MENORIGUAL      [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]
  ! MAYORIGUAL      [ reduce using rule 44 (condition -> condition MENORIGUAL condition .) ]


state 123

    (45) condition -> condition MAYORIGUAL condition .
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
    PARENTESIS_CIERRE reduce using rule 45 (condition -> condition MAYORIGUAL condition .)
    PUNTOCOMA       reduce using rule 45 (condition -> condition MAYORIGUAL condition .)
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92

  ! AND             [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]
  ! OR              [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]
  ! MENORQUE        [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]
  ! MAYORQUE        [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]
  ! IGUAL           [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]
  ! DIFERENTE       [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]
  ! MENORIGUAL      [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]
  ! MAYORIGUAL      [ reduce using rule 45 (condition -> condition MAYORIGUAL condition .) ]


state 124

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR . expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 136

state 125

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype LLAVE_APERTURA statements
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . datatype statements LLAVE_CIERRE
    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS . LLAVE_APERTURA statements LLAVE_CIERRE
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

    LLAVE_APERTURA  shift and go to state 138
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

    datatype                       shift and go to state 137

state 126

    (22) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 139


state 127

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    statements                     shift and go to state 140
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    datatype                       shift and go to state 13

state 128

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 141


state 129

    (20) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 142


state 130

    (61) parameters -> datatype ID COMA parameters .

    PARENTESIS_CIERRE reduce using rule 61 (parameters -> datatype ID COMA parameters .)
    DOSPUNTOS       reduce using rule 61 (parameters -> datatype ID COMA parameters .)


state 131

    (18) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 143


state 132

    (14) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 144


state 133

    (27) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 145


state 134

    (31) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA . expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA . CORCHETE_CIERRE PUNTOCOMA
    (34) expression_list -> . expression
    (35) expression_list -> . expression COMA expression_list
    (36) expression_list -> . empty
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE
    (69) empty -> .

  ! shift/reduce conflict for CORCHETE_CIERRE resolved as shift
    CORCHETE_CIERRE shift and go to state 146
    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

  ! CORCHETE_CIERRE [ reduce using rule 69 (empty -> .) ]

    expression_list                shift and go to state 147
    expression                     shift and go to state 42
    empty                          shift and go to state 104

state 135

    (23) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE
    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 148


state 136

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression . PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    PUNTOCOMA       shift and go to state 149
    SUMA            shift and go to state 69
    RESTA           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    MODULO          shift and go to state 73


state 137

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . LLAVE_APERTURA statements
    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_APERTURA  shift and go to state 150
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 151
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 138

    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    statements                     shift and go to state 152
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    datatype                       shift and go to state 13

state 139

    (22) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 153
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 140

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 154


state 141

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 155
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 142

    (20) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 156
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 143

    (18) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 157
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 144

    (14) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 158
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 145

    (27) call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .

    FUN             reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    ID              reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    IF              reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    INT             reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    $end            reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 27 (call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA .)


state 146

    (32) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 159


state 147

    (31) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list . CORCHETE_CIERRE PUNTOCOMA

    CORCHETE_CIERRE shift and go to state 160


state 148

    (23) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .
    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE . ELSE LLAVE_APERTURA statements LLAVE_CIERRE

    FUN             reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 23 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ELSE            shift and go to state 161


state 149

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA . condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) condition -> . condition AND condition
    (38) condition -> . condition OR condition
    (39) condition -> . NOT condition
    (40) condition -> . condition MENORQUE condition
    (41) condition -> . condition MAYORQUE condition
    (42) condition -> . condition IGUAL condition
    (43) condition -> . condition DIFERENTE condition
    (44) condition -> . condition MENORIGUAL condition
    (45) condition -> . condition MAYORIGUAL condition
    (46) condition -> . PARENTESIS_APERTURA condition PARENTESIS_CIERRE
    (47) condition -> . boleano
    (48) condition -> . ID
    (49) condition -> . NUMERO
    (50) condition -> . ENTERO
    (67) boleano -> . TRUE
    (68) boleano -> . FALSE

    NOT             shift and go to state 52
    PARENTESIS_APERTURA shift and go to state 50
    ID              shift and go to state 54
    NUMERO          shift and go to state 55
    ENTERO          shift and go to state 56
    TRUE            shift and go to state 57
    FALSE           shift and go to state 58

    condition                      shift and go to state 162
    boleano                        shift and go to state 53

state 150

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements LLAVE_CIERRE
    (16) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    $end            reduce using rule 69 (empty -> .)
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 163
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 151

    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 164


state 152

    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 165


state 153

    (22) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 166


state 154

    (15) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 15 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 155

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 167


state 156

    (20) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 168


state 157

    (18) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 169


state 158

    (14) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 170


state 159

    (32) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .

    FUN             reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    ID              reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    IF              reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    INT             reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    $end            reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 32 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA .)


state 160

    (31) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 171


state 161

    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 172


state 162

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition . PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (37) condition -> condition . AND condition
    (38) condition -> condition . OR condition
    (40) condition -> condition . MENORQUE condition
    (41) condition -> condition . MAYORQUE condition
    (42) condition -> condition . IGUAL condition
    (43) condition -> condition . DIFERENTE condition
    (44) condition -> condition . MENORIGUAL condition
    (45) condition -> condition . MAYORIGUAL condition

    PUNTOCOMA       shift and go to state 173
    AND             shift and go to state 85
    OR              shift and go to state 86
    MENORQUE        shift and go to state 87
    MAYORQUE        shift and go to state 88
    IGUAL           shift and go to state 89
    DIFERENTE       shift and go to state 90
    MENORIGUAL      shift and go to state 91
    MAYORIGUAL      shift and go to state 92


state 163

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements . LLAVE_CIERRE
    (16) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .

  ! shift/reduce conflict for LLAVE_CIERRE resolved as shift
    LLAVE_CIERRE    shift and go to state 174
    FUN             reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    ID              reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    IF              reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    FOR             reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    BRING           reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    VOID            reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    FLOAT           reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    INT             reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    BOOL            reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)
    $end            reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .)

  ! LLAVE_CIERRE    [ reduce using rule 16 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements .) ]


state 164

    (17) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .

    FUN             reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    ID              reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    IF              reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    FOR             reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    BRING           reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    VOID            reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    INT             reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    BOOL            reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    $end            reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 17 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE .)


state 165

    (19) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 19 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE .)


state 166

    (22) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 22 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 167

    (21) fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 21 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 168

    (20) fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 20 (fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 169

    (18) fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 18 (fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 170

    (14) fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 14 (fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 171

    (31) variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .

    FUN             reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    ID              reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    IF              reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    FOR             reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    BRING           reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    VOID            reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    FLOAT           reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    INT             reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    BOOL            reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    $end            reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)
    LLAVE_CIERRE    reduce using rule 31 (variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA .)


state 172

    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    statements                     shift and go to state 175
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10
    datatype                       shift and go to state 13

state 173

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA . ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE

    ID              shift and go to state 176


state 174

    (13) fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 13 (fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE .)


state 175

    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 177


state 176

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID . ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE

    ASIGNAR         shift and go to state 178


state 177

    (24) if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 24 (if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE .)


state 178

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR . expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (51) expression -> . ID
    (52) expression -> . NUMERO
    (53) expression -> . ENTERO
    (54) expression -> . expression SUMA expression
    (55) expression -> . expression RESTA expression
    (56) expression -> . expression MULTIPLICACION expression
    (57) expression -> . expression DIVISION expression
    (58) expression -> . expression MODULO expression
    (59) expression -> . PARENTESIS_APERTURA expression PARENTESIS_CIERRE

    ID              shift and go to state 37
    NUMERO          shift and go to state 43
    ENTERO          shift and go to state 44
    PARENTESIS_APERTURA shift and go to state 38

    expression                     shift and go to state 179

state 179

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression . PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (54) expression -> expression . SUMA expression
    (55) expression -> expression . RESTA expression
    (56) expression -> expression . MULTIPLICACION expression
    (57) expression -> expression . DIVISION expression
    (58) expression -> expression . MODULO expression

    PARENTESIS_CIERRE shift and go to state 180
    SUMA            shift and go to state 69
    RESTA           shift and go to state 70
    MULTIPLICACION  shift and go to state 71
    DIVISION        shift and go to state 72
    MODULO          shift and go to state 73


state 180

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE . LLAVE_APERTURA statements LLAVE_CIERRE

    LLAVE_APERTURA  shift and go to state 181


state 181

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA . statements LLAVE_CIERRE
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statements -> . empty
    (4) statement -> . fun_statement
    (5) statement -> . variable_declaration
    (6) statement -> . assignment
    (7) statement -> . if_statement
    (8) statement -> . for_statement
    (9) statement -> . call_fun
    (10) statement -> . import
    (11) statement -> . empty
    (69) empty -> .
    (13) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (14) fun_statement -> . ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (15) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (16) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements
    (17) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE
    (18) fun_statement -> . FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (19) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE
    (20) fun_statement -> . FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (21) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (22) fun_statement -> . FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE
    (28) variable_declaration -> . datatype ID ASIGNAR expression PUNTOCOMA
    (29) variable_declaration -> . datatype ID ASIGNAR condition PUNTOCOMA
    (30) variable_declaration -> . datatype ID PUNTOCOMA
    (31) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA expression_list CORCHETE_CIERRE PUNTOCOMA
    (32) variable_declaration -> . datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR CORCHETE_APERTURA CORCHETE_CIERRE PUNTOCOMA
    (33) assignment -> . ID ASIGNAR expression PUNTOCOMA
    (23) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (24) if_statement -> . IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE
    (25) for_statement -> . FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE
    (26) call_fun -> . ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (27) call_fun -> . ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA
    (12) import -> . BRING ID PUNTOCOMA
    (63) datatype -> . VOID
    (64) datatype -> . FLOAT
    (65) datatype -> . INT
    (66) datatype -> . BOOL

  ! shift/reduce conflict for FUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for BRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    LLAVE_CIERRE    reduce using rule 69 (empty -> .)
    FUN             shift and go to state 11
    ID              shift and go to state 12
    IF              shift and go to state 14
    FOR             shift and go to state 15
    BRING           shift and go to state 16
    VOID            shift and go to state 17
    FLOAT           shift and go to state 18
    INT             shift and go to state 19
    BOOL            shift and go to state 20

  ! FUN             [ reduce using rule 69 (empty -> .) ]
  ! ID              [ reduce using rule 69 (empty -> .) ]
  ! IF              [ reduce using rule 69 (empty -> .) ]
  ! FOR             [ reduce using rule 69 (empty -> .) ]
  ! BRING           [ reduce using rule 69 (empty -> .) ]
  ! VOID            [ reduce using rule 69 (empty -> .) ]
  ! FLOAT           [ reduce using rule 69 (empty -> .) ]
  ! INT             [ reduce using rule 69 (empty -> .) ]
  ! BOOL            [ reduce using rule 69 (empty -> .) ]

    datatype                       shift and go to state 13
    statements                     shift and go to state 182
    statement                      shift and go to state 2
    empty                          shift and go to state 3
    fun_statement                  shift and go to state 4
    variable_declaration           shift and go to state 5
    assignment                     shift and go to state 6
    if_statement                   shift and go to state 7
    for_statement                  shift and go to state 8
    call_fun                       shift and go to state 9
    import                         shift and go to state 10

state 182

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements . LLAVE_CIERRE

    LLAVE_CIERRE    shift and go to state 183


state 183

    (25) for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .

    FUN             reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    ID              reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    IF              reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FOR             reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BRING           reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    VOID            reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    FLOAT           reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    INT             reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    BOOL            reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    $end            reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)
    LLAVE_CIERRE    reduce using rule 25 (for_statement -> FOR PARENTESIS_APERTURA datatype ID ASIGNAR expression PUNTOCOMA condition PUNTOCOMA ID ASIGNAR expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUN in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for BRING in state 0 resolved as shift
WARNING: shift/reduce conflict for VOID in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 0 resolved as shift
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for FUN in state 2 resolved as shift
WARNING: shift/reduce conflict for ID in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for BRING in state 2 resolved as shift
WARNING: shift/reduce conflict for VOID in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 2 resolved as shift
WARNING: shift/reduce conflict for AND in state 93 resolved as shift
WARNING: shift/reduce conflict for OR in state 93 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 93 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 93 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 93 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 93 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 109 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 109 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 109 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 109 resolved as shift
WARNING: shift/reduce conflict for FUN in state 115 resolved as shift
WARNING: shift/reduce conflict for ID in state 115 resolved as shift
WARNING: shift/reduce conflict for IF in state 115 resolved as shift
WARNING: shift/reduce conflict for FOR in state 115 resolved as shift
WARNING: shift/reduce conflict for BRING in state 115 resolved as shift
WARNING: shift/reduce conflict for VOID in state 115 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 115 resolved as shift
WARNING: shift/reduce conflict for INT in state 115 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 116 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 116 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 117 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 117 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 118 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 118 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 119 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 119 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 120 resolved as shift
WARNING: shift/reduce conflict for OR in state 120 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 120 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 121 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 121 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for AND in state 122 resolved as shift
WARNING: shift/reduce conflict for OR in state 122 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 122 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 122 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 122 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for AND in state 123 resolved as shift
WARNING: shift/reduce conflict for OR in state 123 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 123 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 123 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 123 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for FUN in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for IF in state 127 resolved as shift
WARNING: shift/reduce conflict for FOR in state 127 resolved as shift
WARNING: shift/reduce conflict for BRING in state 127 resolved as shift
WARNING: shift/reduce conflict for VOID in state 127 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 127 resolved as shift
WARNING: shift/reduce conflict for INT in state 127 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 127 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_CIERRE in state 134 resolved as shift
WARNING: shift/reduce conflict for FUN in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for FOR in state 137 resolved as shift
WARNING: shift/reduce conflict for BRING in state 137 resolved as shift
WARNING: shift/reduce conflict for VOID in state 137 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 137 resolved as shift
WARNING: shift/reduce conflict for INT in state 137 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 137 resolved as shift
WARNING: shift/reduce conflict for FUN in state 138 resolved as shift
WARNING: shift/reduce conflict for ID in state 138 resolved as shift
WARNING: shift/reduce conflict for IF in state 138 resolved as shift
WARNING: shift/reduce conflict for FOR in state 138 resolved as shift
WARNING: shift/reduce conflict for BRING in state 138 resolved as shift
WARNING: shift/reduce conflict for VOID in state 138 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 138 resolved as shift
WARNING: shift/reduce conflict for INT in state 138 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 138 resolved as shift
WARNING: shift/reduce conflict for FUN in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for IF in state 139 resolved as shift
WARNING: shift/reduce conflict for FOR in state 139 resolved as shift
WARNING: shift/reduce conflict for BRING in state 139 resolved as shift
WARNING: shift/reduce conflict for VOID in state 139 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 139 resolved as shift
WARNING: shift/reduce conflict for INT in state 139 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 139 resolved as shift
WARNING: shift/reduce conflict for FUN in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 141 resolved as shift
WARNING: shift/reduce conflict for IF in state 141 resolved as shift
WARNING: shift/reduce conflict for FOR in state 141 resolved as shift
WARNING: shift/reduce conflict for BRING in state 141 resolved as shift
WARNING: shift/reduce conflict for VOID in state 141 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 141 resolved as shift
WARNING: shift/reduce conflict for INT in state 141 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 141 resolved as shift
WARNING: shift/reduce conflict for FUN in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for IF in state 142 resolved as shift
WARNING: shift/reduce conflict for FOR in state 142 resolved as shift
WARNING: shift/reduce conflict for BRING in state 142 resolved as shift
WARNING: shift/reduce conflict for VOID in state 142 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 142 resolved as shift
WARNING: shift/reduce conflict for INT in state 142 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 142 resolved as shift
WARNING: shift/reduce conflict for FUN in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for IF in state 143 resolved as shift
WARNING: shift/reduce conflict for FOR in state 143 resolved as shift
WARNING: shift/reduce conflict for BRING in state 143 resolved as shift
WARNING: shift/reduce conflict for VOID in state 143 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 143 resolved as shift
WARNING: shift/reduce conflict for INT in state 143 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 143 resolved as shift
WARNING: shift/reduce conflict for FUN in state 144 resolved as shift
WARNING: shift/reduce conflict for ID in state 144 resolved as shift
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for FOR in state 144 resolved as shift
WARNING: shift/reduce conflict for BRING in state 144 resolved as shift
WARNING: shift/reduce conflict for VOID in state 144 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 144 resolved as shift
WARNING: shift/reduce conflict for INT in state 144 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 144 resolved as shift
WARNING: shift/reduce conflict for FUN in state 150 resolved as shift
WARNING: shift/reduce conflict for ID in state 150 resolved as shift
WARNING: shift/reduce conflict for IF in state 150 resolved as shift
WARNING: shift/reduce conflict for FOR in state 150 resolved as shift
WARNING: shift/reduce conflict for BRING in state 150 resolved as shift
WARNING: shift/reduce conflict for VOID in state 150 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 150 resolved as shift
WARNING: shift/reduce conflict for INT in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 150 resolved as shift
WARNING: shift/reduce conflict for LLAVE_CIERRE in state 163 resolved as shift
WARNING: shift/reduce conflict for FUN in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for FOR in state 172 resolved as shift
WARNING: shift/reduce conflict for BRING in state 172 resolved as shift
WARNING: shift/reduce conflict for VOID in state 172 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 172 resolved as shift
WARNING: shift/reduce conflict for INT in state 172 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 172 resolved as shift
WARNING: shift/reduce conflict for FUN in state 181 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for IF in state 181 resolved as shift
WARNING: shift/reduce conflict for FOR in state 181 resolved as shift
WARNING: shift/reduce conflict for BRING in state 181 resolved as shift
WARNING: shift/reduce conflict for VOID in state 181 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 181 resolved as shift
WARNING: shift/reduce conflict for INT in state 181 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 181 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (statements -> statement)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (statements -> empty)
WARNING: rejected rule (statement -> empty) in state 3
WARNING: reduce/reduce conflict in state 41 resolved using rule (expression_list -> empty)
WARNING: rejected rule (parameters -> empty) in state 41
WARNING: reduce/reduce conflict in state 76 resolved using rule (condition -> ID)
WARNING: rejected rule (expression -> ID) in state 76
WARNING: reduce/reduce conflict in state 79 resolved using rule (condition -> NUMERO)
WARNING: rejected rule (expression -> NUMERO) in state 79
WARNING: reduce/reduce conflict in state 80 resolved using rule (condition -> ENTERO)
WARNING: rejected rule (expression -> ENTERO) in state 80
WARNING: Rule (statement -> empty) is never reduced
