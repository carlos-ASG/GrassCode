
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONAND ASIGNAR BOOL BRING CATCH COMA CONST CORCHETE_APERTURA CORCHETE_CIERRE DIFERENTE DIVIGUAL DIVISION DOSPUNTOS ELSE ENTERO FALSE FLOAT FOR FUN ID IF IGUAL INIT INT LLAVE_APERTURA LLAVE_CIERRE MASIGUAL MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOSIGUAL MODULO MODULOINCREMENTO MULTIGUAL MULTIPLICACION NOT NUMERO OR PARENTESIS_APERTURA PARENTESIS_CIERRE PUNTO PUNTOCOMA RESTA RETURN SUMA TRUE TRY VOID WHILE\n    statements : statement\n               | statement statements\n               | empty\n    \n    statement : fun_statement\n              | variable_declaration\n              | assignment\n              | if_statement\n              | for_statement\n              | call_fun\n              | import\n              | empty\n              | leer_arreglo\n              | while_statement\n    \n    import : BRING ID PUNTOCOMA\n    \n    fun_statement : FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    fun_statement : ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    fun_statement : FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    fun_statement : FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements\n    \n    fun_statement : FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE\n    \n    fun_statement : FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    fun_statement : FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    fun_statement : FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    fun_statement : FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    fun_statement : FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n                 | IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n                 | PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n                 | IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n                 | IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE\n                 | IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE\n                 | IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements\n                 | IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE\n    \n    if_statement : IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements\n    \n    for_statement : FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    call_fun : ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA\n             | ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA\n    \n    call_fun : PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA\n             | PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA\n    \n    call_fun : ID expression_list PARENTESIS_CIERRE PUNTOCOMA\n             | ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA\n    \n    call_fun : ID PARENTESIS_APERTURA expression_list PUNTOCOMA\n             | ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA\n    \n    call_fun : ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA\n    \n    call_fun : ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE\n             | ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE\n    \n    variable_declaration : datatype ID ASIGNAR expression PUNTOCOMA\n                         | datatype ID ASIGNAR condition PUNTOCOMA\n                         | datatype ID PUNTOCOMA\n                         | datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA\n    \n    variable_declaration : ID PUNTOCOMA\n                         | CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA\n    \n    variable_declaration : datatype ASIGNAR expression PUNTOCOMA\n                         | datatype ASIGNAR condition PUNTOCOMA\n                         | datatype PUNTOCOMA\n    \n    variable_declaration : datatype ID expression PUNTOCOMA\n                         | datatype ID condition PUNTOCOMA\n    \n    variable_declaration : datatype ID ASIGNAR expression\n                         | datatype ID ASIGNAR condition\n                         | datatype ID\n                         | datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list\n    \n    variable_declaration : datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA\n    \n    variable_declaration : datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA\n    \n    variable_declaration : datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA\n    \n    variable_declaration : datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA\n    \n    variable_declaration : datatype ID ASIGNAR PUNTOCOMA\n                         | datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA\n    \n    assignment : ID ASIGNAR expression PUNTOCOMA\n               | ID ASIGNAR condition PUNTOCOMA\n    \n    assignment : ASIGNAR expression PUNTOCOMA\n    \n    assignment : ID expression PUNTOCOMA\n    \n    assignment : ID ASIGNAR PUNTOCOMA\n    \n    assignment : ID ASIGNAR expression\n    \n    expression_list : expression\n                    | expression COMA expression_list\n                    | empty\n    \n    leer_arreglo : ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA\n    \n    while_statement : WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    while_statement : WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    while_statement : WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE\n    \n    while_statement : WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE\n    \n    condition : condition AND condition\n              | condition OR condition\n              | NOT condition\n              | condition MENORQUE condition\n              | condition MAYORQUE condition\n              | condition IGUAL condition\n              | condition DIFERENTE condition\n              | condition MENORIGUAL condition\n              | condition MAYORIGUAL condition\n              | PARENTESIS_APERTURA condition PARENTESIS_CIERRE\n              | boleano\n              | ID\n              | NUMERO\n              | ENTERO\n              | call_fun\n    \n    expression : ID\n               | NUMERO\n               | ENTERO\n               | expression SUMA expression\n               | expression RESTA expression\n               | expression MULTIPLICACION expression\n               | expression DIVISION expression\n               | expression MODULO expression\n               | expression MASIGUAL expression\n               | expression MENOSIGUAL expression\n               | expression DIVIGUAL expression\n               | expression MULTIGUAL condition\n               | PARENTESIS_APERTURA expression PARENTESIS_CIERRE\n    \n    parameters : datatype ID\n               | datatype ID COMA parameters\n               | empty\n    \n    datatype : VOID\n             | FLOAT\n             | INT\n             | BOOL\n    \n    boleano : TRUE\n            | FALSE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,204,208,210,211,212,218,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,268,270,271,278,279,283,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[-126,0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,-43,-84,-54,-55,-126,-126,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,-44,-57,-25,-85,-126,-17,-18,-19,-21,-24,-23,-22,-20,-16,-126,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'FUN':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,13,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,13,13,13,13,13,13,13,-43,-84,-54,-55,-126,13,13,13,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,13,13,13,13,13,13,13,-44,-57,-25,-85,13,-17,13,13,13,13,13,13,13,13,13,-18,-19,-21,-24,-23,-22,-20,-16,13,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,21,22,23,24,25,26,27,28,31,32,33,34,37,38,39,40,41,42,45,46,47,50,51,52,53,54,55,56,57,58,60,61,62,64,65,66,67,70,74,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,103,105,107,108,109,110,111,112,113,114,116,117,118,119,121,125,128,134,136,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,204,208,210,211,212,218,223,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,29,31,47,54,31,64,68,69,64,-120,-121,-122,-123,-2,-104,31,-58,81,100,31,-105,-106,-83,105,64,-99,31,-103,-81,-124,-125,81,81,-62,126,127,31,130,47,31,-101,-102,135,47,142,31,-80,-79,-101,-102,81,-78,31,31,31,31,31,31,31,31,64,31,31,31,105,31,64,64,64,64,64,64,64,64,-91,47,31,81,-56,184,-77,64,31,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,31,-98,14,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,31,31,31,31,31,14,14,14,14,14,14,14,-43,-84,-54,-55,31,14,31,14,14,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,14,14,14,14,14,14,14,-44,-57,-25,-85,14,-17,14,14,14,14,14,14,14,14,14,-18,-19,-21,-24,-23,-22,-20,-16,14,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'CORCHETE_APERTURA':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,67,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,38,57,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,18,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,18,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,18,18,18,18,18,18,18,-43,-84,-54,-55,-126,18,18,18,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,18,18,18,18,18,18,18,-44,-57,-25,-85,18,-17,18,18,18,18,18,18,18,18,18,-18,-19,-21,-24,-23,-22,-20,-16,18,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'ASIGNAR':([0,2,3,4,5,6,7,8,9,10,11,12,14,16,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,125,126,127,128,130,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,34,55,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,119,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,185,186,187,-77,188,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,17,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,212,17,17,17,17,17,17,17,-43,-84,-54,-55,-126,17,17,17,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,17,17,17,17,17,17,17,-44,-57,-25,-85,17,-17,17,17,17,17,17,17,17,17,17,-18,-19,-21,-24,-23,-22,-20,-16,17,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,19,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,19,19,19,19,19,19,19,-43,-84,-54,-55,-126,19,19,19,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,19,19,19,19,19,19,19,-44,-57,-25,-85,19,-17,19,19,19,19,19,19,19,19,19,-18,-19,-21,-24,-23,-22,-20,-16,19,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'PARENTESIS_APERTURA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,20,23,24,25,26,27,28,29,31,32,33,34,37,38,39,40,41,42,45,46,47,50,51,52,53,54,55,56,60,62,64,65,66,68,70,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,103,105,107,108,109,110,111,112,113,114,116,117,118,119,121,128,134,136,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,195,196,197,204,208,210,211,212,218,223,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,30,32,42,60,62,67,70,-120,-121,-122,-123,-2,72,-104,60,-58,87,101,60,-105,-106,-83,103,117,-99,118,-103,-81,-124,-125,87,87,-62,60,42,118,-101,-102,136,42,118,-80,-79,-101,-102,87,-78,60,60,60,60,60,60,60,60,117,60,162,60,103,118,117,117,117,117,117,117,117,117,-91,42,60,87,-56,-77,117,60,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,60,-98,15,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,60,60,60,60,60,15,15,15,15,15,15,15,-43,-84,-54,-55,60,15,60,15,15,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,15,15,15,15,15,15,15,-44,-57,-25,-85,15,-17,15,15,15,15,15,15,15,15,15,-18,-19,-21,-24,-23,-22,-20,-16,15,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,20,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,20,20,20,20,20,20,20,-43,-84,-54,-55,-126,20,20,20,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,20,20,20,20,20,20,20,-44,-57,-25,-85,20,-17,20,20,20,20,20,20,20,20,20,-18,-19,-21,-24,-23,-22,-20,-16,20,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'PUNTO':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,19,23,24,25,26,27,28,31,33,34,39,40,41,42,45,46,47,50,51,52,53,54,55,56,62,64,65,66,70,81,82,83,85,86,87,88,97,98,103,105,107,108,109,110,111,112,113,114,116,117,119,121,128,134,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,37,21,21,21,-120,-121,-122,-123,-2,-104,-58,21,-105,-106,-83,21,21,-99,37,-103,-81,-124,-125,21,21,-62,21,37,-101,-102,21,37,-80,-79,-101,-102,21,-78,21,-126,21,37,21,21,21,21,21,21,21,21,-91,21,21,-56,-77,21,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,21,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,21,21,21,21,21,21,21,-43,-84,-54,-55,-126,21,21,21,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,21,21,21,21,21,21,21,-44,-57,-25,-85,21,-17,21,21,21,21,21,21,21,21,21,-18,-19,-21,-24,-23,-22,-20,-16,21,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'BRING':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,22,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,22,22,22,22,22,22,22,-43,-84,-54,-55,-126,22,22,22,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,22,22,22,22,22,22,22,-44,-57,-25,-85,22,-17,22,22,22,22,22,22,22,22,22,-18,-19,-21,-24,-23,-22,-20,-16,22,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,210,211,212,218,225,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,23,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,23,23,23,23,23,23,23,-43,-84,-54,-55,-126,23,23,23,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,23,23,23,23,23,23,23,-44,-57,-25,-85,23,-17,23,23,23,23,23,23,23,23,23,-18,-19,-21,-24,-23,-22,-20,-16,23,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'VOID':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,29,30,31,32,33,39,40,41,46,50,51,52,53,54,56,64,65,66,67,72,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,198,199,200,201,202,203,204,208,210,211,212,218,225,229,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,24,24,-104,24,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,24,24,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,24,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,24,24,24,24,24,24,24,24,24,24,24,24,24,-43,-84,-54,-55,-126,24,24,24,24,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,24,24,24,24,24,24,24,-44,-57,-25,-85,24,-17,24,24,24,24,24,24,24,24,24,-18,-19,-21,-24,-23,-22,-20,-16,24,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,29,30,31,32,33,39,40,41,46,50,51,52,53,54,56,64,65,66,67,72,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,198,199,200,201,202,203,204,208,210,211,212,218,225,229,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,25,25,-104,25,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,25,25,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,25,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,25,25,25,25,25,25,25,25,25,25,25,25,25,-43,-84,-54,-55,-126,25,25,25,25,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,25,25,25,25,25,25,25,-44,-57,-25,-85,25,-17,25,25,25,25,25,25,25,25,25,-18,-19,-21,-24,-23,-22,-20,-16,25,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,29,30,31,32,33,39,40,41,46,50,51,52,53,54,56,64,65,66,67,72,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,198,199,200,201,202,203,204,208,210,211,212,218,225,229,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,26,26,-104,26,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,26,26,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,26,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,26,26,26,26,26,26,26,26,26,26,26,26,26,-43,-84,-54,-55,-126,26,26,26,26,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,26,26,26,26,26,26,26,-44,-57,-25,-85,26,-17,26,26,26,26,26,26,26,26,26,-18,-19,-21,-24,-23,-22,-20,-16,26,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,29,30,31,32,33,39,40,41,46,50,51,52,53,54,56,64,65,66,67,72,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,198,199,200,201,202,203,204,208,210,211,212,218,225,229,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,260,261,262,264,265,266,267,268,270,271,278,279,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,27,27,-104,27,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,27,27,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,27,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,27,27,27,27,27,27,27,27,27,27,27,27,27,-43,-84,-54,-55,-126,27,27,27,27,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,-37,-35,-33,-31,-29,-46,-88,-87,-86,27,27,27,27,27,27,27,-44,-57,-25,-85,27,-17,27,27,27,27,27,27,27,27,27,-18,-19,-21,-24,-23,-22,-20,-16,27,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'LLAVE_CIERRE':([2,3,4,5,6,7,8,9,10,11,12,24,25,26,27,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,192,195,196,197,204,208,209,210,211,212,218,219,220,221,222,225,226,227,228,231,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-120,-121,-122,-123,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,-126,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,-126,-126,-126,-126,-126,-126,-126,-43,-84,241,-54,-55,-126,-126,250,251,252,253,-126,257,258,259,-126,-53,-50,-48,-51,-27,-68,-74,-72,-71,-70,-69,-59,271,-35,-33,-31,-29,-46,278,-88,-87,-86,-126,-126,-126,283,-126,-126,-126,-126,-44,-57,-25,-85,-126,298,299,300,-17,301,302,303,304,-126,-126,-126,-126,-126,-126,-126,-126,-126,315,-19,-21,-24,-23,-22,-20,-16,316,317,-126,319,320,321,322,323,324,325,-15,-28,-39,326,-40,-38,-36,-34,-32,-30,-42,-26,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,28,31,33,39,40,41,46,50,51,52,53,54,56,64,65,66,81,82,83,85,86,88,98,116,121,128,137,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,204,208,210,211,212,218,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,257,258,259,268,270,271,278,279,283,297,298,299,300,301,302,303,304,307,315,316,317,318,319,320,321,322,323,324,325,326,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-12,-13,-2,-104,-58,-105,-106,-83,-99,-103,-81,-124,-125,-67,-62,-100,-101,-102,-100,-80,-79,-101,-102,-78,-126,-91,-56,-77,-14,-52,-49,-116,-75,-76,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,-43,-84,-54,-55,-126,-126,-53,-50,-48,-51,269,-68,-74,-72,-71,-70,-69,-59,272,273,274,275,276,-46,-88,-87,-86,-44,-57,290,-85,-126,-17,-18,-19,-21,-24,-23,-22,-20,-16,-126,-15,-28,-39,-41,-40,-38,-36,-34,-32,-30,-42,-26,]),'PUNTOCOMA':([14,16,24,25,26,27,31,32,34,35,39,40,41,46,50,51,52,53,54,59,64,65,66,69,78,79,80,81,82,84,85,86,98,99,115,116,118,119,120,122,123,124,135,145,146,147,151,152,153,154,155,156,157,158,159,160,161,162,165,166,168,169,170,171,172,173,174,175,176,177,179,184,185,186,187,188,193,204,205,206,207,212,213,214,215,216,217,224,237,238,239,240,242,255,268,],[33,56,-120,-121,-122,-123,-104,-126,83,88,-105,-106,-83,-99,-103,-81,-124,-125,121,128,-100,-101,-102,137,146,-81,-83,-100,148,149,-101,-102,-126,161,176,-91,-126,178,180,181,182,183,33,204,-49,-116,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-126,208,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,210,211,-126,-126,-126,-126,-126,223,-43,238,239,240,243,244,245,246,247,248,255,268,-50,-48,-51,270,-46,-44,]),'NUMERO':([14,15,17,19,23,31,32,33,34,38,39,40,41,42,45,46,47,50,51,52,53,54,55,56,60,62,64,65,66,70,81,85,86,87,89,90,91,92,93,94,95,96,97,98,100,101,103,105,107,108,109,110,111,112,113,114,116,117,118,119,121,134,136,145,146,147,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,204,210,211,212,223,237,238,239,240,242,243,244,245,246,247,248,255,268,270,],[39,48,39,65,65,-104,39,-58,85,39,-105,-106,-83,48,65,-99,39,-103,-81,-124,-125,85,85,-62,39,48,39,-101,-102,48,39,-101,-102,85,39,39,39,39,39,39,39,39,65,39,39,39,48,39,65,65,65,65,65,65,65,65,-91,48,39,85,-56,65,39,-52,-49,-116,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,39,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,39,39,39,39,39,-43,-54,-55,39,39,-53,-50,-48,-51,-68,-74,-72,-71,-70,-69,-59,-46,-44,-57,]),'ENTERO':([14,15,17,19,23,31,32,33,34,38,39,40,41,42,45,46,47,50,51,52,53,54,55,56,60,62,64,65,66,70,81,85,86,87,89,90,91,92,93,94,95,96,97,98,100,101,103,105,107,108,109,110,111,112,113,114,116,117,118,119,121,134,136,145,146,147,151,152,153,154,155,156,157,158,159,160,161,162,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,204,210,211,212,223,237,238,239,240,242,243,244,245,246,247,248,255,268,270,],[40,49,40,66,66,-104,40,-58,86,40,-105,-106,-83,49,66,-99,40,-103,-81,-124,-125,86,86,-62,40,49,40,-101,-102,49,40,-101,-102,86,40,40,40,40,40,40,40,40,66,40,40,40,49,40,66,66,66,66,66,66,66,66,-91,49,40,86,-56,66,40,-52,-49,-116,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,40,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,40,40,40,40,40,-43,-54,-55,40,40,-53,-50,-48,-51,-68,-74,-72,-71,-70,-69,-59,-46,-44,-57,]),'PARENTESIS_CIERRE':([14,15,29,30,31,32,35,36,39,40,41,42,43,44,46,47,48,49,50,51,52,53,62,63,64,65,66,70,71,72,73,75,76,77,78,79,80,81,85,86,87,98,100,101,103,104,105,116,117,118,129,131,136,138,140,142,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,168,169,170,171,172,173,174,175,176,189,194,195,201,204,205,234,237,238,239,240,254,255,268,],[-126,-126,-126,-126,-104,-126,-81,99,-105,-106,-83,-126,106,115,-99,-100,-101,-102,-103,-81,-124,-125,132,133,-100,-101,-102,-126,139,-126,141,-119,143,144,145,147,-83,-100,-101,-102,-126,-126,-126,-126,-126,166,-100,-91,-126,-126,147,189,-126,195,198,-117,-52,-49,-116,147,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-126,206,207,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-98,224,-98,-126,-43,237,-118,-53,-50,-48,-51,277,-46,-44,]),'NOT':([15,19,23,31,33,34,39,40,41,42,45,46,50,51,52,53,54,55,56,62,64,65,66,70,81,85,86,87,97,98,103,107,108,109,110,111,112,113,114,116,117,119,121,134,145,146,147,151,152,153,154,155,156,157,158,159,160,161,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,204,210,211,212,237,238,239,240,242,243,244,245,246,247,248,255,268,270,],[45,45,45,-104,-58,45,-105,-106,-83,45,45,-99,-103,-81,-124,-125,45,45,-62,45,-100,-101,-102,45,-100,-101,-102,45,45,-126,45,45,45,45,45,45,45,45,45,-91,45,45,-56,45,-52,-49,-116,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,-43,-54,-55,-126,-53,-50,-48,-51,-68,-74,-72,-71,-70,-69,-59,-46,-44,-57,]),'TRUE':([15,19,23,31,33,34,39,40,41,42,45,46,50,51,52,53,54,55,56,62,64,65,66,70,81,85,86,87,97,98,103,107,108,109,110,111,112,113,114,116,117,119,121,134,145,146,147,151,152,153,154,155,156,157,158,159,160,161,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,204,210,211,212,237,238,239,240,242,243,244,245,246,247,248,255,268,270,],[52,52,52,-104,-58,52,-105,-106,-83,52,52,-99,-103,-81,-124,-125,52,52,-62,52,-100,-101,-102,52,-100,-101,-102,52,52,-126,52,52,52,52,52,52,52,52,52,-91,52,52,-56,52,-52,-49,-116,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,-43,-54,-55,-126,-53,-50,-48,-51,-68,-74,-72,-71,-70,-69,-59,-46,-44,-57,]),'FALSE':([15,19,23,31,33,34,39,40,41,42,45,46,50,51,52,53,54,55,56,62,64,65,66,70,81,85,86,87,97,98,103,107,108,109,110,111,112,113,114,116,117,119,121,134,145,146,147,151,152,153,154,155,156,157,158,159,160,161,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,204,210,211,212,237,238,239,240,242,243,244,245,246,247,248,255,268,270,],[53,53,53,-104,-58,53,-105,-106,-83,53,53,-99,-103,-81,-124,-125,53,53,-62,53,-100,-101,-102,53,-100,-101,-102,53,53,-126,53,53,53,53,53,53,53,53,53,-91,53,53,-56,53,-52,-49,-116,-107,-108,-109,-110,-111,-112,-113,-114,-115,-82,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-65,-73,-66,-63,-64,-60,-61,-43,-54,-55,-126,-53,-50,-48,-51,-68,-74,-72,-71,-70,-69,-59,-46,-44,-57,]),'CORCHETE_CIERRE':([16,18,24,25,26,27,31,39,40,46,50,52,53,57,64,65,66,102,116,145,146,147,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,204,237,238,239,240,255,268,],[58,61,-120,-121,-122,-123,-104,-105,-106,-99,-103,-124,-125,125,-100,-101,-102,165,-91,-52,-49,-116,-107,-108,-109,-110,-111,-112,-113,-114,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-43,-53,-50,-48,-51,-46,-44,]),'LLAVE_APERTURA':([24,25,26,27,46,47,48,49,50,52,53,64,65,66,106,116,131,132,133,138,139,145,146,161,166,168,169,170,171,172,173,174,175,176,189,195,198,204,229,230,232,233,235,236,237,238,239,240,255,260,268,269,271,272,273,274,275,276,277,290,],[-120,-121,-122,-123,-99,-100,-101,-102,-103,-124,-125,-100,-101,-102,167,-91,190,191,192,196,197,-52,-49,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,218,225,231,-43,261,262,264,265,266,267,-53,-50,-48,-51,-46,279,-44,288,289,291,292,293,294,295,296,307,]),'SUMA':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,89,-105,-106,-99,-104,-105,-106,-103,89,-124,-125,89,-100,-101,-102,89,-104,89,-105,-106,89,-104,-91,89,89,89,-52,-49,-116,89,-107,-108,-109,-110,89,89,89,89,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,89,-43,-53,-50,-48,-51,89,-46,-44,]),'RESTA':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,90,-105,-106,-99,-104,-105,-106,-103,90,-124,-125,90,-100,-101,-102,90,-104,90,-105,-106,90,-104,-91,90,90,90,-52,-49,-116,90,-107,-108,-109,-110,90,90,90,90,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,90,-43,-53,-50,-48,-51,90,-46,-44,]),'MULTIPLICACION':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,91,-105,-106,-99,-104,-105,-106,-103,91,-124,-125,91,-100,-101,-102,91,-104,91,-105,-106,91,-104,-91,91,91,91,-52,-49,-116,91,91,91,-109,-110,91,91,91,91,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,91,-43,-53,-50,-48,-51,91,-46,-44,]),'DIVISION':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,92,-105,-106,-99,-104,-105,-106,-103,92,-124,-125,92,-100,-101,-102,92,-104,92,-105,-106,92,-104,-91,92,92,92,-52,-49,-116,92,92,92,-109,-110,92,92,92,92,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,92,-43,-53,-50,-48,-51,92,-46,-44,]),'MODULO':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,93,-105,-106,-99,-104,-105,-106,-103,93,-124,-125,93,-100,-101,-102,93,-104,93,-105,-106,93,-104,-91,93,93,93,-52,-49,-116,93,-107,-108,-109,-110,93,93,93,93,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,93,-43,-53,-50,-48,-51,93,-46,-44,]),'MASIGUAL':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,94,-105,-106,-99,-104,-105,-106,-103,94,-124,-125,94,-100,-101,-102,94,-104,94,-105,-106,94,-104,-91,94,94,94,-52,-49,-116,94,-107,-108,-109,-110,94,94,94,94,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,94,-43,-53,-50,-48,-51,94,-46,-44,]),'MENOSIGUAL':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,95,-105,-106,-99,-104,-105,-106,-103,95,-124,-125,95,-100,-101,-102,95,-104,95,-105,-106,95,-104,-91,95,95,95,-52,-49,-116,95,-107,-108,-109,-110,95,95,95,95,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,95,-43,-53,-50,-48,-51,95,-46,-44,]),'DIVIGUAL':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,96,-105,-106,-99,-104,-105,-106,-103,96,-124,-125,96,-100,-101,-102,96,-104,96,-105,-106,96,-104,-91,96,96,96,-52,-49,-116,96,-107,-108,-109,-110,96,96,96,96,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,96,-43,-53,-50,-48,-51,96,-46,-44,]),'MULTIGUAL':([31,35,39,40,46,47,48,49,50,51,52,53,59,64,65,66,79,81,82,85,86,102,105,116,120,123,129,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,177,204,237,238,239,240,254,255,268,],[-104,97,-105,-106,-99,-104,-105,-106,-103,97,-124,-125,97,-100,-101,-102,97,-104,97,-105,-106,97,-104,-91,97,97,97,-52,-49,-116,97,-107,-108,-109,-110,97,97,97,97,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,97,-43,-53,-50,-48,-51,97,-46,-44,]),'COMA':([31,35,39,40,46,47,48,49,50,51,52,53,64,65,66,79,81,85,86,105,116,142,145,146,147,150,151,152,153,154,155,156,157,158,159,161,166,168,169,170,171,172,173,174,175,176,204,237,238,239,240,255,268,],[-104,98,-105,-106,-99,-104,-105,-106,-103,98,-124,-125,-100,-101,-102,98,-104,-105,-106,-104,-91,201,-52,-49,-116,98,-107,-108,-109,-110,-111,-112,-113,-114,-115,-47,-98,-89,-90,-92,-93,-94,-95,-96,-97,-45,-43,-53,-50,-48,-51,-46,-44,]),'AND':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[107,-99,-100,-101,-102,-103,-124,-125,107,-100,-101,-102,107,-100,107,-101,-102,107,-100,107,107,107,107,107,-52,-49,107,-47,-98,107,107,107,107,107,107,107,107,-45,107,-98,107,-98,-43,-53,-50,-48,-51,-46,-44,]),'OR':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[108,-99,-100,-101,-102,-103,-124,-125,108,-100,-101,-102,108,-100,108,-101,-102,108,-100,108,108,108,108,108,-52,-49,108,-47,-98,108,108,108,108,108,108,108,108,-45,108,-98,108,-98,-43,-53,-50,-48,-51,-46,-44,]),'MENORQUE':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[109,-99,-100,-101,-102,-103,-124,-125,109,-100,-101,-102,109,-100,109,-101,-102,109,-100,109,109,109,109,109,-52,-49,109,-47,-98,109,109,109,109,109,109,109,109,-45,109,-98,109,-98,-43,-53,-50,-48,-51,-46,-44,]),'MAYORQUE':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[110,-99,-100,-101,-102,-103,-124,-125,110,-100,-101,-102,110,-100,110,-101,-102,110,-100,110,110,110,110,110,-52,-49,110,-47,-98,110,110,110,110,110,110,110,110,-45,110,-98,110,-98,-43,-53,-50,-48,-51,-46,-44,]),'IGUAL':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[111,-99,-100,-101,-102,-103,-124,-125,111,-100,-101,-102,111,-100,111,-101,-102,111,-100,111,111,111,111,111,-52,-49,111,-47,-98,111,111,111,111,111,111,111,111,-45,111,-98,111,-98,-43,-53,-50,-48,-51,-46,-44,]),'DIFERENTE':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[112,-99,-100,-101,-102,-103,-124,-125,112,-100,-101,-102,112,-100,112,-101,-102,112,-100,112,112,112,112,112,-52,-49,112,-47,-98,112,112,112,112,112,112,112,112,-45,112,-98,112,-98,-43,-53,-50,-48,-51,-46,-44,]),'MENORIGUAL':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[113,-99,-100,-101,-102,-103,-124,-125,113,-100,-101,-102,113,-100,113,-101,-102,113,-100,113,113,113,113,113,-52,-49,113,-47,-98,113,113,113,113,113,113,113,113,-45,113,-98,113,-98,-43,-53,-50,-48,-51,-46,-44,]),'MAYORIGUAL':([43,46,47,48,49,50,52,53,63,64,65,66,71,81,84,85,86,104,105,116,122,124,131,138,145,146,159,161,166,168,169,170,171,172,173,174,175,176,179,189,193,195,204,237,238,239,240,255,268,],[114,-99,-100,-101,-102,-103,-124,-125,114,-100,-101,-102,114,-100,114,-101,-102,114,-100,114,114,114,114,114,-52,-49,114,-47,-98,114,114,114,114,114,114,114,114,-45,114,-98,114,-98,-43,-53,-50,-48,-51,-46,-44,]),'DOSPUNTOS':([72,75,140,141,142,143,144,198,201,234,],[-126,-119,199,200,-117,202,203,229,-126,-118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[1,28,209,219,220,221,222,226,227,228,249,256,263,280,281,282,284,285,286,287,297,305,306,308,309,310,311,312,313,314,318,]),'statement':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'empty':([0,2,14,15,29,30,32,42,47,62,64,70,72,81,87,98,100,101,103,105,117,118,136,162,167,184,185,186,187,188,189,190,191,192,195,196,197,201,212,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[3,3,41,41,75,75,80,41,41,41,41,41,75,41,41,41,41,41,41,41,41,41,41,41,3,41,41,41,41,41,3,3,3,3,3,3,3,75,41,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'fun_statement':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'variable_declaration':([0,2,67,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[5,5,134,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if_statement':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'for_statement':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'call_fun':([0,2,15,19,23,34,42,45,54,55,62,70,87,97,103,107,108,109,110,111,112,113,114,117,119,134,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[9,9,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'import':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'leer_arreglo':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'while_statement':([0,2,167,189,190,191,192,195,196,197,218,225,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'datatype':([0,2,29,30,32,67,72,167,189,190,191,192,195,196,197,198,199,200,201,202,203,218,225,229,231,260,261,262,264,265,266,267,279,288,289,290,291,292,293,294,295,296,307,],[16,16,74,74,74,16,74,16,16,16,16,16,16,16,16,230,232,233,74,235,236,16,16,260,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression':([14,15,17,32,34,38,42,47,54,55,60,62,64,70,81,87,89,90,91,92,93,94,95,96,98,100,101,103,105,117,118,119,136,162,184,185,186,187,188,212,223,],[35,51,59,79,82,102,79,51,120,123,129,51,51,51,51,150,151,152,153,154,155,156,157,158,51,51,51,150,51,51,79,177,51,79,51,51,51,51,51,51,254,]),'expression_list':([14,15,32,42,47,62,64,70,81,87,98,100,101,103,105,117,118,136,162,184,185,186,187,188,212,],[36,44,78,44,36,44,36,44,36,44,160,163,164,44,36,44,78,194,205,213,214,215,216,217,242,]),'condition':([15,19,23,34,42,45,54,55,62,70,87,97,103,107,108,109,110,111,112,113,114,117,119,134,],[43,63,71,84,104,116,122,124,131,138,104,159,104,168,169,170,171,172,173,174,175,104,179,193,]),'boleano':([15,19,23,34,42,45,54,55,62,70,87,97,103,107,108,109,110,111,112,113,114,117,119,134,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'parameters':([29,30,32,72,201,],[73,76,77,140,234,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','sintactico.py',152),
  ('statements -> statement statements','statements',2,'p_statements','sintactico.py',153),
  ('statements -> empty','statements',1,'p_statements','sintactico.py',154),
  ('statement -> fun_statement','statement',1,'p_statement','sintactico.py',170),
  ('statement -> variable_declaration','statement',1,'p_statement','sintactico.py',171),
  ('statement -> assignment','statement',1,'p_statement','sintactico.py',172),
  ('statement -> if_statement','statement',1,'p_statement','sintactico.py',173),
  ('statement -> for_statement','statement',1,'p_statement','sintactico.py',174),
  ('statement -> call_fun','statement',1,'p_statement','sintactico.py',175),
  ('statement -> import','statement',1,'p_statement','sintactico.py',176),
  ('statement -> empty','statement',1,'p_statement','sintactico.py',177),
  ('statement -> leer_arreglo','statement',1,'p_statement','sintactico.py',178),
  ('statement -> while_statement','statement',1,'p_statement','sintactico.py',179),
  ('import -> BRING ID PUNTOCOMA','import',3,'p_import','sintactico.py',188),
  ('fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',10,'p_fun_statement','sintactico.py',202),
  ('fun_statement -> ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',9,'p_fun_statement_error1','sintactico.py',225),
  ('fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',8,'p_fun_statement_error2','sintactico.py',233),
  ('fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements','fun_statement',9,'p_fun_statement_error3','sintactico.py',241),
  ('fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype statements LLAVE_CIERRE','fun_statement',9,'p_fun_statement_error4','sintactico.py',249),
  ('fun_statement -> FUN PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',9,'p_fun_statement_error5','sintactico.py',257),
  ('fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE DOSPUNTOS LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',9,'p_fun_statement_error6','sintactico.py',266),
  ('fun_statement -> FUN ID parameters PARENTESIS_CIERRE DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',9,'p_fun_statement_error7','sintactico.py',274),
  ('fun_statement -> FUN ID PARENTESIS_APERTURA parameters DOSPUNTOS datatype LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',9,'p_fun_statement_error8','sintactico.py',282),
  ('fun_statement -> FUN ID PARENTESIS_APERTURA parameters PARENTESIS_CIERRE datatype LLAVE_APERTURA statements LLAVE_CIERRE','fun_statement',9,'p_fun_statement_error9','sintactico.py',290),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',7,'p_if_statement','sintactico.py',300),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',11,'p_if_statement','sintactico.py',301),
  ('if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',6,'p_if_statement_error1','sintactico.py',311),
  ('if_statement -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error1','sintactico.py',312),
  ('if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',6,'p_if_statement_error2','sintactico.py',320),
  ('if_statement -> IF condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error2','sintactico.py',321),
  ('if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',6,'p_if_statement_error3','sintactico.py',329),
  ('if_statement -> IF PARENTESIS_APERTURA PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error3','sintactico.py',330),
  ('if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',6,'p_if_statement_error4','sintactico.py',338),
  ('if_statement -> IF PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error4','sintactico.py',339),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE','if_statement',6,'p_if_statement_error5','sintactico.py',347),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error5','sintactico.py',348),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements','if_statement',6,'p_if_statement_error6','sintactico.py',356),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements ELSE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error6','sintactico.py',357),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error7','sintactico.py',365),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE statements LLAVE_CIERRE','if_statement',10,'p_if_statement_error8','sintactico.py',373),
  ('if_statement -> IF PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE ELSE LLAVE_APERTURA statements','if_statement',10,'p_if_statement_error9','sintactico.py',381),
  ('for_statement -> FOR PARENTESIS_APERTURA variable_declaration condition PUNTOCOMA expression PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','for_statement',10,'p_for_statement','sintactico.py',391),
  ('call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA','call_fun',5,'p_call_fun','sintactico.py',400),
  ('call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA','call_fun',7,'p_call_fun','sintactico.py',401),
  ('call_fun -> PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA','call_fun',4,'p_call_fun_error1','sintactico.py',440),
  ('call_fun -> PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA','call_fun',6,'p_call_fun_error1','sintactico.py',441),
  ('call_fun -> ID expression_list PARENTESIS_CIERRE PUNTOCOMA','call_fun',4,'p_call_fun_error2','sintactico.py',449),
  ('call_fun -> ID PUNTO ID expression_list PARENTESIS_CIERRE PUNTOCOMA','call_fun',6,'p_call_fun_error2','sintactico.py',450),
  ('call_fun -> ID PARENTESIS_APERTURA expression_list PUNTOCOMA','call_fun',4,'p_call_fun_error3','sintactico.py',458),
  ('call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PUNTOCOMA','call_fun',6,'p_call_fun_error3','sintactico.py',459),
  ('call_fun -> ID PUNTO PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE PUNTOCOMA','call_fun',6,'p_call_fun_error4','sintactico.py',467),
  ('call_fun -> ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE','call_fun',4,'p_call_fun_error5','sintactico.py',475),
  ('call_fun -> ID PUNTO ID PARENTESIS_APERTURA expression_list PARENTESIS_CIERRE','call_fun',6,'p_call_fun_error5','sintactico.py',476),
  ('variable_declaration -> datatype ID ASIGNAR expression PUNTOCOMA','variable_declaration',5,'p_variable_declaration','sintactico.py',487),
  ('variable_declaration -> datatype ID ASIGNAR condition PUNTOCOMA','variable_declaration',5,'p_variable_declaration','sintactico.py',488),
  ('variable_declaration -> datatype ID PUNTOCOMA','variable_declaration',3,'p_variable_declaration','sintactico.py',489),
  ('variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA','variable_declaration',7,'p_variable_declaration','sintactico.py',490),
  ('variable_declaration -> ID PUNTOCOMA','variable_declaration',2,'p_variable_declaration_eror1','sintactico.py',530),
  ('variable_declaration -> CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA','variable_declaration',6,'p_variable_declaration_eror1','sintactico.py',531),
  ('variable_declaration -> datatype ASIGNAR expression PUNTOCOMA','variable_declaration',4,'p_variable_declarationeror2','sintactico.py',539),
  ('variable_declaration -> datatype ASIGNAR condition PUNTOCOMA','variable_declaration',4,'p_variable_declarationeror2','sintactico.py',540),
  ('variable_declaration -> datatype PUNTOCOMA','variable_declaration',2,'p_variable_declarationeror2','sintactico.py',541),
  ('variable_declaration -> datatype ID expression PUNTOCOMA','variable_declaration',4,'p_variable_declarationeror3','sintactico.py',549),
  ('variable_declaration -> datatype ID condition PUNTOCOMA','variable_declaration',4,'p_variable_declarationeror3','sintactico.py',550),
  ('variable_declaration -> datatype ID ASIGNAR expression','variable_declaration',4,'p_variable_declarationeror4','sintactico.py',558),
  ('variable_declaration -> datatype ID ASIGNAR condition','variable_declaration',4,'p_variable_declarationeror4','sintactico.py',559),
  ('variable_declaration -> datatype ID','variable_declaration',2,'p_variable_declarationeror4','sintactico.py',560),
  ('variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR expression_list','variable_declaration',6,'p_variable_declarationeror4','sintactico.py',561),
  ('variable_declaration -> datatype CORCHETE_CIERRE ID ASIGNAR expression_list PUNTOCOMA','variable_declaration',6,'p_variable_declarationeror5','sintactico.py',569),
  ('variable_declaration -> datatype CORCHETE_APERTURA ID ASIGNAR expression_list PUNTOCOMA','variable_declaration',6,'p_variable_declarationeror6','sintactico.py',577),
  ('variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ASIGNAR expression_list PUNTOCOMA','variable_declaration',6,'p_variable_declarationeror7','sintactico.py',585),
  ('variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID expression_list PUNTOCOMA','variable_declaration',6,'p_variable_declarationeror8','sintactico.py',593),
  ('variable_declaration -> datatype ID ASIGNAR PUNTOCOMA','variable_declaration',4,'p_variable_declarationeror9','sintactico.py',600),
  ('variable_declaration -> datatype CORCHETE_APERTURA CORCHETE_CIERRE ID ASIGNAR PUNTOCOMA','variable_declaration',6,'p_variable_declarationeror9','sintactico.py',601),
  ('assignment -> ID ASIGNAR expression PUNTOCOMA','assignment',4,'p_assignment','sintactico.py',610),
  ('assignment -> ID ASIGNAR condition PUNTOCOMA','assignment',4,'p_assignment','sintactico.py',611),
  ('assignment -> ASIGNAR expression PUNTOCOMA','assignment',3,'p_assignment_error1','sintactico.py',632),
  ('assignment -> ID expression PUNTOCOMA','assignment',3,'p_assignment_error2','sintactico.py',640),
  ('assignment -> ID ASIGNAR PUNTOCOMA','assignment',3,'p_assignment_error3','sintactico.py',648),
  ('assignment -> ID ASIGNAR expression','assignment',3,'p_assignment_error4','sintactico.py',656),
  ('expression_list -> expression','expression_list',1,'p_expression_list','sintactico.py',665),
  ('expression_list -> expression COMA expression_list','expression_list',3,'p_expression_list','sintactico.py',666),
  ('expression_list -> empty','expression_list',1,'p_expression_list','sintactico.py',667),
  ('leer_arreglo -> ID CORCHETE_APERTURA expression CORCHETE_CIERRE PUNTOCOMA','leer_arreglo',5,'p_leer_arreglo','sintactico.py',680),
  ('while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','while_statement',7,'p_while','sintactico.py',689),
  ('while_statement -> WHILE condition PARENTESIS_CIERRE LLAVE_APERTURA statements LLAVE_CIERRE','while_statement',6,'p_while_error1','sintactico.py',695),
  ('while_statement -> WHILE PARENTESIS_APERTURA condition LLAVE_APERTURA statements LLAVE_CIERRE','while_statement',6,'p_while_error3','sintactico.py',711),
  ('while_statement -> WHILE PARENTESIS_APERTURA condition PARENTESIS_CIERRE statements LLAVE_CIERRE','while_statement',6,'p_while_error2','sintactico.py',728),
  ('condition -> condition AND condition','condition',3,'p_condition','sintactico.py',737),
  ('condition -> condition OR condition','condition',3,'p_condition','sintactico.py',738),
  ('condition -> NOT condition','condition',2,'p_condition','sintactico.py',739),
  ('condition -> condition MENORQUE condition','condition',3,'p_condition','sintactico.py',740),
  ('condition -> condition MAYORQUE condition','condition',3,'p_condition','sintactico.py',741),
  ('condition -> condition IGUAL condition','condition',3,'p_condition','sintactico.py',742),
  ('condition -> condition DIFERENTE condition','condition',3,'p_condition','sintactico.py',743),
  ('condition -> condition MENORIGUAL condition','condition',3,'p_condition','sintactico.py',744),
  ('condition -> condition MAYORIGUAL condition','condition',3,'p_condition','sintactico.py',745),
  ('condition -> PARENTESIS_APERTURA condition PARENTESIS_CIERRE','condition',3,'p_condition','sintactico.py',746),
  ('condition -> boleano','condition',1,'p_condition','sintactico.py',747),
  ('condition -> ID','condition',1,'p_condition','sintactico.py',748),
  ('condition -> NUMERO','condition',1,'p_condition','sintactico.py',749),
  ('condition -> ENTERO','condition',1,'p_condition','sintactico.py',750),
  ('condition -> call_fun','condition',1,'p_condition','sintactico.py',751),
  ('expression -> ID','expression',1,'p_expression','sintactico.py',783),
  ('expression -> NUMERO','expression',1,'p_expression','sintactico.py',784),
  ('expression -> ENTERO','expression',1,'p_expression','sintactico.py',785),
  ('expression -> expression SUMA expression','expression',3,'p_expression','sintactico.py',786),
  ('expression -> expression RESTA expression','expression',3,'p_expression','sintactico.py',787),
  ('expression -> expression MULTIPLICACION expression','expression',3,'p_expression','sintactico.py',788),
  ('expression -> expression DIVISION expression','expression',3,'p_expression','sintactico.py',789),
  ('expression -> expression MODULO expression','expression',3,'p_expression','sintactico.py',790),
  ('expression -> expression MASIGUAL expression','expression',3,'p_expression','sintactico.py',791),
  ('expression -> expression MENOSIGUAL expression','expression',3,'p_expression','sintactico.py',792),
  ('expression -> expression DIVIGUAL expression','expression',3,'p_expression','sintactico.py',793),
  ('expression -> expression MULTIGUAL condition','expression',3,'p_expression','sintactico.py',794),
  ('expression -> PARENTESIS_APERTURA expression PARENTESIS_CIERRE','expression',3,'p_expression','sintactico.py',795),
  ('parameters -> datatype ID','parameters',2,'p_parameters','sintactico.py',804),
  ('parameters -> datatype ID COMA parameters','parameters',4,'p_parameters','sintactico.py',805),
  ('parameters -> empty','parameters',1,'p_parameters','sintactico.py',806),
  ('datatype -> VOID','datatype',1,'p_datatype','sintactico.py',816),
  ('datatype -> FLOAT','datatype',1,'p_datatype','sintactico.py',817),
  ('datatype -> INT','datatype',1,'p_datatype','sintactico.py',818),
  ('datatype -> BOOL','datatype',1,'p_datatype','sintactico.py',819),
  ('boleano -> TRUE','boleano',1,'p_boleano','sintactico.py',826),
  ('boleano -> FALSE','boleano',1,'p_boleano','sintactico.py',827),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',834),
]
